{
	"info": {
		"_postman_id": "7fbf44f2-399c-46cc-a3db-eb109afbb5ca",
		"name": "Biobanks API - 04 Data Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Data Validation",
			"item": [
				{
					"name": "[Pre-Test] Reject Queue",
					"item": [
						{
							"name": "[Pre-Test] Reject Queue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{api-url}}/{{user-biobank-id}}/reject",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"{{user-biobank-id}}",
										"reject"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Post Data",
					"item": [
						{
							"name": "Sample",
							"item": [
								{
									"name": "Post samples (materialType)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse Response Body",
													"let response = pm.response.json();",
													"",
													"// Set environment variables",
													"pm.environment.set(\"id1\", response.id);",
													"pm.environment.set(\"records1\", response.totalRecords);",
													"",
													"// Tests",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.eq(202);",
													"});",
													"",
													"pm.test(response.totalRecords + \" records were processed\", function() {",
													"    pm.expect(response.totalRecords).to.eql(67);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"samples\": [\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"cDNA/mRNA\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID0\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID1\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Faeces\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID2\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"microRNA\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID3\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Isolated Pathogens\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID4\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Peripheral blood mononuclear cells (PBMC)\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID5\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Plasma\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID6\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"PM tissue\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID7\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID8\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Saliva\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID9\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Serum\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID10\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID11\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Urine\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID12\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Whole blood\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID13\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Embryo\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID14\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Whole bone marrow\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID15\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Primary cells\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID16\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Swab\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID17\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Sputum\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID18\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Dried whole blood (e.g. Guthrie cards) DWB\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID19\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Cancer cell lines\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID20\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Immortalized cell lines\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID21\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Synovial fluid\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID22\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tears\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID23\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"(Breast) Milk\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID24\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Amniotic Fluid\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID25\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Ascites Fluid\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID26\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bile\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID27\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Body Cavity Fluid\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID28\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bone\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID29\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bone marrow aspirate\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID30\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bone Marrow Plasma\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID31\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bronchoalveolar lavage\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID32\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Buffy coat\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID33\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Cord blood\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID34\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Dental pulp PLP\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID35\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Entire body organ\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID36\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Fetal tissue\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID37\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Fibroblasts\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID38\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Gas, exhaled (=breath)\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID39\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Gastric Fluid\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID40\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Hair\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID41\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Menstrual blood\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID42\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Nail\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID43\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Nasal washing\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID44\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Pericardial Fluid\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID45\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Placenta\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID46\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Pleural fluid PFL\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID47\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Cerebrospinal fluid\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID48\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Proteins\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID49\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Red blood cells\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID50\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Semen\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID51\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Stem cells and iPS cells\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID52\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Sweat\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID53\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Teeth\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID54\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Umbilical cord\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID55\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Urine sediment\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID56\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Vitreous Fluid\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"VALID57\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Core biopsy\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"OLDVALID0\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue sample\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"OLDVALID1\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bone marrow\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"OLDVALID2\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Swabs\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"OLDVALID3\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Mucus\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"OLDVALID4\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Blood spots\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"OLDVALID5\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Pathogen\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"OLDVALID6\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Peripheral blood cells\",\r\n                \"individualReferenceId\": \"valid_materialType\",\r\n                \"barcode\": \"OLDVALID7\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"InvalidMaterialType\",\r\n                \"individualReferenceId\": \"invalid_materialType\",\r\n                \"barcode\": \"INVAL1\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										},
										"description": "**Valid Sample**\n\nSample materialType == \"RNA\"\n\nSmaple materialTypeGroup == [] (empty)"
									},
									"response": []
								},
								{
									"name": "Post samples (sampleContentMethod)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Parse Response Body",
													"let response = pm.response.json();",
													"",
													"// Set environment variables",
													"pm.environment.set(\"id2\", response.id);",
													"pm.environment.set(\"records2\", response.totalRecords);",
													"",
													"// Tests",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.eq(202);",
													"});",
													"",
													"pm.test(response.totalRecords + \" records were processed\", function() {",
													"    pm.expect(response.totalRecords).to.eql(15);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"samples\": [\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Extr\",\r\n                \"barcode\": \"VALID1\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Macro_matTypeGr_Extr\",\r\n                \"barcode\": \"VALID2\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Macroscopic Assessment\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Micro_matTypeGr_Extr\",\r\n                \"barcode\": \"VALID3\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Microscopic Assessment\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Centri_matTypeGr_Extr\",\r\n                \"barcode\": \"VALID4\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Centrifuge\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"SCM_Omit_matTypeGr_null\",\r\n                \"barcode\": \"VALID5\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"SCM_Invalid_matTypeGr_Null\",\r\n                \"barcode\": \"VALID6\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Abcd\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"SCM_empty_matTypeGr_Null\",\r\n                \"barcode\": \"VALID7\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Null\",\r\n                \"barcode\": \"VALID8\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bile\",\r\n                \"individualReferenceId\": \"SCM_Omit_matTypeGr_Fluid\",\r\n                \"barcode\": \"VALID9\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bile\",\r\n                \"individualReferenceId\": \"SCM_Invalid_matTypeGr_Fluid\",\r\n                \"barcode\": \"VALID10\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Abcd\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bile\",\r\n                \"individualReferenceId\": \"SCM_empty_matTypeGr_Fluid\",\r\n                \"barcode\": \"VALID11\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bile\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Fluid\",\r\n                \"barcode\": \"VALID12\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Extr\",\r\n                \"barcode\": \"INVAL1\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Extr\",\r\n                \"barcode\": \"INVAL2\",\r\n                \"sampleContent\": \"86273004\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Extr\",\r\n                \"barcode\": \"INVAL3\",\r\n                \"sampleContent\": \"86273004\",\r\n                \"sampleContentMethod\": \"Abcd\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post samples (extractionProcedure)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id5\",id);",
													"pm.environment.set(\"records5\",records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});",
													"",
													"//Check number of sumbission is 3",
													"tests[ \"number of samples submitted is \" + response.totalRecords + \" (5 valid field variables and 8 invalid)\"]= response.totalRecords === 13;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"samples\": [\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"(Breast) Milk\",\r\n                \"individualReferenceId\": \"MTG=Fluid_ExtrProc=omit\",\r\n                \"barcode\": \"VALID1\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"(Breast) Milk\",\r\n                \"individualReferenceId\": \"MTG=Fluid_ExtrProc=disease\",\r\n                \"barcode\": \"VALID2\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"10001005\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"MTG=Null_ExtrProc=Omit\",\r\n                \"barcode\": \"VALID3\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"MTG=Null_ExtrProc=disease\",\r\n                \"barcode\": \"VALID4\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"10001005\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"MTG=Extr_ExtrProc=ExtrProc\",\r\n                \"barcode\": \"VALID5\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"MTG=Extr_ExtrProc=Omit\",\r\n                \"barcode\": \"INVAL1\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"MTG=Extr_ExtrProc=Empty\",\r\n                \"barcode\": \"INVAL2\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"MTG=Extr_ExtrProc=Null\",\r\n                \"barcode\": \"INVAL3\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": null,\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"MTG=Extr_ExtrProc=string\",\r\n                \"barcode\": \"INVAL4\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"Abcd\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"MTG=Extr_ExtrProc=Disease\",\r\n                \"barcode\": \"INVAL5\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"10001005\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"MTG=Extr_ExtrProc=Treatment\",\r\n                \"barcode\": \"INVAL6\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"10002003\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"MTG=Extr_ExtrProc=BloodProduct\",\r\n                \"barcode\": \"INVAL7\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"119294007\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"MTG=Extr_ExtrProc=BodyOrgan\",\r\n                \"barcode\": \"INVAL8\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"1005009\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										},
										"description": "**Valid Sample**\n\nSample materialType == \"Bone BON\"\n\nSmaple materialTypeGroup == \"Tissue Sample\", \"Extracted Sample\""
									},
									"response": []
								},
								{
									"name": "Post samples (extractionSiteOntology)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id4\",id);",
													"pm.environment.set(\"records4\",records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});",
													"",
													"//Check number of sumbission is 3",
													"tests[ \"number of samples submitted is \" + response.totalRecords + \" (2 valid field variables and 5 invalid)\"]= response.totalRecords === 7;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"samples\": [\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"extrSite=valid_extrSiteOnt=null\",\r\n                \"barcode\": \"INVAL1\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": null,\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"extrSite=valid_extrSiteOnt=Omit\",\r\n                \"barcode\": \"INVAL2\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"extrSite=valid_extrSiteOnt=Empty\",\r\n                \"barcode\": \"INVAL3\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"extrSite=valid_extrSiteOnt=string\",\r\n                \"barcode\": \"INVAL4\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"Abcd\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"matType=extrSample_extrSite=bodyOrg\",\r\n                \"barcode\": \"INVAL5\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"\",\r\n                \"extractionSiteOntologyVersion\": \"\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"extrSite=valid_extrSiteOnt=Valid\",\r\n                \"barcode\": \"VALID1\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"361317000\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"matTypeGR=Null_extrSite=Empty\",\r\n                \"barcode\": \"VALID2\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionSiteOntology\": \"\",\r\n                \"extractionSiteOntologyVersion\": \"\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										},
										"description": "**Valid Sample**\n\nSample materialType == \"Saliva\"\n\nSmaple materialTypeGroup == \"Fluid Sample\""
									},
									"response": []
								},
								{
									"name": "Post samples (YOB)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id8\",response.id);",
													"pm.environment.set(\"records8\",response.totalRecords);",
													"",
													"//Check number of sumbission is 5",
													"tests[ \"number of samples submitted is \" + response.totalRecords]= response.totalRecords === 4;",
													"    ",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"samples\": [\n    {\n      \"sample\": {\n        \"materialType\": \"RNA\",\n        \"individualReferenceId\": \"Valid data AgeAtDonation = 21\",\n        \"barcode\": \"VALID1\",\n        \"ageAtDonation\": \"21\",\n        \"dateCreated\": \"2012-06-23T02:29:24-01:00\",\n        \"sex\": \"Female\",\n        \"storageTemperature\": \"Other\"\n      },\n       \"op\": \"Submit\"\n    },\n    {\n      \"sample\": {\n        \"materialType\": \"RNA\",\n        \"individualReferenceId\": \"Valid data YearOfBirth = 21\",\n        \"barcode\": \"VALID2\",\n        \"YearOfBirth\": 1997,\n        \"dateCreated\": \"2012-06-23T02:29:24-01:00\",\n        \"sex\": \"Undifferentiated\",\n        \"storageTemperature\": \"Other\"\n      },\n       \"op\": \"Submit\"\n    },\n    {\n      \"sample\": {\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"Valid data Both YearOfBirth and AgeAtDonation defined\",\n        \"barcode\": \"VALID3\",\n        \"YearOfBirth\": 2002,\n        \"ageAtDonation\": 2,\n        \"dateCreated\": \"2004-02-06T10:19:17-00:00\",\n        \"sex\": \"Male\",\n        \"storageTemperature\": \"Other\"\n     },\n      \"op\": \"Submit\"\n    },\n    {\n      \"sample\": {\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"Invalid data YOB/AAD not valid\",\n        \"barcode\": \"INVAL1\",\n        \"YearOfBirth\": 1986,\n        \"ageAtDonation\": 42,\n        \"dateCreated\": \"2004-02-06T10:19:17-00:00\",\n        \"sex\": \"Male\",\n        \"storageTemperature\": \"Other\"\n     },\n      \"op\": \"Submit\"\n    }\n  ]\n} "
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post samples (extrationSite)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id9\",response.id);",
													"pm.environment.set(\"records9\",response.totalRecords);",
													"",
													"//Check number of sumbission is 27",
													"tests[ \"number of samples submitted is \" + response.totalRecords]= response.totalRecords === 27;",
													"    ",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"samples\": [\r\n \t{\r\n      \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"valid:matType_empty_extrSite_bodyOrgan\",\r\n        \"barcode\": \"VALID1\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"361317000\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n     \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"valid:matType_empty_extrSite_empty\",\r\n        \"barcode\": \"VALID2\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"valid:matType_empty_extrSite_disease\",\r\n        \"barcode\": \"VALID3\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"36155008\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"valid:matType_empty_extrSite_treatment\",\r\n        \"barcode\": \"VALID4\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"36147001\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"valid:matType_empty_extrSite_extrProcedure\",\r\n        \"barcode\": \"VALID5\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"17636008\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"valid:matType_empty_extrSite_bloodProduct\",\r\n        \"barcode\": \"VALID6\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"119294007\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"valid:matType_empty_extrSite__null\",\r\n        \"barcode\": \"VALID7\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": null,\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"Nail\",\r\n        \"individualReferenceId\": \"valid:matType_extrSample_extrSite_bodyOrgan\",\r\n        \"barcode\": \"VALID8\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"361317000\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"Bile\",\r\n        \"individualReferenceId\": \"matType_fluidSample_extrSite_bodyOrgan\",\r\n        \"barcode\": \"VALID9\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"361317000\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n     \"sample\": {\r\n        \"materialType\": \"Bile\",\r\n        \"individualReferenceId\": \"matType_fluidSample_extrSite_empty\",\r\n        \"barcode\": \"VALID10\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"Bile\",\r\n        \"individualReferenceId\": \"matType_fluidSample_extrSite_disease\",\r\n        \"barcode\": \"VALID11\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"36155008\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"availability\": [\r\n          \"Outside EU access\"\r\n        ],\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"Bile\",\r\n        \"individualReferenceId\": \"matType_fluidSample_extrSite_treatment\",\r\n        \"barcode\": \"VALID12\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"36147001\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"valid:matType_empty_extrSite__invalid\",\r\n        \"barcode\": \"VALID13\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"Abcd\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"valid:matType_empty_extrSite__Omit\",\r\n        \"barcode\": \"VALID14\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n     {\r\n        \"sample\": {\r\n        \"materialType\": \"Bile\",\r\n        \"individualReferenceId\": \"matType_fluidSample_extrSite_extrProcedure\",\r\n        \"barcode\": \"VALID15\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"17636008\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"Bile\",\r\n        \"individualReferenceId\": \"matType_fluidSample_extrSite_bloodProduct\",\r\n        \"barcode\": \"VALID16\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"119294007\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"Bile\",\r\n        \"individualReferenceId\": \"matType_fluidSample_extrSite_null\",\r\n        \"barcode\": \"VALID17\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": null,\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"Bile\",\r\n        \"individualReferenceId\": \"matType_fluidSample_extrSite_Omit\",\r\n        \"barcode\": \"VALID18\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"Bile\",\r\n        \"individualReferenceId\": \"matType_fluidSample_extrSite_invalid\",\r\n        \"barcode\": \"VALID19\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"Abcd\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n     \"sample\": {\r\n        \"materialType\": \"Nail\",\r\n        \"individualReferenceId\": \"Invalid:matType_extrSample_extrSite_empty\",\r\n        \"barcode\": \"INVAL1\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"Nail\",\r\n        \"individualReferenceId\": \"Invalid:matType_extrSample_extrSite_disease\",\r\n        \"barcode\": \"INVAL2\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"36155008\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"Nail\",\r\n        \"individualReferenceId\": \"Invalid:matType_extrSample_extrSite_treatment\",\r\n        \"barcode\": \"INVAL3\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"36147001\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"Nail\",\r\n        \"individualReferenceId\": \"Invalid:matType_extrSample_extrSite_extrProcedure\",\r\n        \"barcode\": \"INVAL4\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"17636008\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"Nail\",\r\n        \"individualReferenceId\": \"Invalid:matType_extrSample_extrSite_bloodProduct\",\r\n        \"barcode\": \"INVAL5\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"119294007\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n     \"sample\": {\r\n        \"materialType\": \"Nail\",\r\n        \"individualReferenceId\": \"Invalid:matType_extrSample_extrSite_null\",\r\n        \"barcode\": \"INVAL6\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": null,\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n     \"sample\": {\r\n        \"materialType\": \"Nail\",\r\n        \"individualReferenceId\": \"Invalid:matType_extrSample_extrSite_omit\",\r\n        \"barcode\": \"INVAL7\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n     \"sample\": {\r\n        \"materialType\": \"Nail\",\r\n        \"individualReferenceId\": \"Invalid:matType_extrSample_extrSite_invalid\",\r\n        \"barcode\": \"INVAL8\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n\t\t\"extractionSite\": \"Abcd\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"25179006\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post samples (extractionOntologyVersion)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id10\",response.id);",
													"pm.environment.set(\"records10\",response.totalRecords);",
													"",
													"//Check number of sumbission is 8",
													"tests[ \"number of samples submitted is \" + response.totalRecords]= response.totalRecords === 8;",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"individualReferenceId\": \"extrSite=valid_extrSiteOnt=null\",\r\n        \"barcode\": \"INVAL1\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"361317000\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": null,\r\n        \"extractionProcedure\": \"387713003\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"individualReferenceId\": \"extrSite=valid_extrSiteOnt=Omit\",\r\n        \"barcode\": \"INVAL2\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"361317000\",\r\n\t\t\"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionProcedure\": \"387713003\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"individualReferenceId\": \"extrSite=valid_extrSiteOnt=Empty\",\r\n        \"barcode\": \"INVAL3\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"361317000\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"\",\r\n        \"extractionProcedure\": \"387713003\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"individualReferenceId\": \"extrSite=valid_extrSiteOnt=string\",\r\n        \"barcode\": \"INVAL4\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"361317000\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"Abcd\",\r\n        \"extractionProcedure\": \"387713003\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"individualReferenceId\": \"matType=extrSample_extrSite=bodyOrg\",\r\n        \"barcode\": \"INVAL5\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"361317000\",\r\n        \"extractionSiteOntology\": \"\",\r\n        \"extractionSiteOntologyVersion\": \"\",\r\n        \"extractionProcedure\": \"387713003\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"individualReferenceId\": \"extrSite=valid_extrSiteOnt=Valid\",\r\n        \"barcode\": \"VALID1\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"361317000\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"387713003\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"individualReferenceId\": \"matTypeGR=Null_extrSite=Empty\",\r\n        \"barcode\": \"VALID2\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"361317000\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"387713003\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"individualReferenceId\": \"matType=extrSample_extrSite=bodyOrg\",\r\n        \"barcode\": \"VALID3\",\r\n        \"sampleContent\": \"10058006\",\r\n        \"sampleContentMethod\": \"Other\",\r\n        \"extractionSite\": \"361317000\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"extractionProcedure\": \"387713003\",\r\n        \"YearOfBirth\": 1996,\r\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post samples (sex)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id11\",response.id);",
													"pm.environment.set(\"records11\",response.totalRecords);",
													"",
													"//Check number of sumbission is 8",
													"tests[ \"number of samples submitted is \" + response.totalRecords + \" (6 valid field variables and 2 invalid)\"]= response.totalRecords === 8;",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"samples\": [\n    {\n      \"sample\": {\n        \"materialType\": \"RNA\",\n        \"individualReferenceId\": \"Sex = Male\",\n        \"barcode\": \"VALID1\",\n        \"YearOfBirth\": 1997,\n        \"dateCreated\": \"2012-06-23T02:29:24-01:00\",\n        \"sex\": \"Male\",\n        \"storageTemperature\": \"Other\"\n      },\n       \"op\": \"Submit\"\n    },\n    {\n      \"sample\": {\n        \"materialType\": \"RNA\",\n        \"individualReferenceId\": \"Sex = Female\",\n        \"barcode\": \"VALID2\",\n        \"YearOfBirth\": 1997,\n        \"dateCreated\": \"2012-06-23T02:29:24-01:00\",\n        \"sex\": \"Female\",\n        \"storageTemperature\": \"Other\"\n      },\n       \"op\": \"Submit\"\n    },\n    {\n      \"sample\": {\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"Sex = Unknown\",\n        \"barcode\": \"VALID3\",\n        \"YearOfBirth\": 1948,\n        \"dateCreated\": \"2004-02-06T10:19:17-00:00\",\n        \"sex\": \"Unknown\",\n        \"storageTemperature\": \"Other\"\n     },\n      \"op\": \"Submit\"\n    },\n    {\n      \"sample\": {\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"Sex = Undifferentiated\",\n        \"barcode\": \"VALID4\",\n        \"YearOfBirth\": 1948,\n        \"dateCreated\": \"2004-02-06T10:19:17-00:00\",\n        \"sex\": \"Undifferentiated\",\n        \"storageTemperature\": \"Other\"\n     },\n      \"op\": \"Submit\"\n    },\n    {\n      \"sample\": {\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"Sex = Null\",\n        \"barcode\": \"VALID5\",\n        \"YearOfBirth\": 1948,\n        \"dateCreated\": \"2004-02-06T10:19:17-00:00\",\n        \"sex\": null,\n        \"storageTemperature\": \"Other\"\n     },\n      \"op\": \"Submit\"\n    }  ,\n    {\n      \"sample\": {\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"Sex = Omit\",\n        \"barcode\": \"VALID6\",\n        \"YearOfBirth\": 1948,\n        \"dateCreated\": \"2004-02-06T10:19:17-00:00\",\n        \"storageTemperature\": \"Other\"\n     },\n      \"op\": \"Submit\"\n    },\n    {\n      \"sample\": {\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"Sex = empty\",\n        \"barcode\": \"VALID7\",\n        \"YearOfBirth\": 1948,\n        \"dateCreated\": \"2004-02-06T10:19:17-00:00\",\n        \"sex\": \"\",\n        \"storageTemperature\": \"Other\"\n     },\n      \"op\": \"Submit\"\n    },\n    {\n      \"sample\": {\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"Sex = string\",\n        \"barcode\": \"INVAL1\",\n        \"YearOfBirth\": 1948,\n        \"dateCreated\": \"2004-02-06T10:19:17-00:00\",\n        \"sex\": \"Abcd\",\n        \"storageTemperature\": \"Other\"\n     },\n      \"op\": \"Submit\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post samples (sampleContent)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id12\",response.id);",
													"pm.environment.set(\"records12\",response.totalRecords);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Response is 202 Accepted\", () => {",
													"    pm.expect(pm.response.code).to.be.eq(202);",
													"});",
													"",
													"pm.test(\"All samples submitted\", () => {",
													"    pm.expect(response.totalRecords).to.be.eq(15);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"samples\": [\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Extr\",\r\n                \"barcode\": \"VALID1\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Macro_matTypeGr_Extr\",\r\n                \"barcode\": \"VALID2\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Macroscopic Assessment\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Micro_matTypeGr_Extr\",\r\n                \"barcode\": \"VALID3\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Microscopic Assessment\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Centri_matTypeGr_Extr\",\r\n                \"barcode\": \"VALID4\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Centrifuge\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"SCM_Omit_matTypeGr_null\",\r\n                \"barcode\": \"VALID5\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"SCM_Invalid_matTypeGr_Null\",\r\n                \"barcode\": \"VALID6\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Abcd\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"SCM_empty_matTypeGr_Null\",\r\n                \"barcode\": \"VALID7\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Null\",\r\n                \"barcode\": \"VALID8\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bile\",\r\n                \"individualReferenceId\": \"SCM_Omit_matTypeGr_Fluid\",\r\n                \"barcode\": \"VALID9\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bile\",\r\n                \"individualReferenceId\": \"SCM_Invalid_matTypeGr_Fluid\",\r\n                \"barcode\": \"VALID10\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Abcd\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bile\",\r\n                \"individualReferenceId\": \"SCM_empty_matTypeGr_Fluid\",\r\n                \"barcode\": \"VALID11\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Bile\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Fluid\",\r\n                \"barcode\": \"VALID12\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"sampleContentMethod\": \"Other\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Extr\",\r\n                \"barcode\": \"INVAL1\",\r\n                \"sampleContent\": \"10058006\",\r\n                \"extractionProcedure\": \"86273004\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Extr\",\r\n                \"barcode\": \"INVAL2\",\r\n                \"sampleContent\": \"86273004\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"materialType\": \"Tissue specimen\",\r\n                \"individualReferenceId\": \"SCM_Other_matTypeGr_Extr\",\r\n                \"barcode\": \"INVAL3\",\r\n                \"sampleContent\": \"86273004\",\r\n                \"sampleContentMethod\": \"Abcd\",\r\n                \"extractionProcedure\": \"25179006\",\r\n                \"extractionSite\": \"1005009\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"YearOfBirth\": 1996,\r\n                \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post samples (storageTemperature)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id13\",response.id);",
													"pm.environment.set(\"records13\",response.totalRecords);",
													"",
													"// Tests",
													"pm.test(\"Status is 202 Accepted\", () => {",
													"    pm.expect(pm.response.code).to.be.eq(202)",
													"});",
													"",
													"pm.test(\"11 Samples Submitted\", () => {",
													"    pm.expect(response.totalRecords).to.be.eq(11)",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"individualReferenceId\": \"20a2aab2-1be3-40da-b664-5958daf61a06\",\r\n        \"barcode\": \"VALID0\",\r\n        \"YearOfBirth\": 1997,\r\n        \"dateCreated\": \"2018-09-27T03:23:25-01:00\",\r\n        \"extractionCodeOntology\": \"SNOMED-CT\",\r\n        \"extractionCodeOntologyVersion\": 25,\r\n        \"materialType\": \"DNA\",\r\n        \"storageTemperature\": \"RT\",\r\n        \"sex\": \"Male\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"individualReferenceId\": \"7e178b82-1c9f-4c86-b56b-177082ba7475\",\r\n        \"barcode\": \"VALID2\",\r\n        \"YearOfBirth\": 1920,\r\n        \"dateCreated\": \"2017-06-01T07:17:07-01:00\",\r\n        \"extractionCodeOntology\": \"SNOMED-CT\",\r\n        \"extractionCodeOntologyVersion\": 25,\r\n        \"materialType\": \"DNA\",\r\n        \"storageTemperature\": \"2°C to 10°C\",\r\n        \"sex\": \"\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"individualReferenceId\": \"b5de9ebf-3dfa-492f-a294-37c045b0d35b\",\r\n        \"barcode\": \"VALID3\",\r\n        \"YearOfBirth\": 1927,\r\n        \"dateCreated\": \"2001-07-06T06:49:33-01:00\",\r\n        \"extractionCodeOntology\": \"SNOMED-CT\",\r\n        \"extractionCodeOntologyVersion\": 25,\r\n        \"materialType\": \"DNA\",\r\n        \"storageTemperature\": \"-18°C to -35°C\",\r\n        \"sex\": \"\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"individualReferenceId\": \"5c239ebd-9471-4d93-8225-ff5a0862765f\",\r\n        \"barcode\": \"VALID4\",\r\n        \"YearOfBirth\": 1992,\r\n        \"dateCreated\": \"2011-03-05T02:45:45-00:00\",\r\n        \"extractionCodeOntology\": \"SNOMED-CT\",\r\n        \"extractionCodeOntologyVersion\": 25,\r\n        \"materialType\": \"DNA\",\r\n        \"storageTemperature\": \"-60°C to -85°C\",\r\n        \"sex\": \"Undifferentiated\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"individualReferenceId\": \"14d2d2df-c722-4105-b40c-ae93bf2427b3\",\r\n        \"barcode\": \"VALID5\",\r\n        \"YearOfBirth\": 1994,\r\n        \"dateCreated\": \"2010-04-23T12:39:53-01:00\",\r\n        \"extractionCodeOntology\": \"SNOMED-CT\",\r\n        \"extractionCodeOntologyVersion\": 25,\r\n        \"materialType\": \"DNA\",\r\n        \"storageTemperature\": \"Liquid nitrogen liquid phase\",\r\n        \"sex\": \"Undifferentiated\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n        \"sample\": {\r\n          \"individualReferenceId\": \"65d2d3de-c722-1550-b85e-df93bf8527b3\",\r\n          \"barcode\": \"VALID5\",\r\n          \"YearOfBirth\": 1994,\r\n          \"dateCreated\": \"2010-04-23T12:39:53-01:00\",\r\n          \"extractionCodeOntology\": \"SNOMED-CT\",\r\n          \"extractionCodeOntologyVersion\": 25,\r\n          \"materialType\": \"DNA\",\r\n          \"storageTemperature\": \"Liquid nitrogen vapor phase\",\r\n          \"sex\": \"Undifferentiated\"\r\n        },\r\n        \"op\": \"submit\"\r\n      },\r\n    {\r\n      \"sample\": {\r\n        \"individualReferenceId\": \"8641cd0a-a7c0-4f86-bcb4-8c74c9e41616\",\r\n        \"barcode\": \"VALID6\",\r\n        \"YearOfBirth\": 1922,\r\n        \"dateCreated\": \"2012-11-26T12:28:52-00:00\",\r\n        \"extractionCodeOntology\": \"SNOMED-CT\",\r\n        \"extractionCodeOntologyVersion\": 25,\r\n        \"materialType\": \"DNA\",\r\n        \"storageTemperature\": \"Other\",\r\n        \"sex\": \"Male\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n        \"sample\": {\r\n          \"individualReferenceId\": \"8641cd0a-a7c0-4f86-bcb4-asdasdeqweq\",\r\n          \"barcode\": \"OLDVALID0\",\r\n          \"YearOfBirth\": 1922,\r\n          \"dateCreated\": \"2012-11-26T12:28:52-00:00\",\r\n          \"extractionCodeOntology\": \"SNOMED-CT\",\r\n          \"extractionCodeOntologyVersion\": 25,\r\n          \"materialType\": \"DNA\",\r\n          \"storageTemperature\": \"Paraffin\",\r\n          \"sex\": \"Male\"\r\n        },\r\n        \"op\": \"submit\"\r\n    },\r\n    {\r\n        \"sample\": {\r\n          \"individualReferenceId\": \"8641cd0a-a7c0-4f86-bcb4-143werdaw\",\r\n          \"barcode\": \"OLDVALID1\",\r\n          \"YearOfBirth\": 1922,\r\n          \"dateCreated\": \"2012-11-26T12:28:52-00:00\",\r\n          \"extractionCodeOntology\": \"SNOMED-CT\",\r\n          \"extractionCodeOntologyVersion\": 25,\r\n          \"materialType\": \"DNA\",\r\n          \"storageTemperature\": \"Resin (LM)\",\r\n          \"sex\": \"Male\"\r\n        },\r\n        \"op\": \"submit\"\r\n    },\r\n    {\r\n        \"sample\": {\r\n          \"individualReferenceId\": \"8641cd0a-a7c0-4f86-bcb4-81726342\",\r\n          \"barcode\": \"OLDVALID2\",\r\n          \"YearOfBirth\": 1922,\r\n          \"dateCreated\": \"2012-11-26T12:28:52-00:00\",\r\n          \"extractionCodeOntology\": \"SNOMED-CT\",\r\n          \"extractionCodeOntologyVersion\": 25,\r\n          \"materialType\": \"DNA\",\r\n          \"storageTemperature\": \"Resin (EM)\",\r\n          \"sex\": \"Male\"\r\n        },\r\n        \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"individualReferenceId\": \"Invalid storage Temperature\",\r\n        \"barcode\": \"INVAL1\",\r\n        \"YearOfBirth\": 1974,\r\n        \"ageAtDonation\": \"\",\r\n        \"extractionSite\": \"\",\r\n        \"extractionProcedure\": \"\",\r\n        \"sampleContent\": \"\",\r\n        \"sampleContentMethod\": \"\",\r\n        \"dateCreated\": \"2006-05-17T11:46:28-01:00\",\r\n        \"extractionCodeOntology\": \"SNOMED-CT\",\r\n        \"extractionCodeOntologyVersion\": 25,\r\n        \"materialType\": \"Cancer cell lines\",\r\n        \"storageTemperature\": \"abcd\",\r\n        \"sex\": \"Unknown\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post samples (collectionName)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id14\",id);",
													"pm.environment.set(\"records14\", records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});",
													"",
													"pm.test(\"Number of records is \"+response.totalRecords, function () {",
													"    pm.expect(response.totalRecords).to.eql(6);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"samples\": [\n    {\n      \"sample\": {\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"collectionName_omitted\",\n        \"barcode\": \"VALID1\",\n        \"sampleContent\": \"10058006\",\n        \"sampleContentMethod\": \"Other\",\n        \"extractionSite\": \"361317000\",\n        \"extractionSiteOntology\": \"SNOMED-CT\",\n        \"extractionSiteOntologyVersion\": \"25\",\n        \"extractionProcedure\": \"25179006\",\n        \"YearOfBirth\": 1996,\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\n        \"storageTemperature\": \"Other\"\n      },\n      \"op\": \"submit\"\n    },\n    {\n      \"sample\": {\n      \t\"collectionName\": \"\",\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"collectionName_empty\",\n        \"barcode\": \"VALID2\",\n        \"sampleContent\": \"10058006\",\n        \"sampleContentMethod\": \"Other\",\n        \"extractionSite\": \"361317000\",\n        \"extractionSiteOntology\": \"SNOMED-CT\",\n        \"extractionSiteOntologyVersion\": \"25\",\n        \"extractionProcedure\": \"25179006\",\n        \"YearOfBirth\": 1996,\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\n        \"storageTemperature\": \"Other\"\n      },\n      \"op\": \"submit\"\n    },\n    {\n      \"sample\": {\n      \t\"collectionName\": null,\n      \t\"materialType\": \"DNA\",\n        \"individualReferenceId\": \"collectionName_Null\",\n        \"barcode\": \"VALID3\",\n        \"sampleContent\": \"10058006\",\n        \"sampleContentMethod\": \"Other\",\n        \"extractionSite\": \"361317000\",\n        \"extractionSiteOntology\": \"SNOMED-CT\",\n        \"extractionSiteOntologyVersion\": \"25\",\n        \"extractionProcedure\": \"25179006\",\n        \"YearOfBirth\": 1996,\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\n        \"storageTemperature\": \"Other\"\n      },\n      \"op\": \"submit\"\n    },\n    {\n      \"sample\": {\n      \t\"collectionName\": \"Test Collection\",\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"collectionName_valid\",\n        \"barcode\": \"VALID4\",\n        \"sampleContent\": \"10058006\",\n        \"sampleContentMethod\": \"Other\",\n        \"extractionSite\": \"361317000\",\n        \"extractionSiteOntology\": \"SNOMED-CT\",\n        \"extractionSiteOntologyVersion\": \"25\",\n        \"extractionProcedure\": \"25179006\",\n        \"YearOfBirth\": 1996,\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\n        \"storageTemperature\": \"Other\"\n      },\n      \"op\": \"submit\"\n    },\n    {\n      \"sample\": {\n      \t\"collectionName\": \"1111111111aaaaaaaaaa!!!!!!!!!!BBBBBBBBBB2222222222££££££££££cccccccccc3333333333$$$$$$$$$$44444444441111111111aaaaaaaaaa!!!!!!!!!!BBBBBBBBBB2222222222££££££££££cccccccccc3333333333$$$$$$$$$$44444444441111111111aaaaaaaaaa!!!!!!!!!!BBBBBBBBBB222222222\",\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"collectionName_249\",\n        \"barcode\": \"VALID5\",\n        \"sampleContent\": \"10058006\",\n        \"sampleContentMethod\": \"Other\",\n        \"extractionSite\": \"361317000\",\n        \"extractionSiteOntology\": \"SNOMED-CT\",\n        \"extractionSiteOntologyVersion\": \"25\",\n        \"extractionProcedure\": \"25179006\",\n        \"YearOfBirth\": 1996,\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\n        \"storageTemperature\": \"Other\"\n      },\n      \"op\": \"submit\"\n    },\n    {\n      \"sample\": {\n      \t\"collectionName\": \"1111111111aaaaaaaaaa!!!!!!!!!!BBBBBBBBBB2222222222££££££££££cccccccccc3333333333$$$$$$$$$$44444444441111111111aaaaaaaaaa!!!!!!!!!!BBBBBBBBBB2222222222££££££££££cccccccccc3333333333$$$$$$$$$$44444444441111111111aaaaaaaaaa!!!!!!!!!!BBBBBBBBBB2222222222\",\n        \"materialType\": \"DNA\",\n        \"individualReferenceId\": \"collectionName_250\",\n        \"barcode\": \"VALID6\",\n        \"sampleContent\": \"10058006\",\n        \"sampleContentMethod\": \"Other\",\n        \"extractionSite\": \"361317000\",\n        \"extractionSiteOntology\": \"SNOMED-CT\",\n        \"extractionSiteOntologyVersion\": \"25\",\n        \"extractionProcedure\": \"25179006\",\n        \"YearOfBirth\": 1996,\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\n        \"storageTemperature\": \"Other\"\n      },\n      \"op\": \"submit\"\n    }\n  ]\n} "
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "materialType:\nField is mandatory.\nString data type.\nMust provide one value from reference data in spreadsheet linked in description - Material Type sheet.\nMust reject samples which don't provide a value for this field.\nMust reject samples which provide an invalid value for this field.\n\n#9245 RECEIVE DATA  - DATA MODEL CHANGE SamplecontentMethod\n\nBased on submitted 'materialType' value - if the material type's materialTypeGroup is not empty and is 'Extracted Sample', and the 'SampleContent' field is not empty, then this field is required.\nMust provide a valid Samplecontent value from reference data (Sample Content Methods tab in the data mapping spreadsheet_.\nMust reject any samples which have materialTypeGroup of 'Extracted Sample' and a non-empty 'SampleContent' which don't provide a value for this field.\nMust reject any samples which have materialTypeGroup of 'Extracted Sample' and a non-empty 'SampleContent' which provide an invalid value for this field.\n\n\n#9241 RECEIVE DATA  - DATA MODEL CHANGE extractionSiteOntology\n\nRequired field.\nValid values are currently only the string 'SNOMED-CT'.\nMust reject any samples which do not provide a value for this field.\nMust reject any samples which provide an invalid value for this field.\n\n#9243 RECEIVE DATA  - DATA MODEL CHANGE extractionProcedure\n\nBased on submitted 'materialType' value - if the material type's materialTypeGroup is not empty and is 'Extracted Sample', then this field is required.\nMust provide a valid extractionProcedure value from reference data (SNOMED-CT terms currently only, where SnomedTag is 'Extraction Procedure').\nMust reject any samples which have materialTypeGroup of 'Extracted Sample' which don't provide a value for this field.\nMust reject any samples which have materialTypeGroup of 'Extracted Sample' which provide an invalid value for this field.\n\nYOB/AAD:\nDescription: \nThis field currently exists but more validation is required.\n\nIf this information is provided, use this to calculate what the ' age at donation' would be. If 'Age at Donation' is not provided, use year of birth to calculate and populate 'Age at Donation'. If 'Age at Donation' isn't provided, use 'Year of Birth' to confirm 'Age at Donation' data is correct. If this is the same (within 1 year tolerance), then do nothing. If different, provide prompt message of error to confirm difference and allow user to amend.\n\nWhere 'Age at Donation' is not provided, 'Year of Birth' is mandatory.\n\nAcceptance Criteria:\n\nMust always specify yearOfBirth or ageAtDonation.\nIf ageAtDonation is not provided, yearOfBirth must be provided.\nIf ageatdonation is not provided, yearOfBirth will be used to calculate ageatdonation.\nIf both are provided, yearOfBirth will be used to determine whether ageAtDonation is correct or not (within a 365 day tolerance). If ageAtDonation is incorrect by this calculation, an error is added and the batch is not processed. \nIf neither field are specified, the batch is rejected immediately. \n\nExtraction Site:\nDescription:\n\nWith the change in Material Types and mapped groupings, we want to ensure that when Material Type Group is 'Tissue Sample' then the field is required.\n\n(reference Data mapping table)\n\nAcceptance Criteria:\n\nBased on submitted 'materialType' value - if the material type's materialTypeGroup is not empty and is 'Tissue Sample', then this field is required.\nMust provide a valid extractionSite value from reference data (SNOMED-CT terms currently only).\nMust reject any samples which have materialTypeGroup of Tissue Sample which don't provide a value for this field.\nMust reject any samples which have materialTypeGroup of Tissue Sample which provide an invalid value for this field.\n\nExtraction Ontology Version:\nDescription:\n\nCurrent only valid version is for SNOMED-CT, which is '25'.\n\n\nRequired field.\nValid values are currently only the string '25'.\nMust reject any samples which do not provide a value for this field.\nMust reject any samples which provide an invalid value for this field.\n\nSex:\nOptional field.\n\nValid values are in the 'UKTD Data Model' sheet in the data mapping spreadsheet: https://uniofnottm.sharepoint.com/%3Ax%3A/s/BiobanksIII/EamkVNHK6XdDtm-YB-OoCmYBaWo5TCh7t93F510aVxroZg?e=diPtgG (male, female, unknown, undifferentiated).\n\nAcceptance Critera:\n\nOptional field.\nMust accept any valid value (male, female, unknown, undifferentiated).\nMust reject any samples where an invalid value is specified.\n\nSample Content:\nChange - to update mapping of new Matrial Type list groupings to SNOMED terms.\n\nMust be one from SNOMED-CT terms (current list). Optional field but mandatory where 'Extracted Sample' provided as MaterialType Group and also if \"SampleContentMethod\" provided.\n\n\nAcceptance Criteria: \n\nBased on submitted 'materialType' value - if the material type's materialTypeGroup is not empty and is 'Extracted Sample', and the 'SampleContentMethod' field is not empty, then this field is required.\n\nMust provide a valid Samplecontent value from reference data (SNOMED-CT terms currently only).\n\nMust reject any samples which have materialTypeGroup of 'Extracted Sample' and a non-empty 'SampleContentMethod' which don't provide a value for this field.\n\nMust reject any samples which have materialTypeGroup of 'Extracted Sample' and a non-empty 'SampleContentMethod' which provide an invalid value for this field.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Treatment",
							"item": [
								{
									"name": "Post treatment (treatmentCode)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id17\",response.id);",
													"pm.environment.set(\"records17\",response.totalRecords);",
													"",
													"//Check number of sumbission is 5",
													"tests[ \"number of samples submitted is \" + response.totalRecords + \" (1 valid field variables and 6 invalid)\"]= response.totalRecords === 7;",
													"    ",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n\t\t\"individualReferenceId\": \"VALID1\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n      },\r\n     \"op\": \"Submit\"\r\n    },\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"INVAL1\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"10001005\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\" \r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n     {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"INVAL2\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"1005009\", \r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\" \r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"INVAL3\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"119294007\", \r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\" \r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"INVAL4\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"25179006\", \r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\" \r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"INVAL5\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"Abcd\", \r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\" \r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"INVAL6\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"12345\", \r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\" \r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post treatment (treatmentLocation)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id18\",response.id);",
													"pm.environment.set(\"records18\",response.totalRecords);",
													"",
													"//Check number of sumbission is 5",
													"tests[ \"number of samples submitted is \" + response.totalRecords]= response.totalRecords === 4;",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"treatments\": [\n    {\n      \"treatment\": {\n\t\t\"individualReferenceId\": \"VALID1\",\n        \"treatmentLocation\": \"Oral Medication\",\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\n        \"treatmentCode\": \"10090001\",\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\n        \"treatmentCodeOntologyVersion\": \"25\"\n      },\n     \"op\": \"Submit\"\n    },\n    {\n      \"treatment\": {\n\t\t\"individualReferenceId\": \"VALID2\",\n        \"treatmentLocation\": \"Targeted Radiotherapy\",\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\n        \"treatmentCode\": \"10090001\",\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\n        \"treatmentCodeOntologyVersion\": \"25\"\n      },\n     \"op\": \"Submit\"\n    },\n    {\n      \"treatment\": {\n\t\t\"individualReferenceId\": \"VALID3\",\n        \"treatmentLocation\": \"Other\",\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\n        \"treatmentCode\": \"10090001\",\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\n        \"treatmentCodeOntologyVersion\": \"25\"\n      },\n     \"op\": \"Submit\"\n    },\n     {\n      \"treatment\": {\n        \"individualReferenceId\": \"INVAL1\",\n        \"treatmentLocation\": \"Abcd\",\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\n        \"treatmentCode\": \"10090001\",\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\n        \"treatmentCodeOntologyVersion\": \"25\" \n      },\n      \"op\": \"submit\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post treatment (treatmentCodeOntology)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id6\",response.id);",
													"pm.environment.set(\"records6\",response.totalRecords);",
													"",
													"//Check number of sumbission is 5",
													"tests[ \"number of samples submitted is \" + response.totalRecords + \" (1 valid field variables and 1 invalid)\"]= response.totalRecords === 2;",
													"    ",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"treatments\": [\n    {\n      \"treatment\": {\n\t\t\"individualReferenceId\": \"VALID1\",\n        \"treatmentLocation\": \"Oral Medication\",\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\n        \"treatmentCode\": \"10090001\",\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\n        \"treatmentCodeOntologyVersion\": \"25\"\n      },\n     \"op\": \"Submit\"\n    },\n    {\n      \"treatment\": {\n        \"individualReferenceId\": \"INVAL1\",\n        \"treatmentLocation\": \"Oral Medication\",\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\n        \"treatmentCode\": \"10090001\",\n        \"treatmentCodeOntology\": \"Abcd\",\n        \"treatmentCodeOntologyVersion\": \"25\" \n      },\n      \"op\": \"submit\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post treatment (treatmentCodeOntologyVersion)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id7\",response.id);",
													"pm.environment.set(\"records7\",response.totalRecords);",
													"",
													"//Check number of sumbission is 5",
													"tests[ \"number of samples submitted is \" + response.totalRecords]= response.totalRecords === 2;",
													"    ",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"treatments\": [\n    {\n      \"treatment\": {\n\t\t\"individualReferenceId\": \"VALID1\",\n        \"treatmentLocation\": \"Oral Medication\",\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\n        \"treatmentCode\": \"10090001\",\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\n        \"treatmentCodeOntologyVersion\": \"25\"\n      },\n     \"op\": \"Submit\"\n    },\n    {\n      \"treatment\": {\n        \"individualReferenceId\": \"INVAL1\",\n        \"treatmentLocation\": \"Oral Medication\",\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\n        \"treatmentCode\": \"10090001\",\n        \"treatmentCodeOntology\": \"SNOMED-CT\", \n        \"treatmentCodeOntologyVersion\": \"15\"\n      },\n      \"op\": \"submit\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "Treatment Code Ontology: \nDescription:\n\nNew field of TreatmentCodeOntology in the Treatment Object. Validation rules is that there is a string option of either 'SNOMED-CT'. \n\nAcceptance Critera:\n\nRequired for treatment objects.\nShould only accept valid terms 'SNOMED-CT'.\nShould reject invalid object.\n\nTreatment Code Ontology Version:\nDescription:\n\nTreatment Ontology Version to be 25 only.\nMandatory where Treatment object data is submitted.\n(reference data mapping spreadsheet 0.7)\n\nAcceptance Critera: \n\nRequired for treatment objects.\nMust be a valid specified value - currently only '25' will be accepted. \nShould reject invalid values.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Diagnosis",
							"item": [
								{
									"name": "Post diagnosis (DiagnosisCode)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json();",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"",
													"pm.environment.set(\"id3\", id);",
													"pm.environment.set(\"records3\", records);",
													"",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, () => {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});",
													"",
													"pm.test(\"Correct number of samples submitted (6 valid and 1 invalid)\", () => {",
													"    pm.expect(records).to.eq(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"VALID1\",\r\n        \"dateDiagnosed\": \"2016-04-14T09:15:46\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"INVAL1\",\r\n        \"dateDiagnosed\": \"2016-04-14T07:15:46\",\r\n        \"diagnosisCode\": \"10002003\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"INVAL2\",\r\n        \"dateDiagnosed\": \"2016-04-14T09:15:46\",\r\n        \"diagnosisCode\": \"1005009\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"INVAL3\",\r\n        \"dateDiagnosed\": \"2016-04-14T09:16:46\",\r\n        \"diagnosisCode\": \"119294007\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"INVAL4\",\r\n        \"dateDiagnosed\": \"2016-04-14T09:18:46\",\r\n        \"diagnosisCode\": \"25179006\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"INVAL5\",\r\n        \"dateDiagnosed\": \"2016-04-14T09:19:46\",\r\n        \"diagnosisCode\": \"Abcd\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n\t{\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"INVAL6\",\r\n        \"dateDiagnosed\": \"2016-04-14T09:20:46\",\r\n        \"diagnosisCode\": \"1234\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post diagnosis (DiagnosisCodeOntology)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json();",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"",
													"pm.environment.set(\"id15\", id);",
													"pm.environment.set(\"records15\", records);",
													"",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, () => {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});",
													"",
													"pm.test(\"Correct number of samples submitted\", () => {",
													"    pm.expect(records).to.eq(2);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"diagnoses\": [\n    {\n      \"diagnosis\": {\n        \"individualReferenceId\": \"VAL1\",\n        \"dateDiagnosed\": \"2016-04-14T10:15:46\",\n        \"diagnosisCode\": \"10001005\",\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\n        \"DiagnosisCodeOntologyVersion\": \"25\"\n      },\n      \"op\": \"submit\"\n    },\n\t{\n      \"diagnosis\": {\n        \"individualReferenceId\": \"INVAL1\",\n        \"dateDiagnosed\": \"2016-04-14T08:15:46\",\n        \"diagnosisCode\": \"10001005\",\n        \"DiagnosisCodeOntology\": \"invalid\",\n        \"DiagnosisCodeOntologyVersion\": \"25\"\n      },\n      \"op\": \"submit\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post diagnosis (DiagnosisCodeOntologyVersion)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id16\",id);",
													"pm.environment.set(\"records16\",records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});",
													"",
													"//Check number of sumbission is 3",
													"tests[ \"number of samples submitted is \" + response.totalRecords + \" (1 valid field variables and 2 invalid)\"]= response.totalRecords === 3;"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"diagnoses\": [\n    {\n      \"diagnosis\": {\n        \"individualReferenceId\": \"VALID1\",\n        \"dateDiagnosed\": \"2016-04-14T10:15:46\",\n        \"diagnosisCode\": \"10001005\",\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\n        \"DiagnosisCodeOntologyVersion\": \"25\"\n      },\n      \"op\": \"submit\"\n    },\n\t{\n      \"diagnosis\": {\n        \"individualReferenceId\": \"INVAL1\",\n        \"dateDiagnosed\": \"2016-04-14T11:15:46\",\n        \"diagnosisCode\": \"10001005\",\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\n        \"DiagnosisCodeOntologyVersion\": \"24\"\n      },\n      \"op\": \"submit\"\n    },\n    {\n      \"diagnosis\": {\n        \"individualReferenceId\": \"INVAL2\",\n        \"dateDiagnosed\": \"2016-04-14T15:15:46\",\n        \"diagnosisCode\": \"10001005\",\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\n        \"DiagnosisCodeOntologyVersion\": \"Abcd\"\n      },\n      \"op\": \"submit\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "#9235 RECEIVE DATA  - DATA MODEL CHANGE diagnosisCodeOntology\n\nRequired for all diagnosis objects.\nMust accept valid values ('SNOMED-CT' currently).\nMust reject invalid values. \n\n#9236 RECEIVE DATA  - DATA MODEL CHANGE DiagnosisCodeOntologyVersion\n\nRequired for all diagnosis objects.\nMust accept valid values (currently only '25').\nMust reject invalid values.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"description": "\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Get Submission Status",
					"item": [
						{
							"name": "Check for successsful processing of data validation submissions",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(() => {}, 10000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\",  () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"All open submissions have processed\", () => {",
											"",
											"    let complete = !response",
											"        .submissions",
											"        .some(x => x.status == \"Open\" && x.recordsProcessed != x.totalRecords);",
											"",
											"    // Re-Run Test If Not Yet Complete",
											"    if (!complete)",
											"    {",
											"        postman.setNextRequest(\"Check for successsful processing of data validation submissions\");",
											"    }",
											"    ",
											"    pm.expect(complete).to.eq(true);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api-url}}/status/biobank/{{user-biobank-id}}?limit=100",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"biobank",
										"{{user-biobank-id}}"
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Submission status (materialType)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"",
											"// Tests",
											"pm.test(\"Record ID: \" + environment.id1 + \" - Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"number of samples submitted: \" + response.totalRecords, function() {",
											"    pm.expect(response.recordsProcessed).to.eql(environment.records1);",
											"});",
											"",
											"pm.test(response.recordsFailed + \" record failed to process\", function() {",
											"    pm.expect(response.recordsFailed).to.eql(1);",
											"});",
											"",
											"pm.test(response.recordsPassed + \" records were successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(66);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id1}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Submission status (sampleContentMethod)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"",
											"// Tests",
											"pm.test(\"Record ID: \" + environment.id1 + \" - Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"number of samples submitted: \" + response.totalRecords, function() {",
											"    pm.expect(response.totalRecords).to.eql(environment.records2);",
											"});",
											"",
											"pm.test(response.recordsFailed + \" record failed to process\", function() {",
											"    pm.expect(response.recordsFailed).to.eql(3);",
											"});",
											"",
											"pm.test(response.recordsPassed + \" records were successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(12);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id2}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Submission status (extractionSiteOntology)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"// keep re-requesting until expected records are processed",
											"// if(Number(response.recordsProcessed) < 1){",
											"//     postman.setNextRequest('GET Submission status (extractionSiteOntology)');",
											"// }",
											"",
											"// else",
											"// {",
											"//check service returns 200",
											"pm.test(\"Record ID: \" + environment.id4 + \" - Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check number of sumbissions",
											"pm.test(\"number of samples submitted: \" + response.totalRecords, function() {",
											"    pm.expect(response.totalRecords).to.eql(environment.records4);",
											"});",
											"",
											"//Check number of errors",
											"pm.test(\"number of sample errors: \" + response.recordsFailed, function() {",
											"    pm.expect(response.recordsFailed).to.eql(5);",
											"});",
											"",
											"//Check number of passes",
											"pm.test(\"number of sample passes: \" + response.recordsPassed, function() {",
											"    pm.expect(response.recordsPassed).to.eql(2);",
											"});",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id4}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id4}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Submission status (extractionProcedure)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"// keep re-requesting until expected records are processed",
											"// if(Number(response.recordsProcessed) < 1){",
											"//     postman.setNextRequest('GET Submission status (extractionProcedure)');",
											"// }",
											"// else",
											"// {",
											"//check service returns 200",
											"pm.test(\"Record ID: \" + environment.id5 + \" - Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check number of sumbissions",
											"pm.test(\"number of samples submitted: \" + response.totalRecords, function() {",
											"    pm.expect(response.totalRecords).to.eql(environment.records5);",
											"});",
											"",
											"//Check number of errors",
											"pm.test(\"number of sample failures = \" + response.recordsFailed, function() {",
											"    pm.expect(response.recordsFailed).to.eql(8);",
											"});",
											"",
											"//Check number of passes",
											"pm.test(\"number of samples processed = \" + response.recordsPassed, function() {",
											"    pm.expect(response.recordsPassed).to.eql(5);",
											"});",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id5}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id5}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Status (extractionOntologyVersion)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"",
											"// Tests",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Number of samples submitted is \" + response.totalRecords, function () {",
											"    pm.expect(response.totalRecords).to.eql(8);",
											"});",
											"",
											"pm.test(response.recordsPassed + \" samples passed\", () => {",
											"    pm.expect(response.recordsPassed).to.eql(3);",
											"});",
											"",
											"pm.test(response.recordsFailed + \" samples failed\", () => {",
											"    pm.expect(response.recordsFailed).to.eql(5);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id10}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id10}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Status (YOB)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"",
											"// Tests",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"number of samples submitted: \" + response.totalRecords, function() {",
											"    pm.expect(response.recordsProcessed).to.eql(environment.records8);",
											"});",
											"",
											"pm.test(\"Number of samples processed: \" + response.totalRecords, function() {",
											"    pm.expect(response.totalRecords).to.eql(environment.records8);",
											"});",
											"",
											"pm.test(response.recordsPassed + \" records were successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(3);",
											"});",
											"",
											"pm.test(response.recordsFailed + \" record failed to process\", function() {",
											"    pm.expect(response.recordsFailed).to.eql(1);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id8}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id8}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Status  (extrationSite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"// keep re-requesting until expected records are processed",
											"// if(Number(response.recordsProcessed) < 1){",
											"//     postman.setNextRequest('Get Status (extractionSite)');",
											"// }",
											"// else",
											"// {",
											"//Check number of sumbission is",
											"tests[ \"number of samples submitted is \" + response.totalRecords ]= response.totalRecords === 27;",
											"",
											"//Check number of passes/failures",
											"pm.test(response.recordsFailed + \" failed to process\", function() {",
											"    pm.expect(response.recordsFailed).to.eql(8);",
											"});",
											"",
											"//Test if records passed is 19",
											"pm.test(response.recordsPassed + \" out of the \" + response.totalRecords + \" samples processed\", function () {pm.expect(response.recordsPassed).to.eql(19);",
											"});",
											"",
											"//Test for 200 response",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id9}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id9}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Status (sex)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"",
											"// Tests",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"number of samples submitted: \" + response.totalRecords, function() {",
											"    pm.expect(response.recordsProcessed).to.eql(8);",
											"});",
											"",
											"pm.test(\"Number of samples processed: \" + response.totalRecords, function() {",
											"    pm.expect(response.totalRecords).to.eql(8);",
											"});",
											"",
											"pm.test(response.recordsPassed + \" records were successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(7);",
											"});",
											"",
											"pm.test(response.recordsFailed + \" record failed to process\", function() {",
											"    pm.expect(response.recordsFailed).to.eql(1);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id11}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id11}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Status (sampleContent)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"All samples submitted\", () => {",
											"    pm.expect(response.totalRecords).to.eq(15);",
											"})",
											"",
											"pm.test(response.recordsFailed + \" failed to process\", () => {",
											"    pm.expect(response.recordsFailed).to.eql(3);",
											"});",
											"",
											"pm.test(response.recordsPassed + \" records were successfully processed\", () => {",
											"    pm.expect(response.recordsPassed).to.eql(12);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id12}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id12}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Status (storageTemperature)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"",
											"// Tests",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Number of samples submitted: \" + response.totalRecords, function() {",
											"    pm.expect(response.totalRecords).to.eql(environment.records13);",
											"});",
											"",
											"pm.test(\"Number of samples processed: \" + response.totalRecords, function() {",
											"    pm.expect(response.recordsProcessed).to.eql(environment.records13);",
											"});",
											"",
											"pm.test(response.recordsPassed + \" records were successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(10);",
											"});",
											"",
											"pm.test(response.recordsFailed + \" record failed to process\", function() {",
											"    pm.expect(response.recordsFailed).to.eql(1);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id13}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id13}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Status (treatmentCode)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"// keep re-requesting until expected records are processed",
											"// if(Number(response.recordsProcessed) < 1){",
											"//     postman.setNextRequest('Get Status (treatmentCode)');",
											"// }",
											"// else",
											"// {",
											"//Check number of sumbissions",
											"tests[ \"number of samples submitted is \" + response.totalRecords ]= response.totalRecords === 7;",
											"",
											"//Test if Error count is 1",
											"tests[ response.recordsFailed + \" out of the \" + response.totalRecords + \" samples failed to process\"] = 6 == response.recordsFailed;",
											"",
											"//Check number of records passed",
											"pm.test(response.recordsPassed + \" of the \" + response.totalrecords +\" records successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(1);",
											"});",
											"",
											"//Test for 200 response",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id17}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id17}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Status (treatmentLocation)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"// keep re-requesting until expected records are processed",
											"// if(Number(response.recordsProcessed) < 1){",
											"//     postman.setNextRequest('Get Status (treatmentLocation)');",
											"// }",
											"// else",
											"// {",
											"//Check number of sumbissions",
											"tests[ \"number of samples submitted is \" + response.totalRecords ]= response.totalRecords === 4;",
											"",
											"//Test if Error count is 2",
											"pm.test(response.recordsFailed + \" of the \" + response.totalrecords +\" records failed processing\", function() {",
											"    pm.expect(response.recordsFailed).to.eql(1);",
											"});",
											"",
											"//Check number of records passed",
											"pm.test(response.recordsPassed + \" of the \" + response.totalrecords +\" records successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(3);",
											"});",
											"",
											"//Test for 200 response",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id18}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id18}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Status (treatmentCodeOntology)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"// // keep re-requesting until expected records are processed",
											"// if(Number(response.recordsProcessed) < 1){",
											"//     postman.setNextRequest('Get Status (treatmentCodeOntology)');",
											"// }",
											"// else",
											"// {",
											"//Check number of sumbissions",
											"tests[ \"number of samples submitted is \" + response.totalRecords ]= response.totalRecords === 2;",
											"",
											"//Test if Error count is 1",
											"tests[ response.recordsFailed + \" out of the \" + response.totalRecords + \" samples failed to process\"] = 1 == response.recordsFailed;",
											"",
											"//Check number of records passed",
											"pm.test(response.recordsPassed + \" of the \" + response.totalrecords +\" records successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(1);",
											"});",
											"",
											"//Test for 200 response",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id6}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id6}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Status (treatmentCodeOntologyVersion)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"// keep re-requesting until expected records are processed",
											"// if(Number(response.recordsProcessed) < 1){",
											"//     postman.setNextRequest('Get Status (treatmentCodeOntologyVersion)');",
											"// }",
											"// else",
											"// {",
											"//Check number of sumbission is 5",
											"tests[ \"number of samples submitted is \" + response.totalRecords ]= response.totalRecords === 2;",
											"",
											"//Test if Error count is 1",
											"tests[ response.recordsFailed + \" out of the \" + response.totalRecords + \" samples failed to process\"] = 1 == response.recordsFailed;",
											"",
											"//Check number of records passed",
											"pm.test(response.recordsPassed + \" of the \" + response.totalrecords +\" records successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(1);",
											"});",
											"",
											"//Test for 200 response",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id7}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id7}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Submission status (diagnosisCode)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"// // keep re-requesting until expected records are processed",
											"// if(Number(response.recordsProcessed) < 1){",
											"//     postman.setNextRequest('GET Submission status (diagnosisCode)');",
											"// }",
											"// else",
											"// {",
											"//check service returns 200",
											"pm.test(\"Record ID: \" + response.id + \" - Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check number of sumbissions",
											"pm.test(\"number of samples submitted = \" + response.totalRecords, function() {",
											"    pm.expect(response.totalRecords).to.eql(environment.records3);",
											"});",
											"",
											"//Check number of records failed",
											"pm.test(response.recordsFailed + \" of the \" + response.totalrecords +\" records failed to process\", function() {",
											"    pm.expect(response.recordsFailed).to.eql(6);",
											"});",
											"",
											"//Check number of records passed",
											"pm.test(response.recordsPassed + \" of the \" + response.totalrecords +\" records successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(1);",
											"});",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id3}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Submission status (diagnosisCodeOntology)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"// // keep re-requesting until expected records are processed",
											"// if(Number(response.recordsProcessed) < 1){",
											"//     postman.setNextRequest('GET Submission status (diagnosisCodeOntology)');",
											"// }",
											"// else",
											"// {",
											"//check service returns 200",
											"pm.test(\"Record ID: \" + response.id + \" - Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check number of sumbissions",
											"pm.test(\"number of samples submitted: \" + response.totalRecords, function() {",
											"    pm.expect(response.totalRecords).to.eql(environment.records15);",
											"});",
											"",
											"//Check number of errors",
											"pm.test(response.recordsFailed + \" records failed to process\", function() {",
											"    pm.expect(response.recordsFailed).to.eql(1);",
											"});",
											"",
											"//Check number of passes",
											"pm.test(response.recordsPassed + \" records were successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(1);",
											"});",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id15}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id15}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Submission status (diagnosisCodeOntologyVersion)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"// keep re-requesting until expected records are processed",
											"// if(Number(response.recordsProcessed) < 1){",
											"//     postman.setNextRequest('GET Submission status (diagnosisCodeOntologyVersion)');",
											"// }",
											"// else",
											"// {",
											"//check service returns 200",
											"pm.test(\"Record ID: \" + response.id + \" - Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check number of sumbissions",
											"pm.test(\"number of samples submitted = \" + response.totalRecords, function() {",
											"    pm.expect(response.totalRecords).to.eql(environment.records16);",
											"});",
											"",
											"//Check number of errors",
											"pm.test(response.recordsFailed + \" records failed to process\", function() {",
											"    pm.expect(response.recordsFailed).to.eql(2);",
											"});",
											"",
											"//Check number of errors",
											"pm.test(response.recordsPassed + \" records were successfully processed\", function() {",
											"    pm.expect(response.recordsPassed).to.eql(1);",
											"});",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id16}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id16}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Submission status (collectionName)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"",
											"// Tests",
											"pm.test(\"Record ID: \" + environment.id14 + \" - Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"number of samples submitted ( \" + response.totalRecords + \") equals the total records submitted\", function() {",
											"    pm.expect(response.totalRecords).to.eql(environment.records14);",
											"});",
											"",
											"pm.test(response.recordsFailed + \" records failed to process\", function() {",
											"    pm.expect(response.recordsFailed).to.eql(0);",
											"});",
											"",
											"pm.test(response.recordsProcessed + \" records successfully processed\", function() {",
											"    pm.expect(response.recordsProcessed).to.eql(6);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id14}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id14}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Get Submission Error Codes",
					"item": [
						{
							"name": "GET Error code (materialType)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"//check service returns 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test (\"Error count is \"+ response.count, function(){",
											"    pm.expect(response.count) == 1;",
											"});",
											"",
											"//Check for error message for invalid data 1    ",
											"pm.test(\"Error Message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"});",
											"    ",
											"pm.test(\"No Error Message for all valid barcodes: VALIDx\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id1}}/error/",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id1}}",
										"error",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Error code (sampleContentMethod)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"//check service returns 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"Error Message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL1\");",
											"    });",
											"",
											"//Check for error message for invalid data 2  ",
											"    pm.test(\"Error Message for barcode INVAL2\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL2\");",
											"    });",
											"    ",
											"//Check for error message for invalid data 3  ",
											"    pm.test(\"Error Message for barcode INVAL3\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL3\");",
											"    });",
											"    ",
											"//Check for NO error message for valid data 1",
											"    pm.test(\"No errors for barcode VALID1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID1\");",
											"    });",
											"    ",
											"//Check for NO error message for valid data 2",
											"    pm.test(\"No errors for barcode VALID2\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID2\");",
											"    });",
											"",
											"//Check for NO error message for valid data 3",
											"    pm.test(\"No errors for barcode VALID3\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID3\");",
											"    });",
											"    ",
											"//Check for NO error message for valid data 4",
											"    pm.test(\"No errors for barcode VALID4\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID4\");",
											"    });",
											"    ",
											"//Check for NO error message for valid data 5",
											"    pm.test(\"No errors for barcode VALID5\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID5\");",
											"    });",
											"    ",
											"//Check for NO error message for valid data 6",
											"    pm.test(\"No errors for barcode VALID6\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID6\");",
											"    });",
											"    ",
											"    //Check for NO error message for valid data 7",
											"    pm.test(\"No errors for barcode VALID7\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID7\");",
											"    });",
											"    ",
											"    //Check for NO error message for valid data 8",
											"    pm.test(\"No errors for barcode VALID8\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID8\");",
											"    });",
											"    ",
											"    //Check for NO error message for valid data 9",
											"    pm.test(\"No errors for barcode VALID9\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID9\");",
											"    });",
											"    ",
											"    //Check for NO error message for valid data 10",
											"    pm.test(\"No errors for barcode VALID10\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID10\");",
											"    });",
											"    ",
											"    //Check for NO error message for valid data 11",
											"    pm.test(\"No errors for barcode VALID11\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID11\");",
											"    });",
											"    ",
											"    //Check for NO error message for valid data 12",
											"    pm.test(\"No errors for barcode VALID12\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID12\");",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id2}}/error/",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id2}}",
										"error",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Error code (diagnosisCode)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"//check service returns 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Error count is \" + response.count ,function () {",
											"    pm.expect(response.count).to.eql(6);",
											"});",
											"",
											"//Check for error message for invalid data 1    ",
											"pm.test(\"Response contains reference to INVAL1\", function () {",
											"pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"});",
											"",
											"//Check for error message for invalid data 2  ",
											"pm.test(\"Response contains reference to INVAL2\", function () {",
											"pm.expect(pm.response.text()).to.include(\"INVAL2\");",
											"});",
											"    ",
											"pm.test(\"Response contains reference to INVAL2\", function () {",
											"pm.expect(pm.response.text()).to.include(\"INVAL3\");",
											"});",
											"",
											"pm.test(\"Response contains reference to INVAL2\", function () {",
											"pm.expect(pm.response.text()).to.include(\"INVAL4\");",
											"});",
											"",
											"pm.test(\"Response contains reference to INVAL2\", function () {",
											"pm.expect(pm.response.text()).to.include(\"INVAL5\");",
											"});",
											"",
											"pm.test(\"Response contains reference to INVAL2\", function () {",
											"pm.expect(pm.response.text()).to.include(\"INVAL6\");",
											"});",
											"",
											"//Check for NO error message for valid data 1",
											"pm.test(\"No errors for barcode VALID1\", function () {",
											"pm.expect(pm.response.text()).to.not.include(\"VALID1\");",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id3}}/error/",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id3}}",
										"error",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Error code (diagnosisCodeOntology)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"//check service returns 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"Error Message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"    });",
											"",
											"//Check for NO error message for valid data 1",
											"    pm.test(\"No errors for barcode VALID1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID1\");",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id15}}/error/",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id15}}",
										"error",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Error code (diagnosisCodeOntologyVersion)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"//check service returns 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"Error Message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"    });",
											"    ",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"Error Message for barcode INVAL2\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL2\");",
											"    });",
											"",
											"//Check for NO error message for valid data 1",
											"    pm.test(\"No errors for barcode VALID1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID1\");",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id16}}/error/",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id16}}",
										"error",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Error code (extractionSiteOntology)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"//check service returns 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Error message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL1\");",
											"});",
											"",
											"pm.test(\"Error message for barcode INVAL2\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL2\");",
											"});",
											"",
											"pm.test(\"Error message for barcode INVAL3\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL3\");",
											"});",
											"",
											"pm.test(\"Error message for barcode INVAL4\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL4\");",
											"});",
											"",
											"pm.test(\"Error message for barcode INVAL5\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL5\");",
											"});",
											"",
											"pm.test(\"NO Error message for barcode VAL1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID1\");",
											"});",
											"",
											"pm.test(\"NO Error message for barcode VAL2\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID2\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id4}}/error/",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id4}}",
										"error",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Error Code  (extractionOntologyVersion)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"//check service returns 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											" pm.test(\"Error message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL1\");",
											"    });",
											"",
											"    pm.test(\"Error message for barcode INVAL2\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL2\");",
											"    });",
											"    ",
											"    pm.test(\"Error message for barcode INVAL3\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL3\");",
											"    });",
											"    ",
											"    pm.test(\"Error message for barcode INVAL4\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL4\");",
											"    });",
											"    ",
											"    pm.test(\"Error message for barcode INVAL5\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL5\");",
											"    });",
											"    ",
											"    pm.test(\"No Error message for barcode VAL1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID1\");",
											"    });",
											"    ",
											"    pm.test(\"No Error message for barcode VAL2\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID2\");",
											"    });",
											"    ",
											"    pm.test(\"no Error message for barcode VAL3\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID3\");",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id10}}/error",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id10}}",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Error code  (extractionProcedure)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"//check service returns 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"Error Message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL1\");",
											"    });",
											"",
											"//Check for error message for invalid data 2  ",
											"    pm.test(\"Error Message for barcode INVAL2\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL2\");",
											"    });",
											"    ",
											"//Check for error message for invalid data 3  ",
											"    pm.test(\"Error Message for barcode INVAL3\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL3\");",
											"    });",
											"    ",
											"//Check for error message for invalid data 4 ",
											"    pm.test(\"Error Message for barcode INVAL4\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL4\");",
											"    });",
											"",
											"//Check for error message for invalid data 5  ",
											"    pm.test(\"Error Message for barcode INVAL5\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL5\");",
											"    });",
											"",
											"//Check for error message for invalid data 6 ",
											"    pm.test(\"Error Message for barcode INVAL6\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL6\");",
											"    });",
											"    ",
											"//Check for error message for invalid data 7 ",
											"    pm.test(\"Error Message for barcode INVAL7\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL7\");",
											"    });",
											"",
											"//Check for error message for invalid data 8 ",
											"    pm.test(\"Error Message for barcode INVAL8\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL8\");",
											"    });",
											"    ",
											"//Check for NO error message for valid data 1",
											"    pm.test(\"No errors for barcode VAL1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID1\");",
											"    });",
											"    ",
											"//Check for NO error message for valid data 2",
											"    pm.test(\"No errors for barcode VAL2\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID2\");",
											"    });",
											"",
											"//Check for NO error message for valid data 3",
											"    pm.test(\"No errors for barcode VAL3\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID3\");",
											"    });",
											"    ",
											"//Check for NO error message for valid data 4",
											"    pm.test(\"No errors for barcode VAL4\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID4\");",
											"    });",
											"    ",
											"//Check for NO error message for valid data 5",
											"    pm.test(\"No errors for barcode VAL5\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID5\");",
											"    });",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id5}}/error/",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id5}}",
										"error",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Error Code (treatmentCode)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"pm.test(\"error count is \" + response.count, function () {",
											"    pm.expect(response.count) == 6;",
											"});",
											"",
											"//Test if status code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check for error message for invalid data    ",
											"    pm.test(\"Error Message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"    });",
											"    ",
											"    pm.test(\"Error Message for barcode INVAL2\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL2\");",
											"    });",
											"    ",
											"    pm.test(\"Error Message for barcode INVAL3\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL3\");",
											"    });",
											"",
											"    pm.test(\"Error Message for barcode INVAL4\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL4\");",
											"    });",
											"    ",
											"    pm.test(\"Error Message for barcode INVAL5\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL5\");",
											"    });",
											"    ",
											"    pm.test(\"Error Message for barcode INVAL6\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL6\");",
											"    });",
											"    ",
											"    pm.test(\"No Error Message for barcode VALID1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID1\");",
											"    });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id17}}/error",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id17}}",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Error Code (treatmentLocation)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"pm.test(\"error count is \" + response.count, function () {",
											"    pm.expect(response.count) == 1;",
											"});",
											"",
											"//Test if status code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"Error Message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"    });",
											"    ",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"No Error Message for barcode VALID1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID1\");",
											"    });",
											"",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"No Error Message for barcode VALID2\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID2\");",
											"    });",
											"",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"No Error Message for barcode VALID3\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID3\");",
											"    });",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id18}}/error",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id18}}",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Error Code (treatmentCodeOntology)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"pm.test(\"error count is \" + response.count, function () {",
											"    pm.expect(response.count) == 1;",
											"});",
											"",
											"//Test if status code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"Error Message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"    });",
											"    ",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"No Error Message for barcode VAL1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID1\");",
											"    });",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id6}}/error",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id6}}",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Error code (treatmentCodeOntologyVersion)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"pm.test(\"error count is \" + response.count, function () {",
											"    pm.expect(response.count) == 1;",
											"});",
											"",
											"//Test if status code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"Error Message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"    });",
											"    ",
											"//Check for error message for invalid data 1    ",
											"    pm.test(\"No Error Message for barcode VAL1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID1\");",
											"    });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id7}}/error",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id7}}",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Error Code (YOB)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"pm.test (\"Error count is \"+ response.count, function(){",
											"    pm.expect(response.count) == 1;",
											"});",
											"",
											"//Check for error message for invalid data 1    ",
											"pm.test(\"Error Message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"});",
											"    ",
											"pm.test(\"No Error Message for barcode VALID1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID1\");",
											"});",
											"    ",
											"pm.test(\"No Error Message for barcode VALID2\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID2\");",
											"});",
											"",
											"pm.test(\"No Error Message for barcode VALID3\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID3\");",
											"});",
											"",
											"//Test if status code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id8}}/error",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id8}}",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Error Code (extrationSite)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json ();",
											"console.log(response);",
											"",
											"//Test if Error count is 8",
											"pm.test(\"error count is \" + response.count,function (){",
											"    pm.expect (response.count) == 8;",
											"});",
											"",
											"//Test if status code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Error message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"});",
											"",
											"pm.test(\"Error message for barcode INVAL2\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL2\");",
											"});",
											"    ",
											"pm.test(\"Error message for barcode INVAL3\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL3\");",
											"    });",
											"    ",
											"    pm.test(\"Error message for barcode INVAL4\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL4\");",
											"    });",
											"",
											"    pm.test(\"Error message for barcode INVAL5\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL5\");",
											"    });",
											"    ",
											"    pm.test(\"Error message for barcode INVAL6\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL6\");",
											"    });",
											"    ",
											"    pm.test(\"Error message for barcode INVAL7\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL7\");",
											"    });",
											"    ",
											"    pm.test(\"Erorr message for barcode: INVAL8\", function () {",
											"        pm.expect(pm.response.text()).to.include(\"INVAL8\");",
											"    });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id9}}/error",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id9}}",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Error Code (sex)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"//check service returns 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											" pm.test(\"Error message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"barcode: INVAL1\");",
											"    });",
											"    ",
											" pm.test(\"NO error message for barcode VAL1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"barcode: VALID1\");",
											"    });",
											"    ",
											"pm.test(\"Error count is 1\", function () {",
											"    pm.expect(response.count).to.equal(1);",
											"});",
											"    ",
											"    ",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id11}}/error",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id11}}",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Error Code  (sampleContent)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"var response = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"7 Errors\", () => {",
											"    pm.expect(response.count).to.be.eq(7);",
											"})",
											"",
											"pm.test(\"Error received for barcode INVAL1\",function (){",
											"    pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"});",
											"",
											"pm.test(\"Error received for barcode INVAL2\",function (){",
											"    pm.expect(pm.response.text()).to.include(\"INVAL2\");",
											"});",
											"",
											"pm.test(\"Error received for barcode INVAL3\",function (){",
											"    pm.expect(pm.response.text()).to.include(\"INVAL3\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID1\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID1\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID2\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID2\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID3\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID3\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID4\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID4\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID5\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID5\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID6\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID6\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID7\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID7\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID8\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID8\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID9\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID9\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID10\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID10\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID11\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID11\");",
											"});",
											"",
											"pm.test(\"No error received for barcode VALID12\",function (){",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID12\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id12}}/error",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id12}}",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Error Code  (storageTemperature)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Access response body",
											"let response = pm.response.json();",
											"",
											"pm.test (\"Error count is \"+ response.count, function(){",
											"    pm.expect(response.count) == 1;",
											"});",
											"",
											"//Check for error message for invalid data 1    ",
											"pm.test(\"Error Message for barcode INVAL1\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"INVAL1\");",
											"});",
											"    ",
											"pm.test(\"No Error Message for barcode VALID1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID1\");",
											"});",
											"",
											"pm.test(\"No Error Message for barcode VALID2\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID2\");",
											"});",
											"",
											"pm.test(\"No Error Message for barcode VALID3\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID3\");",
											"});",
											"",
											"pm.test(\"No Error Message for barcode VALID4\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID4\");",
											"});",
											"",
											"pm.test(\"No Error Message for barcode VALID5\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID5\");",
											"});",
											"",
											"pm.test(\"No Error Message for barcode VALID6\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID6\");",
											"});",
											"",
											"//Test if status code is 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id13}}/error",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id13}}",
										"error"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Error code (collectionName)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//access response body",
											"let response = pm.response.json();",
											"",
											"pm.test(\"No Error Message for barcode VALID1\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID1\");",
											"});",
											"",
											"pm.test(\"No Error Message for barcode VALID2\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID2\");",
											"});",
											"",
											"pm.test(\"No Error Message for barcode VALID3\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID3\");",
											"});",
											"",
											"pm.test(\"No Error Message for barcode VALID4\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID4\");",
											"});",
											"",
											"pm.test(\"No Error Message for barcode VALID5\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID5\");",
											"});",
											"",
											"pm.test(\"No Error Message for barcode VALID6\", function () {",
											"    pm.expect(pm.response.text()).to.not.include(\"VALID6\");",
											"});    ",
											"",
											"//check service returns 200",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "bearer {{token_bu1}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/status/{{id14}}/error",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"status",
										"{{id14}}",
										"error"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Tests relate to data validation including submission error messages and data error conditions. \n\nPost JSON data to the submission API, the records are processed and reported on, we then assert that the expected results are returned for a given data object\n\nWithin the posted JSON objects, all reference data values are present.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Error messages",
			"item": [
				{
					"name": "Object error messages",
					"item": [
						{
							"name": "Sample",
							"item": [
								{
									"name": "Omit",
									"item": [
										{
											"name": "Sample submission error - Omit materialType",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('Error response contains Invalid MaterialType', function() {",
															"   pm.expect(pm.response.text()).to.include(\"Invalid MaterialType\");",
															"});",
															"",
															"//Check response for barcode value",
															"pm.test(\"Body response contains: Barcode reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Barcode: 7212\");",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: Individual Reference ID reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"IndividualReferenceId: 7212\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Omit individual reference ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function() {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: IndividualReferenceID error\", function() {",
															"    pm.expect(pm.response.text()).to.include(\"The IndividualReferenceId field is required\");",
															"});",
															"",
															"pm.test(\"Body response contains: IndividualReferenceID identifier\", function() {",
															"    pm.expect(pm.response.text()).to.include(\"Samples[0].Sample.IndividualReferenceId\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Omit barcode",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Barcode error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The Barcode field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Barcode identifier\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Samples[0].Sample.Barcode\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Omit YOB/AAD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('Error response = At least one of AgeAtDonation or YearOfBirth must be provided', function() {",
															"   pm.expect(pm.response.text()).to.include(\" At least one of AgeAtDonation or YearOfBirth must be provided\");",
															"});",
															"",
															"//Check response for barcode value",
															"pm.test(\"Body response contains: Barcode reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Barcode: 1234\");",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: Individual Reference ID reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"IndividualReferenceId: 7212\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"1234\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Omit dateCreated",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('Error response contains The DateCreated field is required',  () => {",
															"   pm.expect(pm.response.text()).to.include(\"The DateCreated field is required\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Omit storageTemperature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('Error response contains Invalid storageTemperature', function() {",
															"   pm.expect(pm.response.text()).to.include(\"Invalid StorageTemperature\");",
															"});",
															"",
															"//Check response for barcode value",
															"pm.test(\"Body response contains: Barcode reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Barcode: 7212\");",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: Individual Reference ID reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"IndividualReferenceId: 7212\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Omit availability",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Null",
									"item": [
										{
											"name": "Sample submission error - Null materialType",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('Error response contains Invalid MaterialType', function() {",
															"   pm.expect(pm.response.text()).to.include(\" Invalid MaterialType\");",
															"});",
															"",
															"//Check response for barcode value",
															"pm.test(\"Body response contains: Barcode reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Barcode: 7212\");",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: Individual Reference ID reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"IndividualReferenceId: 7212\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": null,\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Null individual reference ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function() {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: IndividualReferenceID error\", function() {",
															"    pm.expect(pm.response.text()).to.include(\"The IndividualReferenceId field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: IndividualReferenceID identifier\", function() {",
															"    pm.expect(pm.response.text()).to.include(\"Samples[0].Sample.IndividualReferenceId\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n      \t\"individualReferenceId\": null,\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Null barcode",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Barcode error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The Barcode field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Barcode identifier\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Samples[0].Sample.Barcode\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": null,\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Null YOB/AAD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('Error response = At least one of AgeAtDonation or YearOfBirth must be provided', function() {",
															"   pm.expect(pm.response.text()).to.include(\"At least one of AgeAtDonation or YearOfBirth must be provided\");",
															"});",
															"",
															"//Check response for barcode value",
															"pm.test(\"Body response contains: Barcode reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Barcode: 1234\");",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: Individual Reference ID reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"IndividualReferenceId: 7212\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"1234\",\r\n        \"yearOfBirth\": null,\r\n        \"ageAtDonation\": null,\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Null dateCreated",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('Error response = dateCreated is required', () => {",
															"   pm.expect(pm.response.text()).to.include(\"The DateCreated field is required\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"dateCreated\": null,\r\n        \"sex\":\"\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Null storageTemperature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('Error response contains Invalid storageTemperature', function() {",
															"   pm.expect(pm.response.text()).to.include(\"Invalid StorageTemperature\");",
															"});",
															"",
															"//Check response for barcode value",
															"pm.test(\"Body response contains: Barcode reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Barcode: 7212\");",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: Individual Reference ID reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"IndividualReferenceId: 7212\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": null\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Null availability",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\",\r\n        \"availability\": null\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Empty",
									"item": [
										{
											"name": "Sample submission error - Empty materialType",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('Error response = Invalid MaterialType', function() {",
															"   pm.expect(pm.response.text()).to.include(\" Invalid MaterialType\");",
															"});",
															"",
															"//Check response for barcode value",
															"pm.test(\"Body response contains: Barcode reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Barcode: 7212\");",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: Individual Reference ID reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"IndividualReferenceId: 7212\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Empty individual reference ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															" var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function() {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: IndividualReferenceID error\", function() {",
															"    pm.expect(pm.response.text()).to.include(\"The IndividualReferenceId field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: IndividualReferenceID identifier\", function() {",
															"    pm.expect(pm.response.text()).to.include(\"Samples[0].Sample.IndividualReferenceId\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n      \t\"individualReferenceId\": \"\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Empty barcode",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Barcode error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The Barcode field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Barcode identifier\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Samples[0].Sample.Barcode\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Empty YOB/AAD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('JSON error for empty yearOfBirth', () => {",
															"   pm.expect(pm.response.text())",
															"    .to.include(\"The JSON value could not be converted\")",
															"    .and.include(\"$.samples[0].sample.yearOfBirth\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"1234\",\r\n        \"yearOfBirth\": \"\",\r\n        \"ageAtDonation\": \"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Empty dateCreated",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('Error response = DateCreated is required', function() {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .and.include(\"$.samples[0].sample.dateCreated\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"dateCreated\": \"\",\r\n        \"sex\":\"\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Empty storageTemperature",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Check for correct HTTP status code",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for error message",
															"pm.test('Error response = Invalid storageTemperature', function() {",
															"   pm.expect(pm.response.text()).to.include(\"Invalid StorageTemperature\");",
															"});",
															"",
															"//Check response for barcode value",
															"pm.test(\"Body response contains: Barcode reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Barcode: 7212\");",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: Individual Reference ID reference\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"IndividualReferenceId: 7212\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Empty availability",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n      \t\"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"7212\",\r\n        \"barcode\": \"7212\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2001-12-28T12:10:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"2°C to 10°C\",\r\n        \"availability\": \"\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Invalid",
									"item": [
										{
											"name": "Sample submission error - Invalid dateCreated_day",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test('Error response = DateCreated is required', function() {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .and.include(\"$.samples[0].sample.dateCreated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-32T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Invalid dateCreated_month",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test('Error response = DateCreated is required', function() {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .and.include(\"$.samples[0].sample.dateCreated\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-13-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Invalid dateCreated - abc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test('Error response = DateCreated is required', function() {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .and.include(\"$.samples[0].sample.dateCreated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"abc\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Invalid dateCreated_DD-MM-YYYY",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test('Error response = DateCreated is required', function() {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .and.include(\"$.samples[0].sample.dateCreated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"15-07-2011T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Invalid dateCreated_MM-DD-YYYY",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test('Error response = DateCreated is required', function() {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .and.include(\"$.samples[0].sample.dateCreated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"07-15-2011T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - Invalid dateCreated_YY-MM-DD",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test('Error response = DateCreated is required', function() {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .and.include(\"$.samples[0].sample.dateCreated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"11-07-15T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Sample submission error - collectionName > 250",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Response body contains: collectionName error \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"CollectionName must be a string with a maximum length of 250\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"samples\": [\n    {\n      \"sample\": {\n      \t\"collectionName\": \"1111111111aaaaaaaaaa!!!!!!!!!!BBBBBBBBBB2222222222££££££££££cccccccccc3333333333$$$$$$$$$$44444444441111111111aaaaaaaaaa!!!!!!!!!!BBBBBBBBBB2222222222££££££££££cccccccccc3333333333$$$$$$$$$$44444444441111111111aaaaaaaaaa!!!!!!!!!!BBBBBBBBBB22222222221\",\n        \"materialType\": \"Bone BON\",\n        \"individualReferenceId\": \"collectionName_251\",\n        \"barcode\": \"INVAL1\",\n        \"sampleContent\": \"10058006\",\n        \"sampleContentMethod\": \"Other\",\n        \"extractionSite\": \"361317000\",\n        \"extractionSiteOntology\": \"SNOMED-CT\",\n        \"extractionSiteOntologyVersion\": \"25\",\n        \"extractionProcedure\": \"25179006\",\n        \"YearOfBirth\": 1996,\n        \"dateCreated\": \"2016-09-12T08:37:06-01:00\",\n        \"storageTemperature\": \"Other\"\n      },\n      \"op\": \"submit\"\n    }\n  ]\n} "
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Diagnosis",
							"item": [
								{
									"name": "Omit",
									"item": [
										{
											"name": "Diagnosis submission error - Omit individual reference Id field",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - individual reference ID identifier\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.IndividualReferenceId\");",
															"});",
															"",
															"pm.test(\"Body response contains: Individual Referece Id error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The IndividualReferenceId field is required\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Omit diagnosisCode field",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: diagnosisCode error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DiagnosisCode field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - Diagnosis Code identifier \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.DiagnosisCode\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"7212\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Omit diagnosisCodeOntology field",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: diagnosisCodeOntology error \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DiagnosisCodeOntology field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - Diagnosis Code Ontology identifier \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.DiagnosisCodeOntology\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"7212\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Omit diagnosisCodeOntologyVersion field",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: diagnosisCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DiagnosisCodeOntologyVersion field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - Diagnosis Code Ontology Version identifier \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.DiagnosisCodeOntologyVersion\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"individualReferenceId\": \"7212\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Omit dateDiagnosed field",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: dateDiagnosed error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DateDiagnosed field is required\");",
															"});",
															"",
															"pm.test(\"Correct JSON object error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.DateDiagnosed\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"7212a\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Null",
									"item": [
										{
											"name": "Diagnosis submission error -  Null value individualReferenceId",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - individual reference ID identifier \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.IndividualReferenceId\");",
															"});",
															"",
															"pm.test(\"Body response contains: Individual Referece Id error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The IndividualReferenceId field is required\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": null\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Null value diagnosisCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: diagnosisCode error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DiagnosisCode field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - Diagnosis Code identifier \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.DiagnosisCode\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCode\": null,\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"7212a\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Null value diagnosisCodeOntology",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: diagnosisCodeOntology error \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DiagnosisCodeOntology field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - Diagnosis Code Ontology identifier \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.DiagnosisCodeOntology\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": null,\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"7212a\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Null value diagnosisCodeOntologyVersion",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: diagnosisCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DiagnosisCodeOntologyVersion field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - Diagnosis Code Ontology Version identifier \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.DiagnosisCodeOntologyVersion\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": null,\r\n        \"individualReferenceId\": \"7212a\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Null value dateDiagnosed",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: dateDiagnosed error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DateDiagnosed field is required\");",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: Diagnoses[0].Diagnosis.DateDiagnosed\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.DateDiagnosed\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": null,\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"7212a\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Empty",
									"item": [
										{
											"name": "Diagnosis submission error -  Empty individualReferenceId",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - individual reference ID identifier \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.IndividualReferenceId\");",
															"});",
															"",
															"pm.test(\"Body response contains: Individual Referece Id error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The IndividualReferenceId field is required\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Empty diagnosisCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: diagnosisCode error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DiagnosisCode field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - Diagnosis Code identifier \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.DiagnosisCode\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCode\": \"\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"7212a\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Empty diagnosisCodeOntology",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: diagnosisCodeOntology error \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DiagnosisCodeOntology field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - Diagnosis Code Ontology identifier \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.DiagnosisCodeOntology\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"7212a\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Empty diagnosisCodeOntologyVersion",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: diagnosisCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DiagnosisCodeOntologyVersion field is required.\");",
															"});",
															"",
															"pm.test(\"Body response contains: Diagnosis - Diagnosis Code Ontology Version identifier \", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Diagnoses[0].Diagnosis.DiagnosisCodeOntologyVersion\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2011-03-11T12:00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"\",\r\n        \"individualReferenceId\": \"7212a\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Empty dateDiagnosed",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: dateDiagnosed error\", function () {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .to.include(\"$.diagnoses[0].diagnosis.dateDiagnosed\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"7212a\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Invalid",
									"item": [
										{
											"name": "Diagnosis submission error - Invalid dateDiagnosed_month",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: $.diagnoses[0].diagnosis.dateDiagnosed\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"$.diagnoses[0].diagnosis.dateDiagnosed\");",
															"});",
															"",
															"pm.test(\"Response body contains: The JSON value could not be converted\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The JSON value could not be converted\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: diagnosisCode error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Diagnosis Code value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: DiagnosisCodeOntology error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"is not a valid DiagnosisCodeOntology value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contains: DiagnosisCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"is not a valid DiagnosisCodeOntologyVersion value\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2016-13-17T12:53:17-00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"2753\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Invalid dateDiagnosed - abc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: $.diagnoses[0].diagnosis.dateDiagnosed\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"$.diagnoses[0].diagnosis.dateDiagnosed\");",
															"});",
															"",
															"pm.test(\"Response body contains: The JSON value could not be converted\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The JSON value could not be converted\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: diagnosisCode error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Diagnosis Code value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: DiagnosisCodeOntology error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"is not a valid DiagnosisCodeOntology value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contains: DiagnosisCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"is not a valid DiagnosisCodeOntologyVersion value\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"abc\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"2753\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Diagnosis submission error - Invalid dateDiagnosed_day",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: $.diagnoses[0].diagnosis.dateDiagnosed\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"$.diagnoses[0].diagnosis.dateDiagnosed\");",
															"});",
															"",
															"pm.test(\"Response body contains: The JSON value could not be converted\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The JSON value could not be converted\");",
															"});",
															"",
															"",
															"pm.test(\"Response body DOES NOT contain: diagnosisCode error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Diagnosis Code value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: DiagnosisCodeOntology error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"is not a valid DiagnosisCodeOntology value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contains: DiagnosisCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"is not a valid DiagnosisCodeOntologyVersion value\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2016-06-35T12:40:00-00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"2753\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Treatment",
							"item": [
								{
									"name": "Omit",
									"item": [
										{
											"name": "Treatment submission error - Omit dateTreated",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: Treatments[0].Treatment.DateTreated\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.DateTreated\");",
															"});",
															"",
															"pm.test(\"Body response contains: dateTreated error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DateTreated field is required\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Omit individual reference id",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.IndividualReferenceId\");",
															"});",
															"",
															"pm.test(\"Body response contains: individual Referece Id error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The IndividualReferenceId field is required.\");",
															"});",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-18T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Omit treatmentLocation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"//Check response for Individual Reference ID value",
															"pm.test(\"Body response contains: Treatments[0].Treatment.DateTreated\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentLocation\");",
															"});",
															"",
															"pm.test(\"Body response contains: The TreatmentLocation field is required\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentLocation field is required\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Omit treatmentCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentCode\");",
															"});",
															"",
															"pm.test(\"Body response contains: Treatment Code error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentCode field is required.\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Omit treatmentCodeOntology",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentCodeOntology\");",
															"});",
															"",
															"pm.test(\"Body response contains: TreatmentCodeOntology error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentCodeOntology field is required.\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Omit treatmentCodeOntologyVersion",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentCodeOntologyVersion\");",
															"});",
															"",
															"pm.test(\"Body response contains: TreatmentCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentCodeOntologyVersion field is required.\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Null",
									"item": [
										{
											"name": "Treatment submission error - Null value individual reference id Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.IndividualReferenceId\");",
															"});",
															"",
															"pm.test(\"Body response contains: individual Referece Id error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The IndividualReferenceId field is required.\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": null,\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Null value treatmentLocation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentLocation\");",
															"});",
															"",
															"pm.test(\"Body response contains: treatmentLocation error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentLocation field is required\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": null,\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Null value treatmentCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentCode\");",
															"});",
															"",
															"pm.test(\"Body response contains: Treatment Code error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentCode field is required.\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": null,\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Null value treatmentCodeOntology Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentCodeOntology\");",
															"});",
															"",
															"pm.test(\"Body response contains: TreatmentCodeOntology error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentCodeOntology field is required.\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": null,\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Null value treatmentCodeOntologyVersion Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentCodeOntologyVersion\");",
															"});",
															"",
															"pm.test(\"Body response contains: TreatmentCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentCodeOntologyVersion field is required.\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": null\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Null value dateTreated",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field Locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.DateTreated\");",
															"});",
															"",
															"pm.test(\"Body response contains: Date Treated error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The DateTreated field is required\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": null,\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Empty",
									"item": [
										{
											"name": "Treatment submission error - Empty value individual reference id",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.IndividualReferenceId\");",
															"});",
															"",
															"pm.test(\"Body response contains: individual Referece Id error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The IndividualReferenceId field is required.\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Empty value treatmentLocation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: IndividualReferenceId\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentLocation\");",
															"});",
															"",
															"pm.test(\"Body response contains: treatmentLocation error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentLocation field is required\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Empty value treatmentCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentCode\");",
															"});",
															"",
															"pm.test(\"Body response contains: Treatment Code error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentCode field is required.\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Empty value treatmentCodeOntology",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentCodeOntology\");",
															"});",
															"",
															"pm.test(\"Body response contains: TreatmentCodeOntology error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentCodeOntology field is required.\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Empty value treatmentCodeOntologyVersion",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var jsonData = JSON.parse(responseBody);",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"Treatments[0].Treatment.TreatmentCodeOntologyVersion\");",
															"});",
															"",
															"pm.test(\"Body response contains: TreatmentCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The TreatmentCodeOntologyVersion field is required.\");",
															"});"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2011-03-11T12:00:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Treatment submission error - Empty value dateTreated",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"",
															"",
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field Locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"$.treatments[0].treatment.dateTreated\");",
															"});",
															"",
															"pm.test(\"Body response contains: Date Treated error\", function () {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .to.include(\"treatments[0].treatment.dateTreated\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"7212\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Invalid",
									"item": [
										{
											"name": "Treatment submission errors - Invalid dateTreated_month",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field Locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"$.treatments[0].treatment.dateTreated\");",
															"});",
															"",
															"pm.test(\"Body response contains: JSON Error\", function () {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .to.include(\"treatments[0].treatment.dateTreated\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contains: treatmentLocation error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include(\"Invalid TreatmentLocation value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: treatmentCode error\", function () {",
															"    pm.expect(pm.response.text()).to.not .include(\"Invalid TreatmentCode value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: treatmentCodeOntology error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"Invalid TreatmentCodeOntology value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: TreatmentCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"Invalid TreatmentCodeOntologyVersion value\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"1234\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-15-14T08:37:06\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Invalid month"
											},
											"response": []
										},
										{
											"name": "Treatment submission errors - Invalid dateTreated_day",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field Locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"$.treatments[0].treatment.dateTreated\");",
															"});",
															"",
															"pm.test(\"Body response contains: JSON Error\", function () {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .to.include(\"treatments[0].treatment.dateTreated\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contains: treatmentLocation error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include(\"Invalid TreatmentLocation value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: treatmentCode error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include(\"Invalid TreatmentCode value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: treatmentCodeOntology error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"Invalid TreatmentCodeOntology value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: TreatmentCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"Invalid TreatmentCodeOntologyVersion value\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"1234\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-35T08:37:06\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Invalid day"
											},
											"response": []
										},
										{
											"name": "Treatment submission errors - Invalid dateTreated - abc",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Body response contains: Field Locator\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"$.treatments[0].treatment.dateTreated\");",
															"});",
															"",
															"pm.test(\"Body response contains: JSON Error\", function () {",
															"    pm.expect(pm.response.text())",
															"        .to.include(\"The JSON value could not be converted\")",
															"        .to.include(\"treatments[0].treatment.dateTreated\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contains: treatmentLocation error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include(\"Invalid TreatmentLocation value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: treatmentCode error\", function () {",
															"    pm.expect(pm.response.text()).to.not .include(\"Invalid TreatmentCode value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: treatmentCodeOntology error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"Invalid TreatmentCodeOntology value\");",
															"});",
															"",
															"pm.test(\"Response body DOES NOT contain: TreatmentCodeOntologyVersion error\", function () {",
															"    pm.expect(pm.response.text()).to.not.include( \"Invalid TreatmentCodeOntologyVersion value\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"1234\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"abc\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "text - not dateTime"
											},
											"response": []
										}
									]
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Validation error messages",
					"item": [
						{
							"name": "Sample",
							"item": [
								{
									"name": "Sample validation error - Invalid materialType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id2\",id);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DN\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"361317000\",\r\n        \"extractionProcedure\":\"25179006\",\r\n        \"sampleContent\":\"119298005\",\r\n        \"sampleContentMethod\":\"Other\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Sample validation error - Invalid extractionSiteOntology",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id3\",id);",
													"pm.environment.set(\"records\", records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"extractionProcedure\":\"387713003\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"1005009\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Sample validation error - Invalid extractionSiteOntologyVersion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id4\",id);",
													"pm.environment.set(\"records\", records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"extractionProcedure\":\"387713003\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"1005009\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"24\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Sample validation error - Invalid storageTemperature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id5\",id);",
													"pm.environment.set(\"records\", records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"ABC123\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Sample validation error - Invalid availability",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id6\",id);",
													"pm.environment.set(\"records\", records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"availability\": [\r\n          \"INVALID\"\r\n        ],\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Sample validation error - Invalid extractionSite",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id7\",id);",
													"pm.environment.set(\"records\", records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"Embryo\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"17636008\",\r\n        \"sampleContent\":\"119298005\",\r\n        \"sampleContentMethod\":\"Other\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Sample validation error - Invalid extractionProcedure",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id8\",id);",
													"pm.environment.set(\"records\", records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"1005009\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Sample validation error - Invalid sampleContent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id9\",id);",
													"pm.environment.set(\"records\", records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"361317000\",\r\n        \"extractionProcedure\":\"387713003\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"Other\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Sample validation error - Invalid sampleContentMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id10\",id);",
													"pm.environment.set(\"records\", records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"Tissue specimen\",\r\n        \"extractionProcedure\":\"387713003\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"361317000\",\r\n        \"sampleContent\":\"387732009\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Sample validation error - Invalid sex",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id11\",id);",
													"pm.environment.set(\"records\", records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"aaa\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Sample validation error - Invalid yob/aad",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"//extract the ID and total records",
													"let id = response.id;",
													"let records = response.totalRecords;",
													"//Set ID as environment variable",
													"pm.environment.set(\"id12\",id);",
													"pm.environment.set(\"records\", records);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": \"1984\",\r\n        \"ageAtDonation\":\"36\",\r\n        \"dateCreated\": \"2010-02-16T09:58:30-00:00\",\r\n        \"extractionSite\":\"\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check for successsful processing of ALL Sample submissions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function () {}, 20000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"// keep re-requesting until records have been processed",
													"// if(Number(response.submissions[0].recordsProcessed) < 1){",
													"//     postman.setNextRequest('Check for successsful processing of ALL Sample submissions');",
													"// }",
													"",
													"// else",
													"// {",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[0].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[1].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[2].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[3].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[4].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[5].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[6].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[7].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[8].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[9].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[10].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[11].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"",
													"// }"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "bearer {{token_bu2}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/biobank/{{user-biobank-id}}?limit=12",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"biobank",
												"{{user-biobank-id}}"
											],
											"query": [
												{
													"key": "limit",
													"value": "12"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check sample error response - Invalid materialType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Body response contains: materialType error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"is not a valid Material Type value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: DateCreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateCreated value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntology value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: availability error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Availability value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: storageTemperature error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Storage Temperature value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSite error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Body Organ Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionProcedure error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Extraction Procedure value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContent error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Sample Content Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContentMethod error\", function () {",
													"  pm.expect(pm.response.text()).to.not.include(\"is not a valid Sample Content Method value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sex error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sex value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: yearOfBirth/ ageAtDonation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"Failed to Submit Sample: If both AgeAtDonation and YearOfBirth are provided, the difference between DateCreated and YearOfBirth must be AgeAtDonation +/- 1 year\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api-url}}/status/{{id2}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id2}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check sample error response - Invalid extractionSiteOntology",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Body response contains: extractionSiteOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"is not a valid ExtractionSiteOntology value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: DateCreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateCreated value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: materialType error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Material Type value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: availability error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Availability value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: storageTemperature error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Storage Temperature value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSite error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Body Organ Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionProcedure error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Extraction Procedure value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContent error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Sample Content Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContentMethod error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sample Content Method value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sex error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sex value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: yearOfBirth/ ageAtDonation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"Failed to Submit Sample: If both AgeAtDonation and YearOfBirth are provided, the difference between DateCreated and YearOfBirth must be AgeAtDonation +/- 1 year\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api-url}}/status/{{id3}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id3}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check sample error response - Invalid extractionSiteOntologyVersion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Body response contains: extractionSiteOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"is not a valid ExtractionSiteOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: DateCreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateCreated value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntology value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: materialType error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Material Type value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: availability error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Availability value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: storageTemperature error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Storage Temperature value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSite error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Body Organ Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionProcedure error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Extraction Procedure value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContent error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Sample Content Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContentMethod error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sample Content Method value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sex error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sex value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: yearOfBirth/ ageAtDonation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"Failed to Submit Sample: If both AgeAtDonation and YearOfBirth are provided, the difference between DateCreated and YearOfBirth must be AgeAtDonation +/- 1 year\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id4}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id4}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check sample error response - Invalid storageTemperature",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Body response contains: storageTemperature error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"is not a valid Storage Temperature value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: DateCreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateCreated value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntology value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionCSiteOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: availability error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Availability value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: materialType error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Material Type value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSite error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Body Organ Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionProcedure error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Extraction Procedure value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContent error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Sample Content Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContentMethod error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sample Content Method value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sex error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sex value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: yearOfBirth/ ageAtDonation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"Failed to Submit Sample: If both AgeAtDonation and YearOfBirth are provided, the difference between DateCreated and YearOfBirth must be AgeAtDonation +/- 1 year\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id5}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id5}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check sample error response - Invalid availability",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is \"+ response.count, function () {",
													"    pm.expect(response.count).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id6}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id6}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check sample error response - Invalid extractionSite",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Body response contains: extractionSite error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"is not a valid SNOMED Body Organ Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: DateCreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateCreated value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntology value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: availability error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Availability value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: storageTemperature error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Storage Temperature value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: materialType error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Material Type value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionProcedure error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Extraction Procedure Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContent error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Sample Content Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContentMethod error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sample Content Method value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sex error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sex value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: yearOfBirth/ ageAtDonation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"Failed to Submit Sample: If both AgeAtDonation and YearOfBirth are provided, the difference between DateCreated and YearOfBirth must be AgeAtDonation +/- 1 year\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id7}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id7}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check sample error response - Invalid extractionProcedure",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Body response contains: extractionProcedure error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"not a valid SNOMED Extraction Procedure\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: DateCreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateCreated value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntology value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: availability error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Availability value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: storageTemperature error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Storage Temperature value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSite error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Body Organ Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: materialType error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Material Type value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContent error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Sample Content Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContentMethod error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sample Content Method value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sex error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sex value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: yearOfBirth/ ageAtDonation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"Failed to Submit Sample: If both AgeAtDonation and YearOfBirth are provided, the difference between DateCreated and YearOfBirth must be AgeAtDonation +/- 1 year\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id8}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id8}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check sample error response - Invalid sampleContent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Body response contains: sampleContent error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"not a valid SNOMED Sample Content\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: DateCreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateCreated value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntology value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: availability error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Availability value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: storageTemperature error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Storage Temperature value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSite error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Body Organ Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionProcedure error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Extraction Procedure value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: materialType error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Material Type value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContentMethod error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sample Content Method value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sex error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sex value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: yearOfBirth/ ageAtDonation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"Failed to Submit Sample: If both AgeAtDonation and YearOfBirth are provided, the difference between DateCreated and YearOfBirth must be AgeAtDonation +/- 1 year\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id9}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id9}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check sample error response - Invalid sampleContentMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Body response contains: sampleContentMethod error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"not a valid Sample Content Method\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: DateCreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateCreated value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntology value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: availability error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Availability value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: storageTemperature error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Storage Temperature value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSite error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Body Organ Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionProcedure error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Extraction Procedure value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContent error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Sample Content Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: materialType error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Material Type value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sex error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sex value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: yearOfBirth/ ageAtDonation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"Failed to Submit Sample: If both AgeAtDonation and YearOfBirth are provided, the difference between DateCreated and YearOfBirth must be AgeAtDonation +/- 1 year\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id10}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id10}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check sample error response - Invalid sex",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Body response contains: sex error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"is not a valid Sex value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: DateCreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateCreated value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntology value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: availability error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Availability value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: storageTemperature error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Storage Temperature value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSite error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Body Organ Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionProcedure error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Extraction Procedure value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContent error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Sample Content Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContentMethod error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sample Content Method value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: materialType error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Material Type value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: yearOfBirth/ ageAtDonation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"Failed to Submit Sample: If both AgeAtDonation and YearOfBirth are provided, the difference between DateCreated and YearOfBirth must be AgeAtDonation +/- 1 year\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id11}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id11}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check sample error response - Invalid yob/aad",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Body response contains: yearOfBirth/ ageAtDonation error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"If both AgeAtDonation and YearOfBirth are provided\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: materialType error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Material Type value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: DateCreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateCreated value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntology value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSiteOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid ExtractionSiteOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: availability error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Availability value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: storageTemperature error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Storage Temperature value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionSite error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Body Organ Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: extractionProcedure error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Extraction Procedure value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContent error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Sample Content Code value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sampleContentMethod error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sample Content Method value\");",
													"});",
													"",
													"pm.test(\"Body response DOES NOT contain: sex error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Sex value\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id12}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id12}}",
												"error"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Diagnosis",
							"item": [
								{
									"name": "Diagnosis validation error - Invalid diagnosisCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id2\",response.id);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2016-12-17T12:53:17-00:00\",\r\n        \"diagnosisCode\": \"diagnosisCode\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"2753\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Diagnosis validation error - Invalid diagnosisCodeOntology",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id3\",response.id);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2016-12-17T12:53:17-00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED\",\r\n        \"diagnosisCodeOntologyVersion\": \"25\",\r\n        \"individualReferenceId\": \"2753\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Diagnosis validation error - Invalid diagnosisCodeOntologyVersion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id4\",response.id);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"dateDiagnosed\": \"2016-12-17T12:53:17-00:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"diagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"diagnosisCodeOntologyVersion\": 20,\r\n        \"individualReferenceId\": \"2753\"\r\n      },\r\n      \"op\":\"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check for successsful processing of ALL Diagnosis submissions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function () {}, 20000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"// keep re-requesting until records have been processed",
													"// if(Number(response.submissions[0].recordsProcessed) < 1){",
													"//     postman.setNextRequest('Check for successsful processing of ALL Diagnosis submissions');",
													"// }",
													"",
													"// else",
													"// {",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[0].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[1].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[2].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"",
													"// }"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "bearer {{token_bu2}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/biobank/{{user-biobank-id}}?limit=3",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"biobank",
												"{{user-biobank-id}}"
											],
											"query": [
												{
													"key": "limit",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check diagnosis error response - diagnosisCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Response body contains: Diagnosis error identifier\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Failed to Submit Diagnosis:\");",
													"});",
													"",
													"pm.test(\"Response body contains: diagnosisCode error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"is not a valid SNOMED Diagnosis Code value\");",
													"});",
													"    pm.test(\"Response body DOES NOT contains: DateDiagnosed error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateDiagnosed value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: DiagnosisCodeOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid DiagnosisCodeOntology value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contains: DiagnosisCodeOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid DiagnosisCodeOntologyVersion value\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id2}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id2}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check diagnosis error response - diagnosisCodeOntology",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Response body contains: Diagnosis error identifier\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Failed to Submit Diagnosis:\");",
													"});",
													"",
													"pm.test(\"Response body contains: DiagnosisCodeOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.include( \"is not a valid DiagnosisCodeOntology value\");",
													"});",
													"",
													"pm.test(\"Response body DOEN NOT contain: diagnosisCode error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Diagnosis Code value\");",
													"});",
													"    pm.test(\"Response body DOES NOT contain: DateDiagnosed error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateDiagnosed value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: DiagnosisCodeOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid DiagnosisCodeOntologyVersion value\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id3}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id3}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check diagnosis error response - diagnosisCodeOntologyVersion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Response body contains: Diagnosis error identifier\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Failed to Submit Diagnosis:\");",
													"});",
													"",
													"pm.test(\"Response body contains: DiagnosisCodeOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.include( \"is not a valid DiagnosisCodeOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: DiagnosisCodeOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid DiagnosisCodeOntology value\");",
													"});",
													"",
													"pm.test(\"Response body DOEN NOT contain: diagnosisCode error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid SNOMED Diagnosis Code value\");",
													"});",
													"    pm.test(\"Response body DOES NOT contain: DateDiagnosed error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateDiagnosed value\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id4}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id4}}",
												"error"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Treatment",
							"item": [
								{
									"name": "Treatment validation errors - Invalid treatmentLocation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id2\",response.id);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"1234\",\r\n        \"treatmentLocation\": \"Oral\",\r\n        \"dateTreated\": \"2016-09-14T08:37:06\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Treatment validation errors - Invalid treatmentCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id3\",response.id);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"1234\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-14T08:37:06\",\r\n        \"treatmentCode\": \"asdfsdfasf\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Treatment validation errors - Invalid treatmentCodeOntology",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id4\",response.id);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"1234\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-14T08:37:06\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Treatment validation errors - Invalid treatmentCodeOntologyVersion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//Capture environment variables",
													"//access response body",
													"let response = pm.response.json();",
													"",
													"//Set ID as environment variable",
													"pm.environment.set(\"id5\",response.id);",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"1234\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-14T08:37:06\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": 24\r\n    },\r\n      \"op\":\"submit\"\r\n    }\r\n   ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check for successsful processing of ALL Treatment submissions Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"setTimeout(function () {}, 20000);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"// keep re-requesting until records have been processed",
													"// if(Number(response.submissions[0].recordsProcessed) < 1){",
													"//     postman.setNextRequest('Check for successsful processing of ALL Treatment submissions');",
													"// }",
													"",
													"// else",
													"// {",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[0].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[1].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[2].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"",
													"pm.test(\"Submissions have processed\", function () {",
													"    pm.expect(response.submissions[3].recordsProcesed).to.not.eql(\"0\");",
													"});",
													"// }"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "bearer {{token_bu2}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/biobank/{{user-biobank-id}}?limit=4",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"biobank",
												"{{user-biobank-id}}"
											],
											"query": [
												{
													"key": "limit",
													"value": "4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check treatment error response - treatmentLocation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Response body contains treatment record identifier\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"individualReferenceId: 1234\");",
													"});",
													"",
													"pm.test(\"Response body contains: treatmentLocation error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"is not a valid Treatment Location value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: treatmentCode error\", function () {",
													"    pm.expect(pm.response.text()).to.not .include(\"is not a valid SNOMED Treatment Code value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: treatmentCodeOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid TreatmentCodeOntology value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: TreatmentCodeOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid TreatmentCodeOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: individualReferenceId error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid individualReferenceId value\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id2}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id2}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check treatment error response - treatmentCode",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Response body contains treatment record identifier\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"individualReferenceId: 1234\");",
													"});",
													"",
													"pm.test(\"Response body contains: treatmentCode error\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"is not a valid SNOMED Treatment\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: dateTreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateTreated value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: treatmentLocation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Treatment Location value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: treatmentCodeOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid TreatmentCodeOntology value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: TreatmentCodeOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid TreatmentCodeOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: individualReferenceId error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid IndividualReferenceId value\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id3}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id3}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check treatment error response - treatmentCodeOntology",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Response body contains Treatment record identifier\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"individualReferenceId: 1234\");",
													"});",
													"",
													"",
													"pm.test(\"Response body contains: treatmentCodeOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.include( \"is not a valid TreatmentCodeOntology value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: dateTreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateTreated value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: treatmentLocation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Treatment Location value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: treatmentCode error\", function () {",
													"    pm.expect(pm.response.text()).to.not .include(\"is not a valid SNOMED Treatment Code value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: TreatmentCodeOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid TreatmentCodeOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: individualReferenceId error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid individualReferenceId value\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id4}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id4}}",
												"error"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check treatment error response - treatmentCodeOntologyVersion",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//access response body",
													"let response = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Error count is 1\", function () {",
													"    pm.expect(response.count).to.eql(1);",
													"});",
													"",
													"pm.test(\"Response body contains Treatment record identifier\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"individualReferenceId: 1234\");",
													"});",
													"",
													"",
													"pm.test(\"Response body contains: treatmentCodeOntologyVersion error\", function () {",
													"    pm.expect(pm.response.text()).to.include( \"is not a valid TreatmentCodeOntologyVersion value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: dateTreated error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid DateTreated value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: treatmentLocation error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include(\"is not a valid Treatment Location value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: treatmentCode error\", function () {",
													"    pm.expect(pm.response.text()).to.not .include(\"is not a valid SNOMED Treatment Code value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: TreatmentCodeOntology error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid TreatmentCodeOntology value\");",
													"});",
													"",
													"pm.test(\"Response body DOES NOT contain: individualReferenceId error\", function () {",
													"    pm.expect(pm.response.text()).to.not.include( \"is not a valid individualReferenceId value\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//setTimeout(function () {}, 10000);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "bearer {{token_bu1}}"
											}
										],
										"url": {
											"raw": "{{api-url}}/status/{{id5}}/error",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"status",
												"{{id5}}",
												"error"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Duplicate data",
					"item": [
						{
							"name": "Duplicates within a batch",
							"item": [
								{
									"name": "Duplicate data in batch - Sample 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Matching identifiers error is returned\", function () {",
													"    pm.response.to.have.body(\"This submission contains multiple entries with matching identifiers in the following sections: Sample\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1928,\r\n        \"dateCreated\": \"2010-09-03T05:16:08-01:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1936,\r\n        \"dateCreated\": \"2008-01-15T08:50:20-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"-60°C to -85°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										},
										"description": "Same barcode and indiviual reference ID"
									},
									"response": []
								},
								{
									"name": "Duplicate data in batch - Sample 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json();",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF2\",\r\n        \"barcode\": \"CODE2\",\r\n        \"YearOfBirth\": 1986,\r\n        \"dateCreated\": \"2009-09-01T12:45:16-01:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"Other\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF3\",\r\n        \"barcode\": \"CODE2\",\r\n        \"YearOfBirth\": 1925,\r\n        \"dateCreated\": \"2010-10-03T02:37:55-01:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"-18°C to -35°C\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										},
										"description": "Same barcode, different indiviual reference ID"
									},
									"response": []
								},
								{
									"name": "Duplicate data in batch - Sample 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json();",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"REF4\",\r\n        \"barcode\": \"CODE4\",\r\n        \"YearOfBirth\": 1932,\r\n        \"dateCreated\": \"2002-11-09T12:49:57-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"REF4\",\r\n        \"barcode\": \"CODE5\",\r\n        \"YearOfBirth\": 1980,\r\n        \"dateCreated\": \"2008-08-02T03:18:16-01:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										},
										"description": "Same indiviual reference ID, different barcode"
									},
									"response": []
								},
								{
									"name": "Duplicate Diagnosis - Same Reference",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Matching identifiers error is returned\", function () {",
													"    pm.response.to.have.body(\"This submission contains multiple entries with matching identifiers in the following sections: Diagnosis\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"REF1\",\r\n        \"dateDiagnosed\": \"2011-10-30T01:44:48-00:00\",\r\n        \"diagnosisCode\": \"Coffin-Siris syndrome (disorder)\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"REF1\",\r\n        \"dateDiagnosed\": \"2011-10-30T01:44:48-00:00\",\r\n        \"diagnosisCode\": \"Coffin-Siris syndrome (disorder)\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										},
										"description": "Same individual reference ID"
									},
									"response": []
								},
								{
									"name": "Duplicate Diagnosis - Different Reference",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json();",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"REF2\",\r\n        \"dateDiagnosed\": \"2011-10-30T01:44:48-00:00\",\r\n        \"diagnosisCode\": \"Coffin-Siris syndrome (disorder)\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"REF3\",\r\n        \"dateDiagnosed\": \"2011-10-31T01:44:48-00:00\",\r\n        \"diagnosisCode\": \"Coffin-Siris syndrome (disorder)\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										},
										"description": "Different indivuidual reference ID"
									},
									"response": []
								},
								{
									"name": "Duplicate data in batch - Treatment 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 409\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Matching identifiers error is returned\", function () {",
													"    pm.response.to.have.body(\"This submission contains multiple entries with matching identifiers in the following sections: Treatment\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"REF5\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"Coffin-Siris syndrome (disorder)\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"REF5\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"Coffin-Siris syndrome (disorder)\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Duplicate data in batch - Treatment 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let response = pm.response.json();",
													"",
													"//Test that status code is either 200, 201 or 202    ",
													"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_bu1}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"REF6\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"Coffin-Siris syndrome (disorder)\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"REF7\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2016-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"Coffin-Siris syndrome (disorder)\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{api-url}}/submit/{{user-biobank-id}}",
											"host": [
												"{{api-url}}"
											],
											"path": [
												"submit",
												"{{user-biobank-id}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "Tests to show that where duplicates are contained within a batch, and that batch is posted to the submission queue, a conflict response will be observed and no records will be added to the submission queue"
						},
						{
							"name": "Duplicates posted in separate batches",
							"item": [
								{
									"name": "Samples",
									"item": [
										{
											"name": "Duplicate data sample - Initial posting",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"S7207a\",\r\n        \"barcode\": \"S7207a\",\r\n        \"YearOfBirth\": 1928,\r\n        \"dateCreated\": \"2010-09-03T05:16:08-01:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Same barcode and indiviual reference ID"
											},
											"response": []
										},
										{
											"name": "Duplicate data sample - Identical data",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"S7207a\",\r\n        \"barcode\": \"S7207a\",\r\n        \"YearOfBirth\": 1928,\r\n        \"dateCreated\": \"2010-09-03T05:16:08-01:00\",\r\n         \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Same barcode and indiviual reference ID"
											},
											"response": []
										},
										{
											"name": "Duplicate data sample - Different barcode",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"S7207a\",\r\n        \"barcode\": \"S7207\",\r\n        \"YearOfBirth\": 1928,\r\n        \"dateCreated\": \"2010-09-03T05:16:08-01:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Differnt barcode, same indiviual reference ID"
											},
											"response": []
										},
										{
											"name": "Duplicate data sample - Different individual referenc ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"RNA\",\r\n        \"individualReferenceId\": \"S7207\",\r\n        \"barcode\": \"S7207a\",\r\n        \"YearOfBirth\": 1928,\r\n        \"dateCreated\": \"2010-09-03T05:16:08-01:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Differnt barcode, same indiviual reference ID"
											},
											"response": []
										}
									],
									"description": "Where a record has the same identifying properties as an earlier submission, the record with the latest timestamp will be committed to the database. ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Treatment",
									"item": [
										{
											"name": "Duplicate data treatment - Initial posting",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"T7207a\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2012-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"10090001\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Duplicate data treatment - Identical data",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"T7207a\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2012-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"10090001\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Duplicate data treatment - Change OrgID",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"// let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"T7207a\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2012-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"10090001\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Duplicate data treatment - Change individualReferenceId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"T7207b\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2012-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"10090001\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Duplicate data treatment - Change dateTreated",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"T7207a\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2014-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"10090001\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Duplicate data treatment - Change treatmentCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"treatments\": [\r\n    {\r\n      \"treatment\": {\r\n        \"individualReferenceId\": \"T7207a\",\r\n        \"treatmentLocation\": \"Oral Medication\",\r\n        \"dateTreated\": \"2012-09-12T08:37:06-01:00\",\r\n        \"treatmentCode\": \"10002003\",\r\n        \"treatmentCodeOntology\": \"SNOMED-CT\",\r\n        \"treatmentCodeOntologyVersion\": \"25\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												}
											},
											"response": []
										}
									],
									"description": "Where a record has the same identifying properties as an earlier submission, the record with the latest timestamp will be committed to the database. ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Diagnosis",
									"item": [
										{
											"name": "Duplicate data diagnosis - Initial posting",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"D7207a\",\r\n        \"dateDiagnosed\": \"2010-09-12T08:37:06-01:00\",\r\n        \"diagnosisCode\": \"10007009\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n    },\r\n     \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Same individual reference ID"
											},
											"response": []
										},
										{
											"name": "Duplicate data diagnosis - Identical data",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"D7207a\",\r\n        \"dateDiagnosed\": \"2010-09-12T08:37:06-01:00\",\r\n        \"diagnosisCode\": \"10007009\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n    },\r\n     \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Same individual reference ID"
											},
											"response": []
										},
										{
											"name": "Duplicate data diagnosis - Change OrgId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"D7207a\",\r\n        \"dateDiagnosed\": \"2010-09-12T08:37:06-01:00\",\r\n        \"diagnosisCode\": \"10007009\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n    },\r\n     \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Same individual reference ID"
											},
											"response": []
										},
										{
											"name": "Duplicate data diagnosis - Change individualReferenceId",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"D7207b\",\r\n        \"dateDiagnosed\": \"2010-09-12T08:37:06-01:00\",\r\n        \"diagnosisCode\": \"10007009\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n    },\r\n     \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Same individual reference ID"
											},
											"response": []
										},
										{
											"name": "Duplicate data diagnosis - Change dateDiagnosed",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"D7207a\",\r\n        \"dateDiagnosed\": \"2014-09-12T08:37:06-01:00\",\r\n        \"diagnosisCode\": \"10007009\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n    },\r\n     \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Same individual reference ID"
											},
											"response": []
										},
										{
											"name": "Duplicate data diagnosis - Change diagnosisCode",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let response = pm.response.json();",
															"",
															"//Test that status code is either 200, 201 or 202    ",
															"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_bu1}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"diagnoses\": [\r\n    {\r\n      \"diagnosis\": {\r\n        \"individualReferenceId\": \"D7207a\",\r\n        \"dateDiagnosed\": \"2010-09-12T08:37:06-01:00\",\r\n        \"diagnosisCode\": \"10001005\",\r\n        \"DiagnosisCodeOntology\": \"SNOMED-CT\",\r\n        \"DiagnosisCodeOntologyVersion\": \"25\"\r\n    },\r\n     \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
												},
												"url": {
													"raw": "{{api-url}}/submit/{{user-biobank-id}}",
													"host": [
														"{{api-url}}"
													],
													"path": [
														"submit",
														"{{user-biobank-id}}"
													]
												},
												"description": "Same individual reference ID"
											},
											"response": []
										}
									],
									"description": "Where a record has the same identifying properties as an earlier submission, the record with the latest timestamp will be committed to the database. ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						}
					]
				}
			],
			"description": "These tests are designed to check the conditions that trigger the error messages and that the error message returned matches our expected outcomes for a given data object.\n\nEach test will target a specific error message and the conditions required to trigger that error. We then assert that the error message is what we expect.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Check Processing Continues Despite Errors",
			"item": [
				{
					"name": "Submit Records (No Errors) 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//access response body",
									"let response = pm.response.json();",
									"",
									"//Set ID as environment variable",
									"pm.environment.set(\"id1\", response.id);",
									"pm.environment.set(\"records1\", response.totalRecords);",
									"",
									"pm.test(\"Status code is 200 Accepted\", () => {",
									"    pm.expect(pm.response.code).to.eq(202);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"samples\": [\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"f6cc0ed1-9ae7-49bc-bff7-0e7796848b8f\",\r\n                \"barcode\": \"89c37ab8-7c2b-46d1-8e27-72422261c3d2\",\r\n                \"YearOfBirth\": 1943,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-08-13T09:28:33-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"bff2d566-e3f5-48e4-b6a9-2ed021881cd4\",\r\n                \"barcode\": \"4c8fa20a-2464-4e6a-8285-22e344b0bf33\",\r\n                \"YearOfBirth\": 1957,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-07-10T10:18:34-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"853ce39a-0b99-42f8-928a-a373a6fcdb8d\",\r\n                \"barcode\": \"661e1ad9-ffa8-4f17-8e35-85b657db07af\",\r\n                \"YearOfBirth\": 1957,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-10-23T05:35:42-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"dd998975-ea74-42d5-8281-d1aaa33ad4a6\",\r\n                \"barcode\": \"6c0819c9-299b-455c-8765-3782c52332f9\",\r\n                \"YearOfBirth\": 1946,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-03-02T07:02:54-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"68969fed-d96e-4cef-8c20-f238b632545d\",\r\n                \"barcode\": \"ade286a3-f243-4293-a2e1-9f47851e31ff\",\r\n                \"YearOfBirth\": 1967,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-01-13T09:06:15-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"404fcdd4-c9b4-41de-99ab-c614961798b0\",\r\n                \"barcode\": \"09c13993-3831-46a8-b379-b0bb41ec9f33\",\r\n                \"YearOfBirth\": 1976,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-09-12T04:48:09-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"414c7f5e-3390-4113-a2d2-fb5130e08fff\",\r\n                \"barcode\": \"b98cfcf8-8523-43ca-88f2-5a09f3757f06\",\r\n                \"YearOfBirth\": 1994,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-02-21T09:21:52-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"426dc942-acb5-4d87-bf05-6c21480a1827\",\r\n                \"barcode\": \"01163f6e-c835-4e17-abfe-87d435b98447\",\r\n                \"YearOfBirth\": 1987,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2006-09-29T11:07:28-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"fc76bf4c-59fc-4184-9c97-36bad6828ce1\",\r\n                \"barcode\": \"a0905e57-adb4-44a3-b52a-e425a6e1bec2\",\r\n                \"YearOfBirth\": 1996,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-06-17T08:40:05-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"a451572c-2930-49cc-b564-d8ec35e7680b\",\r\n                \"barcode\": \"edbbbe62-5c04-4b8d-a4cb-677f4ed5a6dc\",\r\n                \"YearOfBirth\": 1972,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-03-25T07:01:38-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"c7e557e7-1fe7-4d2d-a501-a6b7d6ea7005\",\r\n                \"barcode\": \"36dc7ac5-c8d6-49f9-9df9-94fe09253bb2\",\r\n                \"YearOfBirth\": 1981,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-04-24T10:44:56-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"5bf9f0d1-3046-48a2-a699-82ed54bfc63a\",\r\n                \"barcode\": \"1d836c58-69b0-44a8-80b0-21e4a819e388\",\r\n                \"YearOfBirth\": 1948,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-11-05T05:12:41-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"7e857350-ac17-4a44-8ecb-4a5a84d8aab4\",\r\n                \"barcode\": \"4f0432ab-c72f-427e-99fb-aa0b4cc5f7f1\",\r\n                \"YearOfBirth\": 1920,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2006-11-02T11:23:38-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"b6c06774-5b1a-423b-b339-215c94b51545\",\r\n                \"barcode\": \"93f27d0d-00c6-4891-b00a-d014a12cb78c\",\r\n                \"YearOfBirth\": 1986,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-11-13T08:18:46-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"bb190d00-bb8a-4df4-b4d5-64b58004244b\",\r\n                \"barcode\": \"a9006af6-49e2-4781-a119-b1343056745e\",\r\n                \"YearOfBirth\": 1997,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2009-02-15T07:38:21-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"f1aa6ad4-b2b8-46f6-8a83-e125f8b55dbd\",\r\n                \"barcode\": \"8b5a0455-f800-48bb-a6cb-e1a7fa11866d\",\r\n                \"YearOfBirth\": 1958,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-07-17T01:07:24-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8ce2c471-8e9a-40a4-93aa-9ebae568e3cb\",\r\n                \"barcode\": \"0f6516c0-1111-4047-b2eb-eb9b7234d8e4\",\r\n                \"YearOfBirth\": 1962,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-12-13T06:29:34-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8d3896ed-571b-4d8e-aba3-fb1f1630473b\",\r\n                \"barcode\": \"eb66c98e-1547-4b01-9d33-86594d95d1dc\",\r\n                \"YearOfBirth\": 1929,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-06-22T09:51:10-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"6f4bd735-0d00-4886-9ce7-f029e101f5ef\",\r\n                \"barcode\": \"e6b260f3-4915-4948-905f-ab632ffa5f66\",\r\n                \"YearOfBirth\": 1955,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-11-07T08:33:58-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"dfab26d6-b43b-48a7-a9a8-c94c4f534bb2\",\r\n                \"barcode\": \"3f5b705b-c247-487a-97fc-b159fcea8e67\",\r\n                \"YearOfBirth\": 1990,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-04-12T09:54:26-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"139c258d-642b-445a-8d02-14edebc20d78\",\r\n                \"barcode\": \"f88d4577-68b9-4061-b1c9-b2a0015eb3b3\",\r\n                \"YearOfBirth\": 1924,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-09-18T03:30:40-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"7e1829ae-dff6-4116-a7e4-84ee0ecf5a8d\",\r\n                \"barcode\": \"d8ca87cd-2fea-468a-b392-7476408d3259\",\r\n                \"YearOfBirth\": 1986,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-10-26T06:11:44-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"0c9e3ef1-1c1c-455f-ae3d-de3c55e6bb43\",\r\n                \"barcode\": \"0e203cb7-32e0-4d8c-aaac-cdc491dc91e4\",\r\n                \"YearOfBirth\": 1943,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2006-06-30T08:08:02-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8101edc0-7512-4531-a9a7-6d3577de1df4\",\r\n                \"barcode\": \"79eaa27b-787e-465b-a38c-efd7707e5089\",\r\n                \"YearOfBirth\": 1912,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-09-20T03:52:30-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"cb200cb6-6cab-4361-acd9-76d853cb98d2\",\r\n                \"barcode\": \"9fd8db61-e1cb-49ac-84fc-25cc91d37fd9\",\r\n                \"YearOfBirth\": 1986,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-01-07T08:20:59-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"39ea5964-3779-4f4c-b5bc-e3a2b2ac13cc\",\r\n                \"barcode\": \"a4937abf-dd99-480f-b814-ebcaa40b477c\",\r\n                \"YearOfBirth\": 1924,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-02-16T12:03:49-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"6a37091b-9e14-41da-bc9f-261795ebda6b\",\r\n                \"barcode\": \"9d4adc39-60e1-4ee6-b84e-950d5ca9aa15\",\r\n                \"YearOfBirth\": 1930,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-05-24T03:50:33-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"62949e69-52a1-4205-9176-4878e31c0514\",\r\n                \"barcode\": \"be1f83e8-fdaa-4468-a4e2-9776cd3fb368\",\r\n                \"YearOfBirth\": 1975,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-11-25T02:07:49-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"c22b3623-b993-4801-9d53-c5db4e7ac040\",\r\n                \"barcode\": \"fff3f900-a1f2-416a-9d47-dabb945992e6\",\r\n                \"YearOfBirth\": 1943,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-11-17T01:22:47-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"9af125bb-e2d8-4242-9df4-b46232ac4818\",\r\n                \"barcode\": \"3e5f3d33-b07c-43dd-9d8c-51fd57b1bec0\",\r\n                \"YearOfBirth\": 1911,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-05-24T03:51:34-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"1cde05bb-e5de-48be-8a08-f8c9d4f059e8\",\r\n                \"barcode\": \"f38b83b6-b3d2-436b-b7f8-735f4cd2f014\",\r\n                \"YearOfBirth\": 1915,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-01-26T08:09:18-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"3b207624-500f-408c-8688-09966f5c79df\",\r\n                \"barcode\": \"1a4fd3af-4ec4-418f-aa49-4930999839ff\",\r\n                \"YearOfBirth\": 1947,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-05-14T05:30:58-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"7955b328-ca51-4f80-a8b5-beaca04c9a99\",\r\n                \"barcode\": \"d7ebccc1-bae8-4797-af08-f640898d6085\",\r\n                \"YearOfBirth\": 1910,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-04-21T04:06:31-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"1328dc56-5ce4-4761-9edf-b3dc773e48f0\",\r\n                \"barcode\": \"47749db2-c37c-482c-a91b-a058625481d9\",\r\n                \"YearOfBirth\": 1977,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-02-25T08:04:22-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"812da1a7-dda5-40d1-9c14-8ef05cfe9cd9\",\r\n                \"barcode\": \"47ea1bfd-adec-43bd-a968-b3f072851f3b\",\r\n                \"YearOfBirth\": 1986,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2008-11-15T09:12:46-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"8798581f-faa5-419a-936a-1df935014f8b\",\r\n                \"barcode\": \"32ab63ce-e793-40ef-ae96-2df0db5c3ebb\",\r\n                \"YearOfBirth\": 1929,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-05-15T02:19:01-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"11f76e20-a2cd-4920-b875-cf59e02de2a7\",\r\n                \"barcode\": \"ffd9ef49-1375-4fac-869b-6a1ab1396e3c\",\r\n                \"YearOfBirth\": 1998,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2009-11-18T03:51:11-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"a4546610-188a-4644-82e1-1b489da2578f\",\r\n                \"barcode\": \"87e4fa47-c8a8-45b7-9607-b6acd0afc875\",\r\n                \"YearOfBirth\": 1921,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-03-12T02:20:02-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"1e424a33-a9f7-4b81-832f-62f49b4a7b7d\",\r\n                \"barcode\": \"d1a139f4-5056-4ce0-be3c-1e9aecada4c0\",\r\n                \"YearOfBirth\": 1973,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-10-05T03:38:21-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"d9925ba3-1f19-49e1-9788-1fe80bd875d3\",\r\n                \"barcode\": \"51f67025-c2c4-47dc-a946-218afaf31182\",\r\n                \"YearOfBirth\": 1977,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-11-10T03:33:49-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"d89fa878-8e44-424c-ba17-5af4d05b38db\",\r\n                \"barcode\": \"8e4d1ee9-f3c0-4fc9-b6de-62436feadccb\",\r\n                \"YearOfBirth\": 1943,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-04-17T11:07:41-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8a906816-437d-4820-879d-26a4fd4b9ae5\",\r\n                \"barcode\": \"7481de02-dc8e-4324-bf58-d48c91801e4a\",\r\n                \"YearOfBirth\": 1984,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-10-23T01:41:13-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"e3900d1e-b288-4075-9281-562a6bed1982\",\r\n                \"barcode\": \"87908348-c039-4707-830d-c62201767ac4\",\r\n                \"YearOfBirth\": 1964,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-05-07T12:32:25-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"e16dede8-8f84-455a-9c36-a0b25440cdbf\",\r\n                \"barcode\": \"7c3a5d95-dffa-4cc6-807b-a834106dac16\",\r\n                \"YearOfBirth\": 1938,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-10-30T08:31:37-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"5e5401a4-6b23-4381-a31b-076f4db3701a\",\r\n                \"barcode\": \"e3756a97-7bd5-43e9-b109-37354ffd11da\",\r\n                \"YearOfBirth\": 1976,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2006-05-31T05:33:50-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"678f1dd5-2ec4-4fa2-9255-7afdbc872e16\",\r\n                \"barcode\": \"32e20205-5db8-47a5-8579-04a06c912c29\",\r\n                \"YearOfBirth\": 1938,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-01-05T02:51:46-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"f39a1f29-6b3d-4b3a-8443-7634baf60c5d\",\r\n                \"barcode\": \"2f318345-f295-4c79-9da9-6802e65abc62\",\r\n                \"YearOfBirth\": 1941,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-03-22T08:50:37-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"84d98a7d-dd0a-4061-8c77-30fa512fda9e\",\r\n                \"barcode\": \"a1267dc5-94a0-4f8f-892e-246cf1fd5fd6\",\r\n                \"YearOfBirth\": 1933,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-10-07T11:35:31-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"6b5d7bc5-7f3b-411d-9152-fa805fed95c8\",\r\n                \"barcode\": \"bf5ac9bc-7bbf-4a7d-bc8b-d84db202073a\",\r\n                \"YearOfBirth\": 1946,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-10-26T10:37:52-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"b39a40ea-275c-49d4-9e0f-5dc400631f52\",\r\n                \"barcode\": \"20c69ab1-b2f9-4ae4-b056-366aa47de9da\",\r\n                \"YearOfBirth\": 1937,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-03-15T02:41:01-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"2ca961a4-3917-421c-afe9-addd8911e270\",\r\n                \"barcode\": \"7f27fdc2-2a43-44d2-8232-a5162f8fc821\",\r\n                \"YearOfBirth\": 1915,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-09-19T09:25:52-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"74261456-ec70-43a0-83b0-61013a878092\",\r\n                \"barcode\": \"bf921c18-2863-40b7-945c-78fe50dfe095\",\r\n                \"YearOfBirth\": 1976,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-09-27T07:49:30-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"46e8e45f-400a-46dd-b161-bd7c072f314a\",\r\n                \"barcode\": \"29488bed-bfb9-4c7f-aeb9-38f376e2878d\",\r\n                \"YearOfBirth\": 1925,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2002-06-08T08:03:52-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"f2ee8b55-24b2-4efa-bf08-646263531b94\",\r\n                \"barcode\": \"6d719b9a-f3c4-4c9d-b86a-2d4570b52e19\",\r\n                \"YearOfBirth\": 1950,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-03-31T11:09:58-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"c39f2c18-b325-407b-af31-ed613e544382\",\r\n                \"barcode\": \"df90bbc6-1a91-4f07-9acf-84acdf0f88f1\",\r\n                \"YearOfBirth\": 1926,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2002-04-01T05:44:01-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"42fe6dd3-46d6-433d-9265-938fad293a76\",\r\n                \"barcode\": \"263ce0ab-ceda-4b0a-b63c-140423853cb7\",\r\n                \"YearOfBirth\": 1914,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-07-23T02:39:43-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"c7889b2d-e4f7-4d3c-9d56-9c2ae1f6cbf2\",\r\n                \"barcode\": \"b9492ed1-ac5c-4da5-86a0-5a9498ddc552\",\r\n                \"YearOfBirth\": 1974,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-07-15T04:56:52-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"f736c919-ef04-49c2-bde6-e42a3629b35d\",\r\n                \"barcode\": \"6c9f214f-77e5-434b-8cd8-f15ce82d201a\",\r\n                \"YearOfBirth\": 1989,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-03-10T09:29:10-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"69eea518-c0b3-474e-933f-7403c2d720fe\",\r\n                \"barcode\": \"b7743c69-1321-4c3d-9ce6-ba2b41ac3dd3\",\r\n                \"YearOfBirth\": 1914,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2008-02-06T11:14:33-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"101769c7-84c5-4bc8-9ca5-3a48a5791164\",\r\n                \"barcode\": \"148ff27f-8508-4473-83d1-57ec8e49bf90\",\r\n                \"YearOfBirth\": 1926,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2008-06-11T12:26:12-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"7ded4618-9593-4503-9ff3-c881aaf001a2\",\r\n                \"barcode\": \"4ac37467-9ddb-4a94-9229-3cfd6c2cf415\",\r\n                \"YearOfBirth\": 1964,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-08-13T09:25:44-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"85f06d4c-ac8f-4178-9376-97f974321fd8\",\r\n                \"barcode\": \"038fb41f-1e32-42eb-90ec-47c6985c68ee\",\r\n                \"YearOfBirth\": 1976,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-09-16T07:13:58-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"2103ebbe-bb2a-4d30-ba8c-603306678dcb\",\r\n                \"barcode\": \"db650907-bdd5-4d87-b8e0-59d34e32531c\",\r\n                \"YearOfBirth\": 1949,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-09-05T08:26:09-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"ffc5e07d-e88b-4c34-a724-10e81a6dfa14\",\r\n                \"barcode\": \"2f457845-4493-4933-9283-e137da4d1df2\",\r\n                \"YearOfBirth\": 1987,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-10-01T12:08:27-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"47c6b46e-0c75-4d92-bdb0-394a85fa758b\",\r\n                \"barcode\": \"c623bc74-1727-4e9f-a596-fc1e68266b2b\",\r\n                \"YearOfBirth\": 1911,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-11-26T12:31:19-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"2bbbdca5-8411-4ede-af4b-28f2c5ef581c\",\r\n                \"barcode\": \"f4604961-bd31-4157-916e-b3b66f908d73\",\r\n                \"YearOfBirth\": 1914,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2009-10-14T08:38:03-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"c6cb667e-358f-47a9-b4be-f174db5c8286\",\r\n                \"barcode\": \"445bc697-4021-4424-b4e6-35bebbdad7db\",\r\n                \"YearOfBirth\": 1977,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-12-30T05:18:29-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"2383b276-80f0-4790-98f0-c6512ae613e6\",\r\n                \"barcode\": \"b52f09be-7495-41d0-94c8-ea616e1823bd\",\r\n                \"YearOfBirth\": 1946,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-11-11T12:08:27-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"3a024151-84b6-4448-bc82-df80d02e5e83\",\r\n                \"barcode\": \"cd82702c-99bd-4571-9012-4c37de3bb3de\",\r\n                \"YearOfBirth\": 1979,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-09-28T12:34:51-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"13575a54-00d1-43e2-9b27-43c6ec96ca6d\",\r\n                \"barcode\": \"d8fdeecf-1850-4467-8b79-5513e1a9f8af\",\r\n                \"YearOfBirth\": 1971,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-12-16T12:26:18-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"87c597bb-dd7a-46b6-9937-bd84eb72f208\",\r\n                \"barcode\": \"f15a0333-8477-4fbc-8349-cda7b503de02\",\r\n                \"YearOfBirth\": 1943,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-09-09T04:57:10-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"cbe110e7-fcf2-4283-90a4-b682ff8c353a\",\r\n                \"barcode\": \"58a0093a-0620-46c7-91d2-0a21ae24ead6\",\r\n                \"YearOfBirth\": 1985,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-01-21T12:39:12-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"6f0369cd-b4bd-4dfc-9f71-8d3f3c721689\",\r\n                \"barcode\": \"5ec8b551-8fd4-46c6-9232-2904c892fc4b\",\r\n                \"YearOfBirth\": 1988,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-10-13T02:57:03-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"f1dc7869-0149-41a0-93cd-155e09be0a22\",\r\n                \"barcode\": \"c5f36708-0bd2-4873-864c-011dc3fe63ff\",\r\n                \"YearOfBirth\": 1979,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-09-02T08:33:33-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8701a0be-7044-4128-aaab-c7fbd4cc86c7\",\r\n                \"barcode\": \"8edd3fa7-14b2-4824-bce3-82377a5dfed0\",\r\n                \"YearOfBirth\": 1913,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-08-31T04:25:20-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"38246fcc-e66c-48a0-bc48-c902ebc35b13\",\r\n                \"barcode\": \"67ebcbc9-de8a-4d06-8d1b-c15767d5ceb0\",\r\n                \"YearOfBirth\": 1914,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-07-07T05:24:34-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"054807dd-5acf-42b9-b38c-bc7678bbc387\",\r\n                \"barcode\": \"c0133c88-77b2-4d05-9a77-cf503e5baa9d\",\r\n                \"YearOfBirth\": 1962,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-01-19T07:41:04-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"4a776574-6e78-40a5-9385-a0401e9985dc\",\r\n                \"barcode\": \"2e18d485-f422-4245-8d1e-eda91b7dc4e6\",\r\n                \"YearOfBirth\": 1994,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-09-27T01:51:23-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"ba097ca0-4ea8-495a-9fd0-4b4a8118c664\",\r\n                \"barcode\": \"9db4dc05-dc1d-4e0f-bffd-a5c3116a2540\",\r\n                \"YearOfBirth\": 1937,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-12-04T08:33:14-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"1c00cb5b-2ed3-47f3-b901-fd07e1757700\",\r\n                \"barcode\": \"181424fc-f31b-40a6-82e0-0614a9a295b7\",\r\n                \"YearOfBirth\": 1935,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-08-25T12:44:40-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"925a96aa-1165-4915-9eeb-45e26209172a\",\r\n                \"barcode\": \"d8347bc0-0254-41f4-b1a8-835705e35a9a\",\r\n                \"YearOfBirth\": 1943,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-01-18T03:40:57-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"6c25e5c9-6b1c-4d77-8b81-bd63de8d8465\",\r\n                \"barcode\": \"069669a0-2df2-47c1-b7a1-f06eea1828f7\",\r\n                \"YearOfBirth\": 1953,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-06-06T04:56:22-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"c7861b13-5723-4a2e-a124-2c4a3886840b\",\r\n                \"barcode\": \"b654e905-7171-4eb3-a139-eb61ff96c8a8\",\r\n                \"YearOfBirth\": 1991,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-09-30T08:53:45-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"e03a87b4-55fb-4486-b3e2-437ed094b5dc\",\r\n                \"barcode\": \"cd4de68f-4554-427b-aad4-7f8ec67d6b4c\",\r\n                \"YearOfBirth\": 1974,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-10-30T11:02:30-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"a529608e-212b-4c0b-aab3-9e7f2bf6f3f5\",\r\n                \"barcode\": \"2e35f37d-16a0-4bc2-b48f-3e2228bb2f0a\",\r\n                \"YearOfBirth\": 1970,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-08-17T09:34:21-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"868dc1e2-6b3c-4f46-9349-d48b1d0a0ee7\",\r\n                \"barcode\": \"51cb5c5f-3500-4c6a-8a94-f688470ec54a\",\r\n                \"YearOfBirth\": 1975,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-09-26T07:06:43-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"83d02f05-92da-4f7c-9dfc-a8ebe49d24f3\",\r\n                \"barcode\": \"df8f751a-c612-4db1-a784-c3f1591fd570\",\r\n                \"YearOfBirth\": 1984,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-08-17T07:18:24-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"6cfaa5b5-7c7d-4787-b761-ae498ceb5f06\",\r\n                \"barcode\": \"e2698c93-a55b-474e-a13a-be11ddb24db6\",\r\n                \"YearOfBirth\": 1910,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-03-09T10:43:30-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"9213aeb9-ff86-42b5-8baf-134bcc44d1eb\",\r\n                \"barcode\": \"c80e0761-27a6-4b05-b379-2135176bd732\",\r\n                \"YearOfBirth\": 1936,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-09-21T11:32:27-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"08b03382-0dc3-4d48-8399-48729e97d21d\",\r\n                \"barcode\": \"d4b487d2-f648-49cd-b242-8397b7fcd635\",\r\n                \"YearOfBirth\": 1923,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-08-27T10:32:36-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"590e65e0-078d-4ca7-ba9f-28affbd1229f\",\r\n                \"barcode\": \"0c0cca44-af10-469e-87f3-0707553eabb0\",\r\n                \"YearOfBirth\": 1961,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-05-09T03:33:33-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"5734d5dd-b01b-4f2d-a5f8-d62591799132\",\r\n                \"barcode\": \"8f4484d0-cdce-4ddf-a170-a693670d0700\",\r\n                \"YearOfBirth\": 1943,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-07-31T07:32:35-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"a2b5be1a-3544-4ecf-a1db-95caffaafb4b\",\r\n                \"barcode\": \"c59cd2a4-dd99-498b-bb10-439ddb2dab57\",\r\n                \"YearOfBirth\": 1939,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-10-01T01:57:04-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"dcc417d1-c0ef-43ce-879e-1ed667b864ae\",\r\n                \"barcode\": \"977a3e87-7a8a-488d-b0dc-aa50eb8ec221\",\r\n                \"YearOfBirth\": 1958,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-10-08T11:56:39-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"ab49379f-9707-4504-a814-e8f6a26097a8\",\r\n                \"barcode\": \"0235b391-a244-4e62-9c4e-489a27139741\",\r\n                \"YearOfBirth\": 1992,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2006-12-25T10:50:44-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"376e490f-cba9-4f55-9ff0-768f5b8517f4\",\r\n                \"barcode\": \"6a323057-8ffa-422f-8d0a-461c27491eb6\",\r\n                \"YearOfBirth\": 1998,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2009-04-01T08:28:49-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"5afdcfb6-eabe-48bf-9c06-1bc1b38774d6\",\r\n                \"barcode\": \"661094c9-b5a4-48ca-ab87-3374689ad05f\",\r\n                \"YearOfBirth\": 1964,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-04-29T07:27:10-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8a6ac6e5-bdc5-491e-89e4-eff3f2282a63\",\r\n                \"barcode\": \"0b0571c2-4f56-455e-8c80-337a062c3c0f\",\r\n                \"YearOfBirth\": 1918,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2006-05-31T04:10:36-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"763d4904-3a35-47bd-bbfb-7e4eb1f61368\",\r\n                \"barcode\": \"7f8f5da8-0fba-40b3-a7b7-60f22a28d07e\",\r\n                \"YearOfBirth\": 1919,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-07-04T09:59:07-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"746dd78d-f5af-4074-b1a4-c3f32594cc1c\",\r\n                \"barcode\": \"7731cc26-9731-4ea5-9da8-2fb15b625d75\",\r\n                \"YearOfBirth\": 1931,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-12-18T11:00:38-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/submit/{{user-biobank-id}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"submit",
								"{{user-biobank-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit Records (No Errors) 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//access response body",
									"let response = pm.response.json();",
									"",
									"//Set ID as environment variable",
									"pm.environment.set(\"id2\",response.id);",
									"pm.environment.set(\"records2\",response.totalRecords);",
									"",
									"//Test that status code is either 200, 201 or 202    ",
									"pm.test(\"Status code is 202 Accepted\", () => {",
									"    pm.expect(pm.response.code).to.be.eq(202);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"samples\": [\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"43f6e8ee-90b1-42cd-816b-253e8b2e3437\",\r\n                \"barcode\": \"0f49d8d6-1f9a-4ea7-a622-d96fc6996a85\",\r\n                \"YearOfBirth\": 1947,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2002-07-04T12:53:11-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"5335e2f7-b346-4c3b-9c09-4ef0db7258b9\",\r\n                \"barcode\": \"112e40cf-6efa-48d3-99de-295715046842\",\r\n                \"YearOfBirth\": 1961,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-06-06T11:08:19-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"490ee01e-3827-4d5e-993f-7652246d7c0e\",\r\n                \"barcode\": \"7656e0fe-78b5-4eb1-b30b-5e224e4bb3e0\",\r\n                \"YearOfBirth\": 1918,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-12-11T02:37:44-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"145c46e8-a13a-4e82-8815-b745563186d8\",\r\n                \"barcode\": \"08372480-776b-4308-b773-7f680603a140\",\r\n                \"YearOfBirth\": 1949,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2008-04-27T05:21:15-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"cd1edfda-14a6-49c5-8aee-7e51289f81db\",\r\n                \"barcode\": \"9d1dd634-fedc-4c65-acbe-a15c4129714c\",\r\n                \"YearOfBirth\": 1936,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-06-23T05:47:53-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"1c93629a-9b9d-4036-a3ee-e7ba207f764e\",\r\n                \"barcode\": \"061343e9-0e48-460a-8ffa-29ae0c24224d\",\r\n                \"YearOfBirth\": 1951,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-10-06T09:23:41-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"1cdb42c5-d927-49fe-810b-2763f9807d62\",\r\n                \"barcode\": \"a388eb74-4260-4614-82c7-dec0684975f7\",\r\n                \"YearOfBirth\": 1938,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-08-24T09:16:11-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"3f7e0f58-135c-4f9b-8504-8ddd93c3bbea\",\r\n                \"barcode\": \"08c7f812-26b0-412c-a5ee-01ec06edc0de\",\r\n                \"YearOfBirth\": 1920,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-11-02T07:23:29-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"c168f108-9644-4bd9-a9b4-a6ffdeda74b4\",\r\n                \"barcode\": \"c0e03c0c-faa4-4994-b3f6-d0d235bef472\",\r\n                \"YearOfBirth\": 1978,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-10-15T02:24:12-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"42341d05-23d6-43bb-a44e-297459fd69fe\",\r\n                \"barcode\": \"8675ed2b-f237-4ce8-97c8-8b553defade1\",\r\n                \"YearOfBirth\": 1985,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-09-20T12:48:22-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"702eee6e-12e1-4462-907a-ee87c3a14c82\",\r\n                \"barcode\": \"f733e4c5-36f4-4329-8f48-2459847b3a31\",\r\n                \"YearOfBirth\": 1999,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-10-24T04:40:19-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"5e4c874a-72a0-45f5-8aad-f6f72a3e90d2\",\r\n                \"barcode\": \"8f17f39d-18ea-47f5-bbbc-e3e10020494c\",\r\n                \"YearOfBirth\": 1979,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-12-02T09:50:09-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8a178020-6b2f-46da-a8b3-48787aaa3e96\",\r\n                \"barcode\": \"ab487c06-cd79-425b-b095-f600cfda3fd3\",\r\n                \"YearOfBirth\": 1963,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-04-15T03:36:26-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"8c166903-c8e2-4949-babf-2d5f9eca8527\",\r\n                \"barcode\": \"2f3fc001-2bbb-4933-a5b1-e5da8f494458\",\r\n                \"YearOfBirth\": 1920,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-01-07T03:49:44-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"d19f53fb-4036-49ec-ad3b-1ef8237e6627\",\r\n                \"barcode\": \"7644f661-1922-4cc1-9e6a-9cbdbc2231ed\",\r\n                \"YearOfBirth\": 1935,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-04-01T06:37:25-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"3a9c473b-c379-4858-b9bb-92b3ab9b0d6e\",\r\n                \"barcode\": \"919ee65a-99fd-4d35-a778-8932a01cf66e\",\r\n                \"YearOfBirth\": 1945,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-09-28T02:49:00-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"b3e70277-ab03-4190-be64-180711b18493\",\r\n                \"barcode\": \"620ab45c-98ed-46d8-bfa1-8c45c753f703\",\r\n                \"YearOfBirth\": 1965,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-02-26T02:28:05-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"9035227e-d85f-4458-a446-a4a140e6fe90\",\r\n                \"barcode\": \"11c6e914-1e70-477a-9f8e-56924448faf2\",\r\n                \"YearOfBirth\": 1958,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-03-22T02:18:16-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"280dfdfb-9300-4c2b-8f85-1b344c80d1fa\",\r\n                \"barcode\": \"e8b1b25a-fc84-4890-8b4d-f296ff8c0723\",\r\n                \"YearOfBirth\": 1925,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-05-08T05:32:31-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"34f10b43-ac94-4d82-a9c9-ff5702926a11\",\r\n                \"barcode\": \"753ac2a7-5765-4d13-a447-ca9804bc3ac5\",\r\n                \"YearOfBirth\": 1940,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-08-10T01:01:05-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"b3d9ac9a-28da-4896-b116-3df0acfdf123\",\r\n                \"barcode\": \"1c7417a8-e9b3-4ad0-9147-a9b0adbef2f4\",\r\n                \"YearOfBirth\": 1950,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-01-12T10:21:35-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"c1b18c66-1094-455b-a93e-d0cd10d59f9f\",\r\n                \"barcode\": \"0b6a3e8b-8a4f-4f9a-a2fe-12105db9027b\",\r\n                \"YearOfBirth\": 1944,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2008-03-05T10:57:14-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"7b34f285-ef16-4f4e-a423-18adf873c3e8\",\r\n                \"barcode\": \"b7a77068-f769-48f2-940d-2242f438e1dd\",\r\n                \"YearOfBirth\": 1953,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-04-08T10:55:44-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"bcd683dd-9dbb-434d-9a00-5ca67e4e3eb9\",\r\n                \"barcode\": \"7e477cc0-a902-4525-8533-183ea106acae\",\r\n                \"YearOfBirth\": 1995,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-02-05T06:26:08-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"ac739756-5332-4eca-b2a6-d9d0f5ff541c\",\r\n                \"barcode\": \"9a2c7f62-39cf-40d5-a981-4658a40260e5\",\r\n                \"YearOfBirth\": 1998,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-11-28T02:59:44-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"5c32f63d-83e1-4eea-a55a-6bea120e19f3\",\r\n                \"barcode\": \"d9417a73-9105-4228-86f7-005a374f3655\",\r\n                \"YearOfBirth\": 1958,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-03-17T08:48:38-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"4cb71c0e-a786-4f55-a684-7d5093cba5a7\",\r\n                \"barcode\": \"a0d4b634-63a0-4a51-9fb4-09450ce3e988\",\r\n                \"YearOfBirth\": 1965,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-07-20T12:04:07-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"bce1ec11-c7aa-4ac0-93f3-0b35c03cf295\",\r\n                \"barcode\": \"d4d2f4c0-0e31-46aa-abb4-e1491809cbbc\",\r\n                \"YearOfBirth\": 1960,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2009-05-27T05:52:33-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"a8e28727-0f2b-4222-bfae-bcdbc20dbb2b\",\r\n                \"barcode\": \"63701caa-28eb-4611-a47c-b75d7fcfeafa\",\r\n                \"YearOfBirth\": 1959,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-11-06T02:30:15-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"1233419f-fc26-430a-9b4e-bbdfd0645f40\",\r\n                \"barcode\": \"3ae1c53b-430b-4cb1-8fac-c3352c20b8fa\",\r\n                \"YearOfBirth\": 1913,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-03-13T12:18:54-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"2fc0eac1-7139-4e0e-bbb2-a8d0f5a961e8\",\r\n                \"barcode\": \"f5f4438b-e098-492c-8f6c-b0e7c878d294\",\r\n                \"YearOfBirth\": 1962,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-08-07T03:27:31-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"d415e410-f9e3-490a-aab1-b5810480a874\",\r\n                \"barcode\": \"124ea507-c530-4da1-b9f3-e4e5ecc636ce\",\r\n                \"YearOfBirth\": 1938,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2002-09-16T11:40:39-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"92682e12-76fc-4111-a30b-5ca25c5264fe\",\r\n                \"barcode\": \"54783e83-6e03-40fe-8ae9-c7dabf7b8f4d\",\r\n                \"YearOfBirth\": 1910,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-10-26T06:53:34-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"9a81b1d3-c85d-4d81-91cb-5c9075b7a6b4\",\r\n                \"barcode\": \"831cd1b3-6675-45d1-bfdc-1b774bef3b81\",\r\n                \"YearOfBirth\": 1918,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-07-07T01:17:03-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"a3909b93-ce03-4e56-ae5e-91316c5cdd57\",\r\n                \"barcode\": \"9683640e-84ed-4576-be9e-53494e0c5f93\",\r\n                \"YearOfBirth\": 1998,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-05-12T06:45:07-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"c587fe9e-41a9-46cf-a923-c8d95f7908f9\",\r\n                \"barcode\": \"8fbfaed1-fa1f-4be5-a013-697c8cf954bb\",\r\n                \"YearOfBirth\": 1925,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-03-05T01:35:47-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"0ed93a41-0afd-4c3d-bd75-fcce04716955\",\r\n                \"barcode\": \"bfdc229a-f5f8-4363-9b04-2e2f6119f508\",\r\n                \"YearOfBirth\": 1998,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-02-11T03:16:21-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"a4ce22a6-b1eb-49bd-8d97-fc9a111b793a\",\r\n                \"barcode\": \"a6dc7e45-83f5-431f-ac47-ea1a260dc745\",\r\n                \"YearOfBirth\": 1952,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-02-11T03:11:13-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"6d46a97c-f111-4457-a4b1-d14b194ab292\",\r\n                \"barcode\": \"d2476d81-bbcc-4b3c-b83e-76fef0c18765\",\r\n                \"YearOfBirth\": 1992,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-07-18T08:21:49-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"24e28031-1315-402f-affd-31a0429c2362\",\r\n                \"barcode\": \"3e290301-b6ec-4262-adb4-fa6d0c2570df\",\r\n                \"YearOfBirth\": 1976,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-01-22T06:13:42-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"57e53c73-c688-4d1f-a389-ce6796f99047\",\r\n                \"barcode\": \"9f8abeb0-a059-450f-b93b-e6f4e8044a92\",\r\n                \"YearOfBirth\": 1954,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-10-14T05:53:17-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"007d7575-e5bc-47cd-8553-d8b884e4abb3\",\r\n                \"barcode\": \"5f7b1676-c829-4ec9-8f53-45eaaf6b5036\",\r\n                \"YearOfBirth\": 1958,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-08-31T01:34:17-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"5e5dbfab-a208-467e-af0b-75689e38cf53\",\r\n                \"barcode\": \"7bbdf360-3f03-4611-a778-def59a453cf3\",\r\n                \"YearOfBirth\": 1937,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2009-12-16T09:16:20-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"fc3339ac-fde0-44f0-80df-7fada8762c0b\",\r\n                \"barcode\": \"a6cc94ae-6f15-48c5-8f7d-44248ebd4825\",\r\n                \"YearOfBirth\": 1913,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-03-29T09:24:36-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"dee7d557-ac7f-41e0-b1b2-6ec88f986b03\",\r\n                \"barcode\": \"54eacbc6-bac2-41c0-89c2-f178e161dbad\",\r\n                \"YearOfBirth\": 1975,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-11-06T11:31:37-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8e26a0d8-d8b9-4a58-a7ff-6930cd551b84\",\r\n                \"barcode\": \"85722d06-7588-41a9-86c0-7b5a903d9d3a\",\r\n                \"YearOfBirth\": 1939,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-08-12T01:46:36-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"927b1882-3c79-4eb9-b275-f2ffb5e3a54b\",\r\n                \"barcode\": \"4dbc4990-8180-4336-82a2-718a46c0eb19\",\r\n                \"YearOfBirth\": 1973,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-03-04T03:00:20-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"c9c2d03f-de4d-44d5-80f4-23943365a967\",\r\n                \"barcode\": \"a4539643-f470-45ee-b978-c83160447eea\",\r\n                \"YearOfBirth\": 1920,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-09-23T01:00:48-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"88eb31fe-2d92-433d-b671-5456c0420707\",\r\n                \"barcode\": \"81d09c55-6e96-40ab-abe0-5f326b289771\",\r\n                \"YearOfBirth\": 1964,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-08-14T12:11:01-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8812a6c7-c6a4-4d35-9d9d-47a970ba829d\",\r\n                \"barcode\": \"6f58bab2-125b-4946-b968-ba555252888c\",\r\n                \"YearOfBirth\": 1940,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-12-11T04:30:44-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"5296f938-8194-463b-a9ab-96bca2ec40ee\",\r\n                \"barcode\": \"bea16289-d803-42c9-91b8-aa05d86977fe\",\r\n                \"YearOfBirth\": 1938,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-02-25T04:45:22-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"6d86dc04-b0db-4ead-aaf1-6b1c89c4967a\",\r\n                \"barcode\": \"282d24e2-4ca5-431b-bbee-95d36006a3bb\",\r\n                \"YearOfBirth\": 1919,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-03-03T07:10:32-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"07ff77c4-4bcb-4798-b0dd-05c550736e15\",\r\n                \"barcode\": \"65510f0f-1d46-4a43-a5bc-8f806621d265\",\r\n                \"YearOfBirth\": 1969,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-05-23T03:57:27-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"a0d70c07-707b-46ff-bcf4-ffd9aabcc3e5\",\r\n                \"barcode\": \"93822746-d97a-46fb-b708-cc3e381db6ae\",\r\n                \"YearOfBirth\": 1991,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-11-22T04:30:08-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"4c06122c-bafc-44f2-a5b0-5242f6c053f9\",\r\n                \"barcode\": \"dcdddc6d-f5ee-4aec-8959-33506e31fa5e\",\r\n                \"YearOfBirth\": 1911,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-04-30T09:43:59-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"2abf095f-4c43-4e9c-b2d9-6c6de1ec3430\",\r\n                \"barcode\": \"e3200717-42f3-499a-bb42-4f50eea4fe71\",\r\n                \"YearOfBirth\": 1915,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-11-17T06:40:29-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"ad827ba7-7b58-42d3-990a-405407092736\",\r\n                \"barcode\": \"bfaa18d0-ab18-4aa9-96be-d0cd567cac94\",\r\n                \"YearOfBirth\": 1941,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-10-03T03:09:44-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"5f487761-e5a8-4ce9-86b8-b654293ab014\",\r\n                \"barcode\": \"294f7919-7042-4840-945e-41a2577042fa\",\r\n                \"YearOfBirth\": 1996,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-12-12T01:52:11-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"54db49a2-a21f-45d6-b627-16fb6b908e3e\",\r\n                \"barcode\": \"386bed50-4cde-4ae7-b671-8643c1b9e4d6\",\r\n                \"YearOfBirth\": 1922,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-01-11T05:29:59-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"61078977-f331-4c9d-9594-019a123e049c\",\r\n                \"barcode\": \"773595a3-e9d0-44d4-8708-00be1387d17c\",\r\n                \"YearOfBirth\": 1982,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-12-01T02:11:00-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"7d9e8708-56e8-4108-9ce9-5ba25e02400c\",\r\n                \"barcode\": \"356869b1-121f-4802-bf28-2332ace44aa6\",\r\n                \"YearOfBirth\": 1947,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-10-04T10:32:55-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"3f5c7bc6-b04d-47b1-8841-2dbeb96d659b\",\r\n                \"barcode\": \"ea0805ed-a9cf-4a9e-88c3-bc7ccb45976e\",\r\n                \"YearOfBirth\": 1969,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-07-28T06:48:29-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"67621f72-6156-4287-b114-bd400c98b251\",\r\n                \"barcode\": \"d2f431bf-8eac-41d8-877c-2aa9d1bc83ca\",\r\n                \"YearOfBirth\": 1991,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-03-06T06:29:07-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"caf76452-9ecf-41a7-b26f-149832c043bf\",\r\n                \"barcode\": \"5e7e3495-0483-4832-9b62-c57687d39d7f\",\r\n                \"YearOfBirth\": 1999,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-09-27T07:50:52-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"eba7c796-b3c9-427b-b0b3-d218ef033038\",\r\n                \"barcode\": \"98f375ff-943d-4478-bb60-31b407b6b6d3\",\r\n                \"YearOfBirth\": 1957,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-04-12T11:34:15-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"d2e57095-e88d-4af8-999f-2f09b9cf3bae\",\r\n                \"barcode\": \"305648b8-d301-4f74-be3c-81ec63992bb8\",\r\n                \"YearOfBirth\": 1949,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-08-27T07:51:34-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"d06fcb8e-f2d8-40a3-94bd-33b27850777c\",\r\n                \"barcode\": \"fe318484-9681-4e0d-8236-5d0e8aca9963\",\r\n                \"YearOfBirth\": 1989,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-11-13T08:17:30-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"15bcd41f-5781-4174-9e70-b95e45b99d31\",\r\n                \"barcode\": \"6faa0ae6-7716-4a35-b5c0-817384ed8eb6\",\r\n                \"YearOfBirth\": 1999,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-05-31T03:37:13-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"dd99d346-7d88-413e-afdd-8488d4956127\",\r\n                \"barcode\": \"e94eef10-7f6a-4f1a-b505-49dd42c5b32f\",\r\n                \"YearOfBirth\": 1979,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-01-20T12:27:04-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"76b70298-58d9-403b-a986-4d15da62e59d\",\r\n                \"barcode\": \"91b93a27-38db-4785-84e0-f76cb03f25f6\",\r\n                \"YearOfBirth\": 1969,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-10-03T10:10:56-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"4a74a2f2-ebe4-4eea-b85a-e40a0acae415\",\r\n                \"barcode\": \"42767bab-71a5-4a5b-890a-fde7790d72e4\",\r\n                \"YearOfBirth\": 1962,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-05-26T05:45:37-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"f0545bdf-28f7-4833-aeb3-6af7863fcc06\",\r\n                \"barcode\": \"ab9358f3-2e1d-4de4-956b-46949f236639\",\r\n                \"YearOfBirth\": 1923,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-07-17T02:19:12-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"9b59176d-b036-4c0c-a041-91f757da7dd2\",\r\n                \"barcode\": \"8e76d5cb-93ca-4c89-a822-cfab5834989b\",\r\n                \"YearOfBirth\": 1964,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-06-30T06:12:23-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"7a8301f7-d43b-4349-9c56-d3bfd410f0dd\",\r\n                \"barcode\": \"bc303c8d-6aa0-4fa5-9b03-a593f9c9b15e\",\r\n                \"YearOfBirth\": 1936,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-02-07T12:27:17-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"bcc84e1a-e461-472b-bfcf-743d976ae5ae\",\r\n                \"barcode\": \"3354de48-0056-4b50-b1c9-82cc9b41cfbe\",\r\n                \"YearOfBirth\": 1983,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-12-21T02:25:06-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"979b586e-0da2-42da-9064-ff8c4ddd2671\",\r\n                \"barcode\": \"6ce6e284-97a3-4bcf-9821-d827ee9db08d\",\r\n                \"YearOfBirth\": 1940,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-10-25T07:46:04-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"a4fcc533-598b-47d1-b0ee-38bbd2a3e842\",\r\n                \"barcode\": \"1a3f7ee6-e31d-4d44-b90f-844c7b60b31b\",\r\n                \"YearOfBirth\": 1913,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-07-01T11:55:55-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"b0ad3007-66dd-4070-8c4d-cfc22a82e3d1\",\r\n                \"barcode\": \"2929f885-7870-4329-a318-2b4ff2005df8\",\r\n                \"YearOfBirth\": 1937,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2009-01-04T12:32:09-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"631736ec-6038-40b6-8f94-b976bbd71042\",\r\n                \"barcode\": \"9311852d-0c1b-4344-b370-4196a553d87e\",\r\n                \"YearOfBirth\": 1959,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-01-17T10:07:09-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"c0a39000-d713-4305-877d-3476d9df4451\",\r\n                \"barcode\": \"d82bd039-84dd-49d2-bf30-fb561d819d8d\",\r\n                \"YearOfBirth\": 1914,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-09-11T10:32:25-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"fcae1be1-bf9b-4fbe-8d07-d67f572b9fe7\",\r\n                \"barcode\": \"6a8d3b36-9841-4f23-8c0e-c3322635b234\",\r\n                \"YearOfBirth\": 1929,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-07-17T09:35:45-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"83c3ac44-f8d2-4a16-b9f8-9f0489e38704\",\r\n                \"barcode\": \"2fe8eacc-4eb7-4314-b974-d27e77ef33e6\",\r\n                \"YearOfBirth\": 1949,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-12-15T10:14:47-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"dbee983b-f73a-4e6c-b5c2-c04d02ae83df\",\r\n                \"barcode\": \"18d9975c-0e04-48d3-ad67-7a017b2b5202\",\r\n                \"YearOfBirth\": 1933,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-08-20T12:34:10-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"f7ca9097-835e-4647-99b8-0cd8bcf5a90a\",\r\n                \"barcode\": \"31873d30-27d5-496a-9554-a99d33bcfb20\",\r\n                \"YearOfBirth\": 1996,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-09-25T02:07:30-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"0448db6c-d2ad-42fb-83b1-6082452c2e5b\",\r\n                \"barcode\": \"d03a9bf7-b754-4dbf-87db-d99545ef23cb\",\r\n                \"YearOfBirth\": 1932,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-12-19T02:14:23-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"262f7170-b2f2-49aa-901b-2005bdb9d89b\",\r\n                \"barcode\": \"db724dc7-5225-41d3-8794-e4e124c057f8\",\r\n                \"YearOfBirth\": 1981,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-04-16T07:18:06-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"a31b5b87-2f8d-49de-9aa0-98fe4fbd53f6\",\r\n                \"barcode\": \"b31defca-d11f-4422-b9f4-31ee99c25bf0\",\r\n                \"YearOfBirth\": 1985,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-04-03T02:09:25-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"582d09e7-cdae-48cc-a8ad-4949d46c239b\",\r\n                \"barcode\": \"34bef478-e090-4ceb-ab85-4d0a0a01c7c5\",\r\n                \"YearOfBirth\": 1952,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-02-04T02:43:50-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"1a3ce089-b46b-4393-ba2b-3c633a0237e3\",\r\n                \"barcode\": \"0d850849-a56d-410c-b701-83031e8df631\",\r\n                \"YearOfBirth\": 1947,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-09-24T12:01:25-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"1a3e83ec-1bfe-46e4-a343-39a3927f069c\",\r\n                \"barcode\": \"0198494f-1ac1-4537-aaca-40e5de127614\",\r\n                \"YearOfBirth\": 1988,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-05-18T04:56:23-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"7abe5462-6519-419c-959e-716994a24188\",\r\n                \"barcode\": \"489628a5-0fa6-48b4-a587-e54e7f5c11f6\",\r\n                \"YearOfBirth\": 1932,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-03-13T05:50:53-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"177903bf-b881-4d9d-bb92-9e9a35aecf13\",\r\n                \"barcode\": \"7ed7a6bd-a14a-40e2-90b9-07db5392c720\",\r\n                \"YearOfBirth\": 1983,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2008-06-16T05:55:20-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"66dbe2fb-d104-461a-9b4c-270de845b619\",\r\n                \"barcode\": \"063fc204-d4d1-470b-82f8-5bd452bf7680\",\r\n                \"YearOfBirth\": 1936,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-11-24T09:43:10-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"266231a5-edf7-48e8-92a5-4ea2accfe0fd\",\r\n                \"barcode\": \"91fa3036-703c-4af0-9e32-4ed486f64b20\",\r\n                \"YearOfBirth\": 1995,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-09-16T01:10:59-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"1fe7a5c3-98ee-4040-a8b0-0f1185647bfb\",\r\n                \"barcode\": \"84f4b14d-fa80-4af5-9c05-27b022f23368\",\r\n                \"YearOfBirth\": 1968,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-03-17T12:38:13-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"eb01b9b8-3c59-41f1-8c60-5cd9009cac9c\",\r\n                \"barcode\": \"f267b65e-1228-4aa8-ba9f-0bf8a90ef6cb\",\r\n                \"YearOfBirth\": 1939,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2009-06-30T01:58:19-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"cab75e3b-5470-4ac8-9e3f-1f8f7f72dc27\",\r\n                \"barcode\": \"da37a170-893a-4c11-bf71-04040828dc66\",\r\n                \"YearOfBirth\": 1986,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2006-06-07T07:27:42-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"52852ed3-579f-457b-a84d-a170127e8f05\",\r\n                \"barcode\": \"8e546f5f-836c-4404-94f1-198533eafbb3\",\r\n                \"YearOfBirth\": 1937,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2009-01-22T12:17:15-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"618d3ed7-f6fa-4cae-9059-3a91fd5d753f\",\r\n                \"barcode\": \"86007dc8-a6d4-4e35-9ded-5309044f542c\",\r\n                \"YearOfBirth\": 1916,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2002-11-16T02:19:27-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"302be5ce-cc8a-4b80-b1de-94bae6064829\",\r\n                \"barcode\": \"08a601dd-5cf3-4529-997f-86479297b1a6\",\r\n                \"YearOfBirth\": 1967,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-03-03T04:29:34-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/submit/{{user-biobank-id}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"submit",
								"{{user-biobank-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Status (Still processing) 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//access response body",
									"let response = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Records processed = 0\", function () {",
									"    pm.expect(response.recordsProcessed).to.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/status/{{id1}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"status",
								"{{id1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Status (Still processing) 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//access response body",
									"let response = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Records processed = 0\", function () {",
									"    pm.expect(response.recordsProcessed).to.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/status/{{id2}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"status",
								"{{id2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Records with MVC error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"10028000\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF1\",\r\n        \"barcode\": \"CODE1\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"10028000\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/submit/{{user-biobank-id}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"submit",
								"{{user-biobank-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Records with object error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"10028000\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF1\",\r\n        \"barcode\": \"CODE1\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"10028000\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/submit/{{user-biobank-id}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"submit",
								"{{user-biobank-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit Records (Validation Errors) 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//access response body",
									"let response = pm.response.json();",
									" ",
									"//Set ID as environment variable",
									"pm.environment.set(\"id4\",response.id);",
									"",
									"pm.test(\"Status is 202 Accepeted\", function () {",
									"    pm.expect(pm.response.code).to.be.eq(202);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DN\",\r\n        \"individualReferenceId\": \"REF0\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"10028000\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF1\",\r\n        \"barcode\": \"CODE1\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"10028000\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/submit/{{user-biobank-id}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"submit",
								"{{user-biobank-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit Records (No Errors) 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//access response body",
									"let response = pm.response.json();",
									"",
									"//Set ID as environment variable",
									"pm.environment.set(\"id3\",response.id);",
									"pm.environment.set(\"records3\",response.totalRecords);",
									"",
									"//Test that status code is either 200, 201 or 202    ",
									"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token_bu1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"samples\": [\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"48770524-cb0f-44f1-b1d9-6dfa4d67f193\",\r\n                \"barcode\": \"f03629d3-5401-429c-92a7-8b1210fb7795\",\r\n                \"YearOfBirth\": 1971,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-08-29T08:03:37-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"79a123ec-0fdf-47e9-aac8-4deb66e12274\",\r\n                \"barcode\": \"3e5fb50d-cce2-488d-8871-44ce5cd26f5c\",\r\n                \"YearOfBirth\": 1991,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-09-15T07:51:45-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"afeb487b-4fdd-4a68-8971-069fc01df143\",\r\n                \"barcode\": \"8d3d1b03-4216-45ff-b47a-f2fa1503f3ec\",\r\n                \"YearOfBirth\": 1932,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-06-14T06:48:22-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"7a26f901-8c4f-4663-a5ef-2e16db76f824\",\r\n                \"barcode\": \"f09dafcc-59fd-4f88-ac00-3f658b755027\",\r\n                \"YearOfBirth\": 1997,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-01-14T02:06:01-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"54455e21-7143-4632-9864-eee941871458\",\r\n                \"barcode\": \"92ad3402-a41d-4363-a8fa-ea17be066e4c\",\r\n                \"YearOfBirth\": 1917,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-06-05T03:38:18-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"58338292-45fc-4310-8633-731c8e7f1dff\",\r\n                \"barcode\": \"ad694820-536c-4b1b-b17f-52838d1745fd\",\r\n                \"YearOfBirth\": 1927,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-11-26T09:59:42-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"ed0e7c77-03b3-4ed5-8578-890acb2d2672\",\r\n                \"barcode\": \"cb06c6f5-2770-4db6-a7cf-32040de821d7\",\r\n                \"YearOfBirth\": 1992,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-12-23T12:12:15-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"ae686d56-730f-4977-8094-e863cfe30886\",\r\n                \"barcode\": \"944eb095-03bd-42b8-97a6-16d1a113085a\",\r\n                \"YearOfBirth\": 1921,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-06-06T12:05:50-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"2a16803a-e5f7-4853-99ea-d17f7c9e29d4\",\r\n                \"barcode\": \"2147eee4-f626-4190-89d4-03cb6e8f4bd7\",\r\n                \"YearOfBirth\": 1937,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-10-02T09:37:19-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"4cab9f0c-3cfa-40a2-b8d1-59b4aacf1b77\",\r\n                \"barcode\": \"50b1034a-5398-4104-8e27-3e0992c1214f\",\r\n                \"YearOfBirth\": 1979,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-04-27T09:06:00-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"44a5771b-0d72-483a-91dd-fc7f5134b0fb\",\r\n                \"barcode\": \"d8733818-967d-4d6f-aa07-c0c15d6e373d\",\r\n                \"YearOfBirth\": 1932,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-12-04T12:00:27-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"d13c2e93-fe1e-48a4-a944-26da44928b6c\",\r\n                \"barcode\": \"db2d4216-72f8-4517-b2e1-b34d96edb7e4\",\r\n                \"YearOfBirth\": 1914,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-11-24T11:06:37-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"d2ac06de-8421-42af-8ba8-92c08d28acd4\",\r\n                \"barcode\": \"48df20ab-cc5d-4116-b9c8-f4866c1d299b\",\r\n                \"YearOfBirth\": 1980,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-03-14T11:36:34-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"6478d5a9-cc03-41d1-95cd-6922499b7fe3\",\r\n                \"barcode\": \"62aace21-2a52-4c88-bf7b-955fc95c3024\",\r\n                \"YearOfBirth\": 1917,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-11-15T03:55:53-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"7afab367-5baa-43eb-971c-0b4beecbe678\",\r\n                \"barcode\": \"c15a83e6-3427-4778-a010-f09c8622aced\",\r\n                \"YearOfBirth\": 1985,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-08-06T02:17:12-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"5c825336-cc2b-4082-bc97-b72b93b39e1c\",\r\n                \"barcode\": \"4c75366e-ca69-4d13-8957-b8f3337615dc\",\r\n                \"YearOfBirth\": 1991,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-04-21T03:17:42-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"a0a2caa5-c30a-4783-8ab8-54f0dfd80d4e\",\r\n                \"barcode\": \"b49b4ca4-da2e-4550-b8a7-700fcd996e71\",\r\n                \"YearOfBirth\": 1933,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-06-19T12:09:48-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"ffb59a68-339f-4477-a51d-292aa8d28e38\",\r\n                \"barcode\": \"cc670fa8-ce01-427d-a806-f83aad58d011\",\r\n                \"YearOfBirth\": 1974,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-07-18T02:46:47-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"4191585d-4807-4d92-b482-373fc25858b1\",\r\n                \"barcode\": \"0189b4a0-ba42-4c4e-b2b3-9b61e2ccfd6e\",\r\n                \"YearOfBirth\": 1936,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-03-26T08:44:04-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"1890b928-9815-427e-8a86-c012a595fea3\",\r\n                \"barcode\": \"346d0fcf-ccde-41e6-a9b5-ea89f2962ac4\",\r\n                \"YearOfBirth\": 1941,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-10-05T11:47:59-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"dc441884-4433-4c34-9303-de4f8e9c02d4\",\r\n                \"barcode\": \"7e8293de-bfa1-4260-824d-582d0b73bb8f\",\r\n                \"YearOfBirth\": 1976,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-07-11T01:52:00-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"b9f4a1c1-005f-4045-8c42-b5b25caeff3a\",\r\n                \"barcode\": \"f64b82c5-4ea0-42e6-9d3c-3fcc8f80a941\",\r\n                \"YearOfBirth\": 1998,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-12-01T04:15:39-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"05d1c4ba-3a3a-4bd7-863a-3334dadc8c2f\",\r\n                \"barcode\": \"97bbe40e-842e-448b-9ad4-b1cafe11187e\",\r\n                \"YearOfBirth\": 1999,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2002-08-16T09:20:26-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"b8bbc023-9d42-44f7-ba5d-b7cd9649a831\",\r\n                \"barcode\": \"b0c02fbc-5785-446a-ab82-d40c15b4f80e\",\r\n                \"YearOfBirth\": 1931,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-02-04T07:06:39-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"26cf32eb-0d15-4051-b317-70769218498f\",\r\n                \"barcode\": \"f32cd9bf-376d-4ca1-8168-93522031a1cc\",\r\n                \"YearOfBirth\": 1963,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2002-12-18T04:58:10-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"b6b51d4b-b369-4374-8837-ca8f5f2549e5\",\r\n                \"barcode\": \"120330cd-e84d-4828-ab8c-39ffcc3eb4b1\",\r\n                \"YearOfBirth\": 1938,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-02-27T03:57:24-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"c78b66f1-dc8a-4b82-8adf-cc18bd6cbce1\",\r\n                \"barcode\": \"bea50877-d2d0-4837-9648-4b22ea534943\",\r\n                \"YearOfBirth\": 1949,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-03-12T02:28:13-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"b165757c-21f4-48b2-9f5c-f884b55ee0cd\",\r\n                \"barcode\": \"bc70b4cf-a7db-4cae-82c5-92e2d9e1610d\",\r\n                \"YearOfBirth\": 1984,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-06-04T09:05:33-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"abc2f6e3-b58d-4407-b882-1529c20d2d46\",\r\n                \"barcode\": \"32025d01-3ad2-44b8-8567-cb2257ea7de9\",\r\n                \"YearOfBirth\": 1919,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-08-05T07:58:22-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"15b1ff28-631c-45e9-b9b5-b56e6b1f4402\",\r\n                \"barcode\": \"dabd4699-4874-49a0-a62e-71466a24cfe6\",\r\n                \"YearOfBirth\": 1946,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-04-25T12:08:29-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"cdf6d7c2-2514-4cd2-8657-7de7c8a6e531\",\r\n                \"barcode\": \"ed116f55-e84c-491f-b6d6-10dd701194fd\",\r\n                \"YearOfBirth\": 1977,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-11-20T02:18:04-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"b6dfa283-a59e-4733-b727-3b76c3b41c28\",\r\n                \"barcode\": \"bd7ade38-d328-4cda-b33a-a74ea75e133f\",\r\n                \"YearOfBirth\": 1976,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2006-01-22T02:01:53-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"57a36b29-b545-4ba1-b7ea-8c8581762fdd\",\r\n                \"barcode\": \"d219ac90-abfb-4a64-8b5f-700efc866001\",\r\n                \"YearOfBirth\": 1940,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-06-25T02:12:34-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"0a714fdb-b07e-4865-ab49-a7289bde028e\",\r\n                \"barcode\": \"2950fcab-264a-4b4c-875e-ac5d8122dd5f\",\r\n                \"YearOfBirth\": 1960,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2009-02-16T02:21:18-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"24bcffb6-3a1a-4754-bbcf-b5a4a8b54b71\",\r\n                \"barcode\": \"770185a9-ca43-4ab1-88fd-d59e4b8aea0c\",\r\n                \"YearOfBirth\": 1995,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-09-09T02:33:53-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"e98ec42f-4a17-4049-bbb5-f83ca87c9039\",\r\n                \"barcode\": \"6baecebb-cc1f-4809-914e-032f57c92936\",\r\n                \"YearOfBirth\": 1959,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-11-12T12:00:03-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"12fa8b0f-c039-4ea6-a052-e818f7187646\",\r\n                \"barcode\": \"c5005c40-6b78-41bc-a129-c0089ed5f29f\",\r\n                \"YearOfBirth\": 1963,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-10-04T03:59:00-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"d3e40fc7-8da9-4d0f-b788-0f5e5ef76f9a\",\r\n                \"barcode\": \"cd20aa22-c87a-414a-ae49-3cd7854185f0\",\r\n                \"YearOfBirth\": 1937,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-02-05T09:01:28-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"c282de03-ba84-47f4-97e0-5b052da3eb32\",\r\n                \"barcode\": \"087d05e0-1d64-4238-a01e-6c0cf64f347d\",\r\n                \"YearOfBirth\": 1974,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-12-27T03:47:55-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"f48f8e21-0dd3-46f3-b62e-61bc727c8303\",\r\n                \"barcode\": \"9e440159-a99f-4292-96f0-663f7d6da210\",\r\n                \"YearOfBirth\": 1957,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-10-14T09:38:42-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"e5bd3304-ecb1-4048-a885-8e7e34c66aac\",\r\n                \"barcode\": \"da497411-bf8f-42ab-adb8-5597e30a93a7\",\r\n                \"YearOfBirth\": 1970,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-04-27T07:16:58-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"d33300d0-6463-4218-a618-b8fe1b18d5e6\",\r\n                \"barcode\": \"492cb4b1-f399-4393-8b82-4799bd62d4fa\",\r\n                \"YearOfBirth\": 1940,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-08-17T04:33:15-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"51aa6c0b-10d2-49ab-a43c-5973abfed889\",\r\n                \"barcode\": \"37499a9b-3dae-465d-9d6c-7da0536d216e\",\r\n                \"YearOfBirth\": 1994,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-04-09T03:15:57-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"6f5ea580-2f18-4634-8669-73a80f7cce10\",\r\n                \"barcode\": \"297289d9-772c-4f1f-8e71-78843a857ca1\",\r\n                \"YearOfBirth\": 1923,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-03-20T06:11:18-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"0b002d70-55c7-4697-9098-232b22839ccd\",\r\n                \"barcode\": \"3abb7b6c-a99d-436f-9193-71b895e7a9bd\",\r\n                \"YearOfBirth\": 1938,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2002-11-30T02:49:54-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"f6ae3e51-2bee-41d6-bae9-5d9f5bef3fdf\",\r\n                \"barcode\": \"1c945b42-23b1-491b-8497-70ab7ce8f38f\",\r\n                \"YearOfBirth\": 1960,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-11-04T11:36:49-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"eda41db8-b990-4ae9-b8a1-ba85eadc777d\",\r\n                \"barcode\": \"e385d49a-1d98-408e-b206-963e5ab13c85\",\r\n                \"YearOfBirth\": 1922,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-10-16T10:47:24-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"9bb4ff7b-b1d5-4b2a-b8ef-2feb4b5b4f5c\",\r\n                \"barcode\": \"28399891-7ae6-4138-9a43-64ea2b6da2b1\",\r\n                \"YearOfBirth\": 1952,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-04-09T05:34:23-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"9cfee8b7-24f9-4a39-ac5d-472496750ff5\",\r\n                \"barcode\": \"49071a3b-af87-4b1d-aee2-7bdb092e1d86\",\r\n                \"YearOfBirth\": 1939,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2004-11-15T04:18:38-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"6663603a-90b8-474e-b88c-103e10e083a2\",\r\n                \"barcode\": \"0773c753-a972-426a-a1fa-746435cc0b5f\",\r\n                \"YearOfBirth\": 1942,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-03-26T03:32:20-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"9fba7c29-6543-4236-b162-5d9679b297ed\",\r\n                \"barcode\": \"553c188a-8460-4215-b8b1-8421d83d892f\",\r\n                \"YearOfBirth\": 1962,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-03-04T07:59:39-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"fc5dc10f-04aa-4fb3-bd17-d6b5d27dad53\",\r\n                \"barcode\": \"e5e0dc9c-4687-44f8-a226-e4553f800341\",\r\n                \"YearOfBirth\": 1989,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2006-03-09T03:49:05-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"ed6780b9-99a1-4f19-9d61-9d6fc7a0fe5e\",\r\n                \"barcode\": \"a5fa1a69-6a89-4392-ab53-116558b2ebb6\",\r\n                \"YearOfBirth\": 1990,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-02-11T08:09:21-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"3ff280f6-8175-410e-8e11-8a043b12d6a7\",\r\n                \"barcode\": \"e9d659f7-6032-49fd-a68e-98247e8ca8e9\",\r\n                \"YearOfBirth\": 1983,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-04-09T12:42:29-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"e8661511-4265-41df-9d39-0b45007f3ce1\",\r\n                \"barcode\": \"32fc485d-706c-4516-8205-f27f366570dd\",\r\n                \"YearOfBirth\": 1936,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-04-09T10:09:18-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"29893ebc-8ced-41a7-969f-affa97cf6a35\",\r\n                \"barcode\": \"52df6b92-ba04-4a30-99b7-0806b6a1264f\",\r\n                \"YearOfBirth\": 1933,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2008-11-30T12:36:26-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"2fd0aced-02a7-46a5-aff2-e244024e5f31\",\r\n                \"barcode\": \"b9b0bbde-b388-4db4-addd-bd660efa8d0d\",\r\n                \"YearOfBirth\": 1951,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-08-09T08:32:53-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"62536c57-e138-4a09-9081-1092a53ecd5b\",\r\n                \"barcode\": \"fe3f5768-9eb2-421d-a16e-410f8d6abf30\",\r\n                \"YearOfBirth\": 1916,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-06-22T01:37:33-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8c9c31ec-a514-471d-a01b-7cb8ca517de4\",\r\n                \"barcode\": \"d057f8b3-b1cd-40db-a044-52e5c2a2c2ba\",\r\n                \"YearOfBirth\": 1932,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-09-27T09:05:11-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"241eab3c-e17c-48be-87b8-f7ffd62e5bac\",\r\n                \"barcode\": \"2cba1a20-b004-4180-bf97-11c2dd6d8d9c\",\r\n                \"YearOfBirth\": 1995,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-11-01T06:20:34-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8dd46a56-9c83-4f1c-bded-eaf4666015d7\",\r\n                \"barcode\": \"fb989716-acdd-4a9e-aaf6-8bd3925b010b\",\r\n                \"YearOfBirth\": 1940,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-12-06T07:34:16-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"e1243aa9-f180-464f-a162-28cb73d16de5\",\r\n                \"barcode\": \"c3908d0c-9b43-4729-af44-3a2c9f00626e\",\r\n                \"YearOfBirth\": 1919,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-10-22T06:23:38-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"e66a64ed-3777-4804-a8fb-61f7327dbcfc\",\r\n                \"barcode\": \"520353ef-62f3-480e-bad6-6a5956e4c831\",\r\n                \"YearOfBirth\": 1934,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-02-21T08:57:49-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"c5d1b0a4-eb7b-4faa-8e9c-f118b26dcc21\",\r\n                \"barcode\": \"2db67a17-2be7-4a8a-818e-63c7f940d3d0\",\r\n                \"YearOfBirth\": 1970,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-02-08T11:46:42-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"6a62ccf5-dcb6-4d3c-922b-79205d3fc624\",\r\n                \"barcode\": \"474a580a-e5e2-4299-b791-f6566f222dd2\",\r\n                \"YearOfBirth\": 1983,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-11-28T03:35:51-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"fb85a0bf-582e-4530-98e4-659315625dcf\",\r\n                \"barcode\": \"1cd3d768-7783-48e4-afe9-0fd7a24aef22\",\r\n                \"YearOfBirth\": 1992,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-08-04T10:22:46-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"bae2edaa-e2ae-496a-9e47-9d6fca69a723\",\r\n                \"barcode\": \"ef757764-3109-4478-abe7-4eba94c34107\",\r\n                \"YearOfBirth\": 1938,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-06-28T09:48:56-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"72ccaf58-1537-4b11-b814-fd897fb60e70\",\r\n                \"barcode\": \"2df84977-dfa2-487c-a7e8-8de814b2129d\",\r\n                \"YearOfBirth\": 1985,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-11-26T02:39:37-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"670f3c28-451a-47f0-bf19-d5414c87ed52\",\r\n                \"barcode\": \"35f448da-c65f-4575-afaa-01a6a2db41b0\",\r\n                \"YearOfBirth\": 1933,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2017-11-14T04:44:00-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"320fff12-ae44-4d5f-80b8-75eac6fc3d07\",\r\n                \"barcode\": \"849f29a7-5444-4079-8220-720170517aea\",\r\n                \"YearOfBirth\": 1945,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-12-10T03:30:58-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"3b1deba5-4bbb-45b4-80e3-df2d303e9a18\",\r\n                \"barcode\": \"7632b2c1-2598-4e54-ab63-54b69cdba79e\",\r\n                \"YearOfBirth\": 1941,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2012-11-13T02:27:37-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"2a095b9b-c452-4ce1-9c77-dcfc8583bd69\",\r\n                \"barcode\": \"4f28a577-9b56-4f4f-9eb4-27d35025cffc\",\r\n                \"YearOfBirth\": 1940,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2014-01-21T09:50:23-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"ec36097e-c451-44d6-88db-cf91c036d94a\",\r\n                \"barcode\": \"67328977-2f6d-44c7-926e-e8cfc8b75649\",\r\n                \"YearOfBirth\": 1930,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2008-03-09T01:47:11-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"33d8549e-7a3d-43f8-8a4f-af7862eee706\",\r\n                \"barcode\": \"b70b7d44-9f7a-475a-b400-bead8e9b97d8\",\r\n                \"YearOfBirth\": 1933,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-06-04T03:02:12-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"cc48d5b4-60c0-497b-8ba7-983d8b8c2516\",\r\n                \"barcode\": \"bb7b84fd-2d86-4e7a-b6da-0ee3eebceb5f\",\r\n                \"YearOfBirth\": 1988,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2009-10-23T06:13:40-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"d3a35869-5575-438f-b03b-a35cc3f85267\",\r\n                \"barcode\": \"2ea8bba8-dc7e-4be5-9ccb-95bba70fd8cb\",\r\n                \"YearOfBirth\": 1982,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-09-25T01:58:22-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"8d7c086c-3e61-44f0-b10a-8143c8b45b26\",\r\n                \"barcode\": \"dc305fa2-c3f5-4649-9a29-754174a130e2\",\r\n                \"YearOfBirth\": 1993,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2001-04-04T11:41:24-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"98b4537f-7bac-42b8-a0d4-2fc29b7ba631\",\r\n                \"barcode\": \"80b17318-f39b-4800-ac16-e5144f4d70e4\",\r\n                \"YearOfBirth\": 1976,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-01-09T03:24:11-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"8be9d282-3a74-4696-ac35-7bffb6f3989d\",\r\n                \"barcode\": \"318a2acf-5b6d-4164-b1a1-6bb779b2d030\",\r\n                \"YearOfBirth\": 1935,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-10-09T12:16:32-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"0f717255-c50a-4c95-8441-dec42e485ff9\",\r\n                \"barcode\": \"7aec7cc5-c3bc-4feb-b5fc-b4482874af25\",\r\n                \"YearOfBirth\": 1932,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2003-01-02T09:43:45-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"e1e3b553-99fa-40af-b0da-7274a404814b\",\r\n                \"barcode\": \"cf116748-5f69-4a12-b3f6-5b63c2d79940\",\r\n                \"YearOfBirth\": 1935,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2006-06-03T10:15:41-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"f9cdaa83-a7ef-4f60-aa78-05a1a9557c9c\",\r\n                \"barcode\": \"d3b0bdd0-79f9-4394-a9f0-1fa0ecaf3402\",\r\n                \"YearOfBirth\": 1969,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-10-22T11:03:39-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"7fa2d6d4-ae70-4403-b8ca-5de2f2a74e3d\",\r\n                \"barcode\": \"a6cb7823-b89e-4483-bd43-29b59a80579f\",\r\n                \"YearOfBirth\": 1971,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2011-05-07T12:36:10-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"224905c1-68f6-4976-af5d-b1d1960cccbf\",\r\n                \"barcode\": \"9b55e7cd-1619-4ba9-ba34-a33098573ad8\",\r\n                \"YearOfBirth\": 1951,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-01-09T08:54:31-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-60°C to -85°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"50867ced-407f-48aa-a69f-c3b80ace0de2\",\r\n                \"barcode\": \"2e507584-8b55-48cf-be50-e36bc400b7b2\",\r\n                \"YearOfBirth\": 1955,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-06-15T08:49:47-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"c0b083b5-a744-4880-a349-164e2f15bd23\",\r\n                \"barcode\": \"110604cd-2257-44a8-9b35-c8ad21ad3eac\",\r\n                \"YearOfBirth\": 1916,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2013-11-15T06:20:34-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"760336cf-fddb-4849-9149-5e2cc0450518\",\r\n                \"barcode\": \"e68ec43a-aecb-4f11-83a0-f9e3b5f8b2f1\",\r\n                \"YearOfBirth\": 1913,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2018-10-18T06:10:00-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"a52db8c1-a613-4245-8187-e5496e79888a\",\r\n                \"barcode\": \"5fd79f30-d54b-4ed9-b851-44c8cf66e62e\",\r\n                \"YearOfBirth\": 1982,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-11-22T11:27:42-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"3db5e3ac-9a52-4bef-8961-d95bdbd965a1\",\r\n                \"barcode\": \"3db97f4f-41b1-4938-8161-52d63be6ab17\",\r\n                \"YearOfBirth\": 1962,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2000-04-27T06:05:36-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"ac325c63-d0cc-4860-b54a-54f00a15c2e0\",\r\n                \"barcode\": \"513bdfab-5d59-4423-afd2-5b2a0b640b12\",\r\n                \"YearOfBirth\": 1942,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-10-12T11:10:20-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"b8187bf6-a39b-4686-8eb3-7a6a112041ed\",\r\n                \"barcode\": \"63c42afe-9d5a-458f-9490-2ded3b5633c8\",\r\n                \"YearOfBirth\": 1955,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2015-08-12T11:24:30-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"2°C to 10°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"19a61ae9-6efb-4185-b1b7-44ad2afb92b9\",\r\n                \"barcode\": \"faaf5fb1-4557-40c0-bf4d-e3700cf3240e\",\r\n                \"YearOfBirth\": 1927,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2002-07-07T11:36:51-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"2e20303c-48c1-4c35-a6d6-fe8a390e3631\",\r\n                \"barcode\": \"9acdea6d-0d99-4732-932f-17d0f8348db7\",\r\n                \"YearOfBirth\": 1988,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-12-11T12:45:00-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"46bf0d6b-d057-44cd-b46b-3d469191df83\",\r\n                \"barcode\": \"204037b8-507f-4b9d-af78-73aaccb1335d\",\r\n                \"YearOfBirth\": 1956,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-09-11T11:24:15-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"d1a23c44-231e-486a-be1f-cedce912cb32\",\r\n                \"barcode\": \"d3ea2236-ee5f-472a-9818-54813a35d2c2\",\r\n                \"YearOfBirth\": 1974,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2007-03-27T07:32:17-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"797330dc-e400-43ea-b526-f4f35c66ba06\",\r\n                \"barcode\": \"2cfe616b-0988-4c9c-a3aa-80b75a565103\",\r\n                \"YearOfBirth\": 1958,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-11-06T05:08:15-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"b4df1f4d-9b5e-4830-8e02-77f16b58eab5\",\r\n                \"barcode\": \"73d974c2-33de-4834-8cf1-a42a2f0b977c\",\r\n                \"YearOfBirth\": 1982,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2005-03-10T04:24:31-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Liquid nitrogen liquid phase\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"DNA\",\r\n                \"individualReferenceId\": \"0cfbae7f-6ce8-4ae7-9a17-6a2c0b0fef8a\",\r\n                \"barcode\": \"458299e9-e356-4adb-85ec-e0079900f677\",\r\n                \"YearOfBirth\": 1924,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2016-05-29T08:52:50-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"RT\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"769f0bfd-dd7a-4d31-b72a-eb0d3418b9da\",\r\n                \"barcode\": \"fc7df9bc-ff93-4147-897e-d4541c7e90bd\",\r\n                \"YearOfBirth\": 1911,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2008-06-19T06:53:11-01:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"-18°C to -35°C\"\r\n            },\r\n            \"op\": \"submit\"\r\n        },\r\n        {\r\n            \"sample\": {\r\n                \"collectionName\": \"\",\r\n                \"materialType\": \"RNA\",\r\n                \"individualReferenceId\": \"9247e46f-90c0-4c19-a530-516bb461fef9\",\r\n                \"barcode\": \"377d112a-7f1c-4014-adfa-7ab9fbaed8f0\",\r\n                \"YearOfBirth\": 1988,\r\n                \"ageAtDonation\": \"\",\r\n                \"extractionSite\": \"\",\r\n                \"extractionProcedure\": \"\",\r\n                \"sampleContent\": \"\",\r\n                \"sampleContentMethod\": \"\",\r\n                \"sex\": \"\",\r\n                \"dateCreated\": \"2010-03-17T03:45:25-00:00\",\r\n                \"extractionSiteOntology\": \"SNOMED-CT\",\r\n                \"extractionSiteOntologyVersion\": \"25\",\r\n                \"storageTemperature\": \"Other\"\r\n            },\r\n            \"op\": \"submit\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/submit/{{user-biobank-id}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"submit",
								"{{user-biobank-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Submission Status 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"if (response.recordsProcessed != response.totalRecords)",
									"{",
									"    postman.setNextRequest('Check Submission Status 1');",
									"}",
									"else",
									"{",
									"    pm.test(\"All records processed\", () => {",
									"        pm.expect(response.recordsProcessed).to.be.eq(response.totalRecords);",
									"    });",
									"",
									"    pm.test(\"No validation errors\", () => {",
									"        pm.expect(response.recordsFailed).to.be.eq(0);",
									"    });",
									"}",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {}, 0 * 1000); // Wait 30 Seconds Between Calls"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/status/{{id1}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"status",
								"{{id1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Submission Status 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"if (response.recordsProcessed != response.totalRecords)",
									"{",
									"    postman.setNextRequest('Check Submission Status 2');",
									"}",
									"else",
									"{",
									"    pm.test(\"Status code is 200\", () => {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"All records processed\", () => {",
									"        pm.expect(response.recordsProcessed).to.be.eq(response.totalRecords);",
									"    });",
									"",
									"    pm.test(\"No validation errors\", () => {",
									"        pm.expect(response.recordsFailed).to.be.eq(0);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function () {}, 30000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/status/{{id2}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"status",
								"{{id2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Submission Status 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"if (response.recordsProcessed != response.totalRecords)",
									"{",
									"    postman.setNextRequest('Check Submission Status 3');",
									"}",
									"else",
									"{",
									"    pm.test(\"Status code is 200\", () => {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"All records processed\", () => {",
									"        pm.expect(response.recordsProcessed).to.be.eq(response.totalRecords);",
									"    });",
									"",
									"    pm.test(\"No validation errors\", () => {",
									"        pm.expect(response.recordsFailed).to.be.eq(0);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {}, 30000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/status/{{id2}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"status",
								"{{id2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Submission Status 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"if (response.recordsProcessed != response.totalRecords)",
									"{",
									"    postman.setNextRequest('Check Submission Status 4');",
									"}",
									"else",
									"{",
									"    pm.test(\"Status code is 200\", () => {",
									"        pm.response.to.have.status(200);",
									"    });",
									"",
									"    pm.test(\"All records processed\", () => {",
									"        pm.expect(response.recordsProcessed).to.be.eq(response.totalRecords);",
									"    });",
									"",
									"    pm.test(\"No validation errors\", () => {",
									"        pm.expect(response.recordsFailed).to.be.not.eq(0);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/status/{{id4}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"status",
								"{{id4}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Post-Test] Reject Staged Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									"",
									"pm.test(\"Response body is null\", function () ",
									"{",
									"    pm.expect(pm.response.text()).to.equal(\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token_bu1}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/{{user-biobank-id}}/reject",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"{{user-biobank-id}}",
								"reject"
							]
						}
					},
					"response": []
				}
			],
			"description": "These tests are designed to test that once errors are detected/reported on, the API can continue processing the remaining data in that submission and any other submissions that are queued. ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Submission errors do not create submissions",
			"item": [
				{
					"name": "Post data and capture submission ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"let id = response.id;",
									"",
									"//Test that status code is either 200, 201 or 202    ",
									"pm.test(\"Record ID: \"+ response.id + \" - Status code is \" + pm.response.code, function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202,200]);",
									"});",
									"",
									"pm.environment.set(\"id1\",id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token_bu1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF14\",\r\n        \"barcode\": \"CODE14\",\r\n        \"YearOfBirth\": 1938,\r\n        \"dateCreated\": \"2010-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"ICD\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/submit/{{user-biobank-id}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"submit",
								"{{user-biobank-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Records with object error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token_bu1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"individualReferenceId\": \"Inval_missing_mat_type\",\r\n        \"barcode\": \"CODE0\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"10028000\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF1\",\r\n        \"barcode\": \"CODE1\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"10028000\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/submit/{{user-biobank-id}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"submit",
								"{{user-biobank-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Records with MVC error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token_bu1}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"samples\": [\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"\",\r\n        \"barcode\": \"Inval_ind_ref_empty\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"10028000\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    },\r\n    {\r\n      \"sample\": {\r\n        \"materialType\": \"DNA\",\r\n        \"individualReferenceId\": \"REF1\",\r\n        \"barcode\": \"CODE1\",\r\n        \"YearOfBirth\": 1938,\r\n        \"ageAtDonation\":\"\",\r\n        \"extractionSite\":\"10028000\",\r\n        \"extractionProcedure\":\"\",\r\n        \"sampleContent\":\"\",\r\n        \"sampleContentMethod\":\"\",\r\n        \"sex\":\"\",\r\n        \"dateCreated\": \"2016-02-16T09:58:30-00:00\",\r\n        \"extractionSiteOntology\": \"SNOMED-CT\",\r\n        \"extractionSiteOntologyVersion\": \"25\",\r\n        \"storageTemperature\": \"RT\"\r\n      },\r\n      \"op\": \"submit\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/submit/{{user-biobank-id}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"submit",
								"{{user-biobank-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check ID's on the submission queue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//access response body",
									"let response = pm.response.json();",
									"",
									"// // keep re-requesting until records have been processed",
									"// if(Number(response.submissions[0].recordsProcessed) < 1){",
									"//     postman.setNextRequest(\"Check ID's on the submission queue\");",
									"// }",
									"",
									"// else",
									"// {",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Submission ID has not incremented\", function () {",
									"    pm.expect(response.submissions[0].id).to.equal(environment.id1);",
									"});",
									"// }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function () {}, 10000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token_bu1}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/status/biobank/{{user-biobank-id}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"status",
								"biobank",
								"{{user-biobank-id}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "These tests are designed to check the conditions that trigger the error messages and that the error message returned matches our expected outcomes for a given data object",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{user-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"function IsSuccessCode(statusCode) {",
					"    return statusCode == 200 || statusCode == 201;",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}