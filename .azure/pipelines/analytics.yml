# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core 

trigger:
  branches:
    include:
    - 'master'
  paths:
    include:
    - src/Analytics/*

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '2846f2ab-b601-4483-9f04-3c3207e71764'

  #other variables
  vmImageName: 'windows-latest'
  workingDirectory: 'src/Analytics'
  
  #Azure Resources
  resourceGroupName: 'biobankinguk-directory-test'
  functionAppName: 'biobankinguk-analytics-test'
  keyVaultName: 'directoryTestKeyvault'
  dbName: 'analytics'
  dbServerName: 'biobankinguk-directory-test.database.windows.net'
  directoryUrl: https://biobankinguk-directory-test.azurewebsites.net/
  
stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: $(workingDirectory)/AzureFunctions/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop
  - job: Migrate
    displayName: Migrate EF Database
    pool:
      vmImage: $(vmImageName)
    steps:
      - script: |
          dotnet tool install --global dotnet-ef --version 3.1.6
        displayName: Configure Entity Framework
        workingDirectory: $(workingDirectory)

      - task: AzureKeyVault@1
        displayName:  'Fetching database credentials'
        inputs:
            azureSubscription: '$(azureSubscription)'
            keyVaultName: '$(keyVaultName)'
            secretsFilter: 'sqldb-username, sqldb-password'
            runAsPreJob: false

      - script: >-
          dotnet ef migrations script
          -p ./Analytics/Data.csproj
          -s ./Analytics/Data.csproj
          -i -o $(System.DefaultWorkingDirectory)/$(Build.BuildId)_migration.sql
        displayName: Create EF Migration Artifact
        workingDirectory: $(workingDirectory)
        env:
          analyticsdb_connection: "Server=tcp:$(dbServerName),1433;Initial Catalog=$(dbName);Persist Security Info=False;User ID=$(sqldb-username);Password=$(sqldb-password);MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
        
      - publish: $(System.DefaultWorkingDirectory)/$(Build.BuildId)_migration.sql
        artifact: db_migration
        displayName: Publish Migration Script

- stage: DeployTest
  displayName: Deploy To Test
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'biobankinguk-directory-test'
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
          
          - task: AzureKeyVault@1
            displayName:  'Fetching database credentials'
            inputs:
              azureSubscription: '$(azureSubscription)'
              keyVaultName: '$(keyVaultName)'
              secretsFilter: 'sqldb-username,sqldb-password,analytics-viewid,analytics-apikey'
              runAsPreJob: false

          - task: SqlAzureDacpacDeployment@1
            displayName: 'Database Migrations'
            inputs:
              azureSubscription: '$(azureSubscription)'
              AuthenticationType: 'connectionString'
              deployType: 'SqlTask'
              SqlFile: '$(Pipeline.Workspace)/db_migration/$(Build.BuildId)_migration.sql'
              IpDetectionMethod: 'AutoDetect'
              ConnectionString: "Server=tcp:$(dbServerName),1433;Initial Catalog=$(dbName);Persist Security Info=False;User ID=$(sqldb-username);Password=$(sqldb-password);MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
              
          - task: AzureAppServiceSettings@1
            displayName: Configure Azure Function AppSettings and ConnectionStrings
            inputs:
              azureSubscription: '$(azureSubscription)'
              appName: '$(functionAppName)'
              resourceGroupName: '$(resourceGroupName)'
              appSettings: |
                [
                  {
                    "name": "DirectoryUrl",
                    "value": "$(directoryUrl)",
                    "slotSetting": false
                  },
                  {
                      "name": "sqldb-username",
                      "value": "@Microsoft.KeyVault(VaultName=$(keyVaultName);SecretName=sqldb-username;SecretVersion=)",
                      "slotSetting": false
                  },
                  {
                      "name": "sqldb-password",
                      "value": "@Microsoft.KeyVault(VaultName=$(keyVaultName);SecretName=sqldb-password;SecretVersion=)",
                      "slotSetting": false
                  },
                  {
                      "name": "analytics-viewid",
                      "value": "@Microsoft.KeyVault(VaultName=$(keyVaultName);SecretName=analytics-viewid;SecretVersion=)",
                      "slotSetting": false
                  },
                  {
                      "name": "analytics-apikey",
                      "value": "@Microsoft.KeyVault(VaultName=$(keyVaultName);SecretName=analytics-apikey;SecretVersion=)",
                      "slotSetting": false
                  },
                  {
                      "name": "start-date",
                      "value": "2016-01-01",
                      "slotSetting": false
                  },
                  {
                      "name": "metric-threshold",
                      "value": 10,
                      "slotSetting": false
                  },
                  {
                      "name": "event-threshold",
                      "value": 30,
                      "slotSetting": false
                  },
                  {
                      "name": "filterby-host",
                      "value": true,
                      "slotSetting": false
                  },
                  {
                      "name": "directory-hostname",
                      "value": "directory.biobankinguk.org", 
                      "slotSetting": false
                  }

                ]

              ConnectionStrings: |
                [
                    {
                    "name": "analyticsdb_connection",
                    "value": "Server=tcp:$(dbServerName),1433;Initial Catalog=$(dbName);Persist Security Info=False;User ID={0};Password={1};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;",
                    "type": "SQLServer",
                    "slotSetting": false
                    }
                ]

