pool:
  name: Default

trigger:
  branches:
    include:
    - 'ApiToGithub'
  paths:
    include:
    - src/Api/*

variables:
  BuildConfiguration: 'release'
  BuildPlatform: 'release'


steps:
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
	command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*Tests/**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish Identity Provider'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/IdentityProvider/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory) --no-build'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish Submission API'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/SubmissionApi/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory) --no-build'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish Submission Job'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/SubmissionJob/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory) --no-build'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish Expiry Job'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/ExpiryJob/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory) --no-build'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
