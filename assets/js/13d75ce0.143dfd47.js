"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[731],{8570:(t,e,r)=>{r.d(e,{Zo:()=>s,kt:()=>b});var n=r(79);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var p=n.createContext({}),d=function(t){var e=n.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},s=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},c="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),c=d(r),m=a,b=c["".concat(p,".").concat(m)]||c[m]||u[m]||o;return r?n.createElement(b,i(i({ref:e},s),{},{components:r})):n.createElement(b,i({ref:e},s))}));function b(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l[c]="string"==typeof t?t:a,i[1]=l;for(var d=2;d<o;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8930:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=r(5675),a=(r(79),r(8570));const o={sidebar_position:2},i="Projects Structure",l={unversionedId:"dev/getting-started/structure",id:"dev/getting-started/structure",title:"Projects Structure",description:"app/",source:"@site/docs/dev/getting-started/structure.md",sourceDirName:"dev/getting-started",slug:"/dev/getting-started/structure",permalink:"/dev/getting-started/structure",draft:!1,editUrl:"https://github.com/biobankinguk/biobankinguk/edit/main/docs/docs/dev/getting-started/structure.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"devGuide",previous:{title:"Getting Started",permalink:"/dev/getting-started/"},next:{title:"Seed Data",permalink:"/dev/getting-started/seed-data"}},p={},d=[{value:"<code>app/</code>",id:"app",level:2},{value:"<code>lib/</code>",id:"lib",level:2}],s={toc:d},c="wrapper";function u(t){let{components:e,...r}=t;return(0,a.kt)(c,(0,n.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"projects-structure"},"Projects Structure"),(0,a.kt)("h2",{id:"app"},(0,a.kt)("inlineCode",{parentName:"h2"},"app/")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"app/")," folder contains application entrypoint projects for the stack. Currently there is only one application: the Directory."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Folder"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Directory/")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/dev/directory"},".NET 6 Web App"),", the core functionality of the Tissue Directory, and ",(0,a.kt)("a",{parentName:"td",href:"/dev/submissions/worker-jobs"},"workers for bulk submission of data")," to the directory database")))),(0,a.kt)("h2",{id:"lib"},(0,a.kt)("inlineCode",{parentName:"h2"},"lib/")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"lib/")," folder contains class library projects which support the functionality of the stack and the potential for multiple applications sharing functionality."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Folder"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Core/")),(0,a.kt)("td",{parentName:"tr",align:null},".NET 6 Central Class Libary of shared code with minimal shared dependencies")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Core/Jobs")),(0,a.kt)("td",{parentName:"tr",align:null},".NET 6 Collection of Worker Jobs used for background processes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Data/")),(0,a.kt)("td",{parentName:"tr",align:null},"EF Core 6 Database Context, Entity classes representing tables in the database, and Migrations for the directory database")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Omop/")),(0,a.kt)("td",{parentName:"tr",align:null},".NET 6 OMOP Database Context")))))}u.isMDXComponent=!0}}]);