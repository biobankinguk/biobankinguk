"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[255],{8570:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(79);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},247:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(5675),r=(n(79),n(8570));const i={sidebar_position:1},o="Overview",l={unversionedId:"dev/cli/index",id:"dev/cli/index",title:"Overview",description:"This is a Command Line tool useful for managing some application access tasks.",source:"@site/docs/dev/cli/index.md",sourceDirName:"dev/cli",slug:"/dev/cli/",permalink:"/dev/cli/",draft:!1,editUrl:"https://github.com/biobankinguk/biobankinguk/edit/main/docs/docs/dev/cli/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"devGuide",previous:{title:"\ud83d\udca1 pnpm cheatsheet",permalink:"/dev/getting-started/pnpm-cheatsheet"},next:{title:"api-clients",permalink:"/dev/cli/api"}},p={},s=[{value:"Usage",id:"usage",level:2},{value:"Base Command",id:"base-command",level:3},{value:"Commands",id:"commands",level:2},{value:"Options",id:"options",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Configuration Values",id:"configuration-values",level:3}],c={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"overview"},"Overview"),(0,r.kt)("p",null,"This is a Command Line tool useful for managing some application access tasks."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"It can be run from the source, or a build (distributed or built locally)."),(0,r.kt)("p",null,"Running from source requires the .NET ",(0,r.kt)("inlineCode",{parentName:"p"},"6.0.x")," SDK or newer."),(0,r.kt)("h3",{id:"base-command"},"Base Command"),(0,r.kt)("p",null,"Use the appropriate command from here and then add the command you want to run as documented below."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dotnet run --")," to run from source next to the ",(0,r.kt)("inlineCode",{parentName:"li"},"Directory.csproj"))),(0,r.kt)("p",null,"Get help with the ",(0,r.kt)("inlineCode",{parentName:"p"},"--help")," option."),(0,r.kt)("h2",{id:"commands"},"Commands"),(0,r.kt)("p",null,"The command line interface to administer the application, run commands as ",(0,r.kt)("inlineCode",{parentName:"p"},"dotnet run -- <COMMAND>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"cli/api"},(0,r.kt)("inlineCode",{parentName:"a"},"api-clients"))," : Actions for managing BiobankingUK ApiClients"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"cli/crypto"},(0,r.kt)("inlineCode",{parentName:"a"},"crypto"))," : Actions for working with secure identifiers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"cli/ref-data"},(0,r.kt)("inlineCode",{parentName:"a"},"ref-data"))," : Actions for managing BiobankingUK Reference Data"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"cli/users"},(0,r.kt)("inlineCode",{parentName:"a"},"users"))," : Actions for managing BiobankingUK Users")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-c")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"--connection-string")," ",(0,r.kt)("inlineCode",{parentName:"li"},"<CONNECTION-STRING>")," : Database Connection String if not specified in Configuration")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"It's a .NET Application, it supports the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/"},"usual Configuration Sources")," e.g."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"User Secrets"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"appsettings.json")),(0,r.kt)("li",{parentName:"ul"},"Environment Variables")),(0,r.kt)("h3",{id:"configuration-values"},"Configuration Values"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ConnectionStrings:Default")),(0,r.kt)("td",{parentName:"tr",align:null},"The Database connection string for commands which need it."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Server=(localdb)\\mssqllocaldb;Database=Biobanks"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Serilog")),(0,r.kt)("td",{parentName:"tr",align:null},"Serilog configuration"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/serilog/serilog-settings-configuration"},"Serilog docs"))))))}m.isMDXComponent=!0}}]);