"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[558],{8570:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(79);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9116:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(5675),a=(n(79),n(8570));const i={},o="crypto",l={unversionedId:"dev/cli/crypto",id:"dev/cli/crypto",title:"crypto",description:"generate-id",source:"@site/docs/dev/cli/crypto.md",sourceDirName:"dev/cli",slug:"/dev/cli/crypto",permalink:"/dev/cli/crypto",draft:!1,editUrl:"https://github.com/biobankinguk/biobankinguk/edit/main/docs/docs/dev/cli/crypto.md",tags:[],version:"current",frontMatter:{},sidebar:"devGuide",previous:{title:"api-clients",permalink:"/dev/cli/api"},next:{title:"ref-data",permalink:"/dev/cli/ref-data"}},c={},s=[{value:"<code>generate-id</code>",id:"generate-id",level:2},{value:"Command",id:"command",level:3},{value:"Options",id:"options",level:3},{value:"Usage Scenarios",id:"usage-scenarios",level:3},{value:"<code>hash</code>",id:"hash",level:2},{value:"Command",id:"command-1",level:3},{value:"Usage Scenarios",id:"usage-scenarios-1",level:3}],u={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"crypto"},(0,a.kt)("inlineCode",{parentName:"h1"},"crypto")),(0,a.kt)("h2",{id:"generate-id"},(0,a.kt)("inlineCode",{parentName:"h2"},"generate-id")),(0,a.kt)("p",null,"Generate a Secure Random Unique ID.\nThis can be used to generate cryptographically strong 256bit Random Unique IDs. This tool uses it to create Client IDs and Secrets."),(0,a.kt)("h3",{id:"command"},"Command"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"crypto generate-id"))),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-s")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"--hash")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"--sha")," : Also output a SHA256 hash of the ID in Base64Url format.")),(0,a.kt)("h3",{id:"usage-scenarios"},"Usage Scenarios"),(0,a.kt)("p",null,"Generate an ID for any purpose, including secure secrets."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"crypto generate-id"))),(0,a.kt)("p",null,"The generated ID (encoded as a Base64Url string) will be output."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"hash"},(0,a.kt)("inlineCode",{parentName:"h2"},"hash")),(0,a.kt)("p",null,"Hash a string. This can be used to hash a string in the same consistent way that everything in the codebase that manually hashes does. It uses SHA256."),(0,a.kt)("h3",{id:"command-1"},"Command"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"crypto hash <INPUT>"))),(0,a.kt)("h3",{id:"usage-scenarios-1"},"Usage Scenarios"),(0,a.kt)("p",null,"Output the SHA256 hash of a string value, as well the original input value."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"crypto hash <INPUT>"))),(0,a.kt)("p",null,"The original input string and the generated hash (encoded as a Base64Url string) will be output."))}d.isMDXComponent=!0}}]);