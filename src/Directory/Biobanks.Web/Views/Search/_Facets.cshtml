@using Biobanks.Web.Models.Search
@using Castle.Core.Internal
@using Newtonsoft.Json
@using Directory.Data.Constants
@model FacetsModel
@{
    var currentGroup = "";
}

<div class="col-sm-4">
    @if (!Model.Facets.IsNullOrEmpty())
    {
        var restrictionFacets = (IEnumerable<SearchFacetModel>)HttpContext.Current.Session["restrictionFacets"];

        foreach (var facet in restrictionFacets)
        {
            if (currentGroup != facet.GroupName)
            {
                if (!string.IsNullOrEmpty(currentGroup))
                {
                    @* Close panel *@
                    @Html.Raw("</div></div></div>")
                }

                currentGroup = facet.GroupName;

                var facetGroupNameId = $"FacetGroup{facet.GroupNameWithoutSpaces}";
                var facetGroupIconId = $"FacetGroupIcon{facet.GroupNameWithoutSpaces}";

                var facetGroupCollapsedCookieValue = Request.Cookies[$"{facetGroupNameId}Collapsed"]?.Value;

                var facetGroupCollapsed = facetGroupCollapsedCookieValue != null
                    ? Convert.ToBoolean(facetGroupCollapsedCookieValue)
                    : facet.GroupCollapsedByDefault;

                @* Open panel and place header. *@
                @Html.Raw("<div class=\"panel panel-default\">")

                <div class="panel-heading facet-group-header" role="button" data-toggle="collapse" data-target="#@(facetGroupNameId)"
                     aria-expanded="@((!facetGroupCollapsed).ToString())" aria-controls="@facetGroupNameId">

                    @facet.GroupName

                    @{
                        var groupSelectedCount = Model.Facets
                            .Where(x => x.GroupName == currentGroup)
                            .Count(y => Model.SelectedFacets.Any(sf => y.FacetValues.Select(fv => fv.FacetId).Contains(sf)));
                    }

                    <span id="@facetGroupIconId" class="facet-group-icon fa @Html.Raw(facetGroupCollapsed ? "fa-plus-square" : "fa-minus-square") pull-right"></span>

                    @if (groupSelectedCount > 0)
                    {
                        <span class="badge facet-group-badge pull-right">@groupSelectedCount in use</span>
                    }
                </div>

                @* Open panel body. *@
                @Html.Raw($"<div id=\"{facetGroupNameId}\" class=\"panel-body facet-group {(facetGroupCollapsed ? "collapse" : "collapse in")}\" data-icon-id=\"{facetGroupIconId}\">")
                @Html.Raw("<div class=\"collapse-panel-body\">")
            }

            <div class="facet-container">
                <p class="facet-header">

                    @switch (facet.Name)
                    {
                        case "Preservation Type":
                            <strong>@App.Config[ConfigKey.PreservationTypeName]</strong>
                            break;
                        case "Donor Count":
                            <strong>@App.Config[ConfigKey.DonorCountName]</strong>
                            break;
                        case "Macroscopic Assessment":
                            <strong>@App.Config[ConfigKey.MacroscopicAssessmentName]</strong>
                            break;
                        default:
                            <strong>@facet.Name</strong>
                            break;
                    }

                </p>

                <ul class="facet-list fa-ul">
                    @foreach (var facetValue in facet.FacetValues)
                    {
                        if (!Model.FacetSelected(facetValue.FacetId))
                        {
                            <li>
                                <a href="@Url.Action(Model.Action, "Search", new
                                         {
                                             diagnosis = Model.Diagnosis,
                                             selectedFacets = JsonConvert.SerializeObject(Model.SelectedFacets.Concat(new List<string>
                                             {
                                                 facetValue.FacetId
                                             }))
                                         })">
                                    <span class="fa fa-circle-o"></span>
                                    @facetValue.FacetValue
                                </a>
                                <span class="facet-count">(@facetValue.Count)</span>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a href="@Url.Action(Model.Action, "Search", new
                                         {
                                             diagnosis = Model.Diagnosis,
                                             selectedFacets = JsonConvert.SerializeObject(Model.SelectedFacets.Where(
                                                 x => x != facetValue.FacetId))
                                         })">
                                    <span class="fa fa-check-circle"></span>
                                    @facetValue.FacetValue
                                </a>
                                (@facetValue.Count)
                            </li>
                        }
                    }
                </ul>
            </div>

        }

        @Html.Raw("</div></div></div>")
    }
</div>