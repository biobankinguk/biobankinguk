@using System.Web.Optimization
@using Newtonsoft.Json
@model Biobanks.Web.Models.Biobank.EditSampleSetModel
@{
    ViewBag.Title = "Edit sample set";
}

@section FooterScripts
{
    @Scripts.Render("~/bundles/bootbox")
    @Scripts.Render("~/bundles/datatables")
    @Scripts.Render("~/bundles/collection-sample-sets")
    @Scripts.Render("~/bundles/help-buttons")

    <script>
        $(function () {
            // Donor Count
            lookup.donorCounts(ko.utils.arrayMap(@Html.Raw(JsonConvert.SerializeObject(Model.DonorCounts)), function (x) {
                return new RadioBinding(x.Id, x.Description, x.SortOrder);
            }));

            sampleSetVM.donorCount(@Html.Raw(Model.DonorCountSliderPosition));

            // Material Type
            lookup.materialTypes(ko.utils.arrayMap(@Html.Raw(JsonConvert.SerializeObject(Model.MaterialTypes)), function (x) {
                return new RadioBinding(x.Id, x.Description, x.SortOrder);
            }));

            // Preservation Type
            lookup.preservationTypes(ko.utils.arrayMap(@Html.Raw(JsonConvert.SerializeObject(Model.PreservationTypes)), function (x) {
                return new RadioBinding(x.Id, x.Description, x.SortOrder);
            }));

            // Percentage
            lookup.percentages(ko.utils.arrayMap(@Html.Raw(JsonConvert.SerializeObject(Model.Percentages)), function (x) {
                return new RadioBinding(x.Id, x.Description, x.SortOrder);
            }));

            // Macroscopic Assessment
            lookup.macroscopicAssessments(ko.utils.arrayMap(@Html.Raw(JsonConvert.SerializeObject(Model.MacroscopicAssessments)), function(x) {
                return new RadioBinding(x.Id, x.Description, x.SortOrder);
            }));

            // Select only value as default
            if (lookup.macroscopicAssessments().length == 1) {
                sampleSetVM.modal.materialPreservationDetail().macroscopicAssessment(
                    lookup.macroscopicAssessments()[0].value
                )
            }

            // Material Preservation Details
            @if (!string.IsNullOrEmpty(Model.MaterialPreservationDetailsJson))
            {
                @:sampleSetVM.materialPreservationDetails(ko.utils.arrayMap(@Html.Raw(Model.MaterialPreservationDetailsJson), function(x)
                @:{
                @:    return new MaterialPreservationDetail(x.materialType, x.preservationType, x.percentage, x.macroscopicAssessment);
                @:}));
            }
        });
    </script>
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("EditSampleSet", "Biobank", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    @Html.Partial("_SampleSetSharedFields")

    <div class="form-group">
        <div class="col-sm-12 text-center">
            @Html.ActionLink("Cancel", "SampleSet", new { id = Model.Id }, new { @class = "btn btn-default" })
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.CollectionId)
            <button type="submit" class="btn btn-primary">Update sample set</button>
        </div>
    </div>
}