@using System.Web.Optimization
@using Biobanks.Directory.Data.Constants
@model Biobanks.Web.Models.Biobank.BiobankDetailsModel

@{
    ViewBag.Title = "Edit " + App.Config[ConfigKey.SampleResourceName] + " details";
}

<h2>Edit @App.Config[ConfigKey.SampleResourceName] details</h2>

@using (Html.BeginForm("Edit", "Biobank",
    FormMethod.Post,
    new { @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.BiobankId)
    @Html.HiddenFor(x => x.BiobankExternalId)
    @Html.HiddenFor(x => x.OrganisationTypeId)
    @Html.HiddenFor(x => x.LogoName)

    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelFor(x => x.OrganisationName, new { @class = "required" })
            <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-resource-name"></span>
        </div>

        <div class="col-sm-6">
            @Html.TextBoxFor(x => x.OrganisationName, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.OrganisationName)
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelFor(x => x.Description, new { @class = "required" })
            <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-resource-description"></span>
        </div>

        <div class="col-sm-6">
            @Html.TextAreaFor(x => x.Description, new { @class = "form-control", rows = 5 })
            @Html.ValidationMessageFor(x => x.Description)
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelFor(x => x.Url)
            <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-resource-url"></span>
        </div>

        <div class="col-sm-6">
            @Html.TextBoxFor(x => x.Url, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelFor(x => x.ContactEmail, new { @class = "required" })
            <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-resource-contactemail"></span>
        </div>

        <div class="col-sm-6">
            @Html.TextBoxFor(x => x.ContactEmail, new { @class = "form-control", type = "email" })
            @Html.ValidationMessageFor(x => x.ContactEmail)
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelFor(x => x.ContactNumber)
            <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-resource-contactnumber"></span>
        </div>

        <div class="col-sm-6">
            @Html.TextBoxFor(x => x.ContactNumber, new { @class = "form-control", type = "tel" })
            @Html.ValidationMessageFor(x => x.ContactNumber)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Logo, new { @class = "col-sm-3 control-label" })

        <div class="col-sm-6">
            <div class="padded-logo">
                @if (string.IsNullOrEmpty(Model.LogoName))
                {
                    <img class="logo-img bordered-logo" id="TempBiobankLogo" src="@Url.Content("~/Content/images/NoLogo.png")" alt="Biobank Logo" />
                }
                else
                {
                    <img class="logo-img bordered-logo" id="TempBiobankLogo" src="@Url.Action("Index", "Logo", new {logoName = Model.LogoName})" alt="Biobank Logo" />
                }
            </div>

            <div id="BiobankLogoUploadError" class="alert alert-danger" role="alert" style="margin-bottom: 20px; display: none;">Error Message Will Go Here!</div>

            @Html.EditorFor(x => x.Logo, new { @class = "form-control" })
            <button type="button" id="BiobankLogoFileDialogueTrigger" class="btn btn-success">Select New Logo</button>
            <button type="button" id="RemoveBiobankLogoTrigger" class="btn btn-default">Remove Logo</button>
            @Html.HiddenFor(x => x.RemoveLogo)
        </div>
    </div>

    <h4>Address Details <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-resource-address"></span></h4>

    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelFor(x => x.AddressLine1, new { @class = "required" })

        </div>

        <div class="col-sm-6">
            @Html.TextBoxFor(x => x.AddressLine1, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.AddressLine1)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-3 col-sm-6">
            @Html.TextBoxFor(x => x.AddressLine2, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-3 col-sm-6">
            @Html.TextBoxFor(x => x.AddressLine3, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-3 col-sm-6">
            @Html.TextBoxFor(x => x.AddressLine4, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.City, new { @class = "col-sm-3 control-label required" })
        <div class="col-sm-6">
            @Html.TextBoxFor(x => x.City, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.City)
        </div>
    </div>

    if (App.Config[ConfigKey.ShowCounties] == "true")
    {
        <div class="form-group">
            @Html.LabelFor(x => x.CountyId, new { @class = "col-sm-3 control-label required" })
            <div class="col-sm-6">
                @Html.DropDownListFor(x => x.CountyId, new SelectList(items: Model.Counties.OrderBy(x => x.Country.Value).ThenBy(x => x.Value), dataValueField: "Id", dataTextField: "Value", dataGroupField: "Country.Value", selectedValue: null), "Select County", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CountyId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.CountryId, new { @class = "col-sm-3 control-label required" })
            <div class="col-sm-6">
                @Html.DropDownListFor(x => x.CountryId, new SelectList(Model.Countries, "Id", "Value"), "Select Country", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CountryId)
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(x => x.CountryId, new { @class = "col-sm-3 control-label required" })
            <div class="col-sm-6">
                @Html.DropDownListFor(x => x.CountryId, new SelectList(Model.Countries, "Id", "Value"), "Select Country", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CountryId)
            </div>
        </div>
    }


    <div class="form-group">
        @Html.LabelFor(x => x.Postcode, new { @class = "col-sm-3 control-label required" })
        <div class="col-sm-2">
            @Html.TextBoxFor(x => x.Postcode, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Postcode)
        </div>
    </div>

    <h4>Governance Compliance</h4>

    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelFor(x => x.GoverningInstitution, new { @class = "required" })
            <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-resource-institution"></span>
        </div>
        <div class="col-sm-6">
            @Html.TextBoxFor(x => x.GoverningInstitution, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.GoverningInstitution)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.GoverningDepartment, new { @class = "col-sm-3 control-label" })
        <div class="col-sm-6">
            @Html.TextBoxFor(x => x.GoverningDepartment, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-3 control-label">
            @*@Html.LabelFor(x => x.EthicsRegistration)*@
            <label id="EthicsRegistration">@App.Config[ConfigKey.EthicsFieldName]</label>
            <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-resource-ethicsregistration"></span>
        </div>

        <div class="col-sm-6">

            @if (App.Config[ConfigKey.EthicsFieldIsCheckbox] == "true")
            {
                @*uncheck is simply a null value, otherwise checked is given text TRUE*@
                <input checked="@(!String.IsNullOrEmpty(Model.EthicsRegistration)? "checked" : null)"
                       id="EthicsRegistration"
                       name="EthicsRegistration"
                       type="checkbox"
                       value="TRUE" />
            }
            else //free text
            {
                @Html.TextBoxFor(x => x.EthicsRegistration, new { @class = "form-control" })
            }

        </div>
    </div>

    <h4>Services <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-resource-services"></span></h4>

    <div class="form-group">
        <div class="col-sm-offset-3 col-sm-4">
            @Html.EditorFor(x => x.ServiceModels)
        </div>
    </div>

    if (App.Config[ConfigKey.EnableDataSharing] == "true")
    {
        <h4>Data sharing settings <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-resource-datasharingsettings"></span></h4>

        <div class="form-group">
            <div class="col-sm-offset-3 col-sm-4">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(x => x.SharingOptOut)
                        @Html.DisplayNameFor(x => x.SharingOptOut)
                    </label>
                </div>
            </div>
        </div>
    }

    <h4>Reasons for Registering <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-resource-reasonsforregistering"></span></h4>

    <div class="form-group">
        <div class="col-sm-offset-3 col-sm-6">
            @Html.EditorFor(x => x.RegistrationReasons)
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelFor(x => x.OtherRegistrationReason)
        </div>
        <div class="col-sm-6">
            @Html.TextBoxFor(x => x.OtherRegistrationReason, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.OtherRegistrationReason)
        </div>
    </div>

    @Html.HiddenFor(x => x.AccessConditionId)
    @Html.HiddenFor(x => x.CollectionTypeId)

    @* TODO: 'other' registration reason *@

    <div class="form-group">
        <div class="col-sm-12 text-center">
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
            <button type="submit" class="btn btn-primary">Update details</button>
        </div>
    </div>
}

@section FooterScripts
{
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/biobank/edit-details")
    @Scripts.Render("~/bundles/help-buttons")
}