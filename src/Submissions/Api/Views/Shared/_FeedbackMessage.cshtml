@using Biobanks.Submissions.Api.Controllers
@using Biobanks.Submissions.Api.Utilities;
@using static Biobanks.Submissions.Api.Utilities.TemporaryFeedbackMessageExtensions
@{
    var model = (FeedbackMessage)TempData[FeedbackMessageKey.FeedbackMessage];
}

@if (!string.IsNullOrEmpty(model?.Message))
{
    string alertTypeClass;

    switch (model.Type)
    {
        case FeedbackMessageType.Success:
            alertTypeClass = "alert-success";
            break;
        case FeedbackMessageType.Warning:
            alertTypeClass = "alert-warning";
            break;
        case FeedbackMessageType.Danger:
            alertTypeClass = "alert-danger";
            break;
        case FeedbackMessageType.Info:
        default:
            alertTypeClass = "alert-info";
            break;
    }
    <div class="container">
        <div class="row">
            <div class="col-sm-12">
                <div class="alert @alertTypeClass feedback-message @Html.Raw(ViewContext.RouteData.Values["controller"].ToString() == "Home" ? "feedback-message-home" : "")" role="alert">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    @if (model.ContainsHtml)
                    {
                        WriteLiteral(model.Message);
                    }
                    else
                    {
                        Write(model.Message);
                    }
                </div>
            </div>
        </div>
    </div>
}
