@using Biobanks.Submissions.Api.Constants
@using System.Text.Json
@using cloudscribe.Web.Navigation
@model NavigationViewModel
@if (Model.CurrentNode != null && Model.ParentChain.Count > 1)
{
    <ol class="breadcrumb">
    @foreach (var node in Model.ParentChain)
    {
        var networks = User.FindAll(CustomClaimType.Network).ToDictionary(x => JsonSerializer
          .Deserialize<KeyValuePair<int, string>>(x.Value).Key, x => JsonSerializer
          .Deserialize<KeyValuePair<int, string>>(x.Value).Value);

        var biobanks = User.FindAll(CustomClaimType.Biobank).ToDictionary(x => JsonSerializer
        .Deserialize<KeyValuePair<int, string>>(x.Value).Key, x => JsonSerializer
        .Deserialize<KeyValuePair<int, string>>(x.Value).Value);


           var biobankId = ViewContext.RouteData.Values["biobankId"];
           var networkId = ViewContext.RouteData.Values["networkId"];

            if (!(await Model.ShouldAllowView(node))) { continue; }
            if (node.Value.Key == "ActiveOrganisationName")
            {
                if((node.Value.Area) == "Biobank")
                {
                    int intBiobankId = Int32.Parse(biobankId.ToString());

                    var biobankName = biobanks[intBiobankId];

                    <li><a href='@Url.Action("Index","Profile",new {area = "Biobank" ,biobankId = intBiobankId})' >@biobankName</a><span class="divider"></span></li>
                }
            }
            else if (node.Value.Key == "ActiveNetworkName")
            {
                if((node.Value.Area) == "Network")
                {
                    int intNetworkId = Int32.Parse(networkId.ToString());

                    var networkName = networks[intNetworkId];

                    <li><a href=@Url.Action("Biobanks","Profile", new { area = "Network",networkId = intNetworkId} ) >@networkName</a><span class="divider"></span></li>
                }
            }
            else if (node.EqualsNode(Model.CurrentNode))
            {
              if (Model.TailCrumbs != null)
              {
              <li><a href="@Url.Content(Model.AdjustUrl(node))">@Model.AdjustText(node)</a><span class="divider"></span></li>
              }
              else
              {
              <li class="active">@Model.AdjustText(node)</li>
              }
            }
        else
        {
            <li><a href="@Url.Content(Model.AdjustUrl(node))">@Model.AdjustText(node)</a><span class="divider"></span></li>
        }
    }
    </ol>
}
