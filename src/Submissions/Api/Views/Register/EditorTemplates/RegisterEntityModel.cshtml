@model Biobanks.Submissions.Api.Models.Register.RegisterEntityModel;
@inject Biobanks.Submissions.Api.Services.Directory.IConfigService _config


@Html.HiddenFor(x => x.AdacInvited)
<input name="AcceptTerms" type="checkbox" style="display:none !important" autocomplete="off" value="false"/>

<div class="form-group">

        @if (Model.EntityName == "Biobank")
        {

            @Html.Label("Entity", await _config.GetSiteConfigValue(ConfigKey.SampleResourceName) + " name", new { @class = "col-sm-3 control-label required"})
            <div class="col-sm-9">

                @Html.TextBoxFor(x => x.Entity, new { @class = "form-control", placeholder = $"My " + await _config.GetSiteConfigValue(ConfigKey.SampleResourceName)})
                @Html.ValidationMessageFor(x => x.Entity)

            </div>

        }
        else
        {
                @Html.Label("Entity",  $"{@Model.EntityName} name", new { @class = "col-sm-3 control-label required"})
                <div class="col-sm-9">

                    @Html.TextBoxFor(x => x.Entity, new { @class = "form-control", placeholder = $"My {@Model.EntityName}" })
                    @Html.ValidationMessageFor(x => x.Entity)

                </div>

                    }
                </div>

<div class="form-group">
    @Html.LabelFor(x => x.Name, new {@class = "col-sm-3 control-label required" })
    <div class="col-sm-9">
        @Html.TextBoxFor(x => x.Name, new {@class = "form-control", placeholder="John Smith"})
        @Html.ValidationMessageFor(x => x.Name)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(x => x.Email, new {@class = "col-sm-3 control-label required" })
    <div class="col-sm-9">
        @Html.TextBoxFor(x => x.Email, new {@class = "form-control", type="email", placeholder="john.smith@example.com"})
        @Html.ValidationMessageFor(x => x.Email)
    </div>
</div>
