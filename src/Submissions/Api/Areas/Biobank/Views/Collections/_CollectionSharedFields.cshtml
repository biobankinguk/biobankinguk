@using System.Configuration
@model Biobanks.Submissions.Api.Areas.Biobank.Models.Collections.AbstractCRUDCollectionModel

<div id="bloodhound" class="form-group">
    <label for="Diagnosis" class="col-sm-4 control-label required">
        @Html.DisplayNameFor(x => x.Diagnosis)
        <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-diseasestatus"></span>
        <span id="support-email" data-email="@ConfigurationManager.AppSettings["AdacSupportEmail"]"></span>
    </label>
    <div class="col-sm-8">
      @Html.TextBoxFor(x => x.Diagnosis, 
        new 
        { 
          @class = "form-control diagnosis-search", 
          autocomplete = "off",
          data_search_url = Url.Action("ListOntologyTerms", "Search"),
          data_resource_url = Url.Action("GetAssociatedDataTypeViewsAjax", "Collections", new { Area = "Biobank", biobankId = ViewContext.RouteData.Values["biobankId"] }) 
        })
      @Html.ValidationMessageFor(x => x.Diagnosis)
    </div>
</div>

<div class="form-group">
    <div class="col-sm-4 control-label">
        @Html.LabelFor(x => x.Title)
        <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-collection-title"></span>
    </div>

    <div class="col-sm-8">
        @Html.TextAreaFor(x => x.Title, new { @class = "form-control", rows = "2" })
        @Html.ValidationMessageFor(x => x.Title)
    </div>
</div>

<div class="form-group">
    <div class="col-sm-4 control-label">
        @Html.LabelFor(x => x.Description)
        <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-collection-description"></span>
    </div>

    <div class="col-sm-8">
        @Html.TextAreaFor(x => x.Description, new { @class = "form-control", rows = "2" })
        @Html.ValidationMessageFor(x => x.Description)
    </div>
</div>

<div class="form-group">
    <div class="col-sm-4 control-label required">
        @Html.LabelFor(x => x.StartDate)
        <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-collection-yearstarted"></span>
    </div>
    <div class="col-sm-3">
        @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control", type = "number" })
    </div>
    <div class="col-sm-offset-4 col-sm-8">
        @Html.ValidationMessageFor(x => x.StartDate)
    </div>
</div>

@Html.HiddenFor(x => x.FromApi)

<div class="form-group">
    <div class="col-sm-10 col-sm-offset-1">
        <h4 class="required">
            @Html.DisplayNameFor(x => x.AccessCondition)
            <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-collection-accesscondition"></span>
        </h4>
    </div>
    <div class="col-sm-10 col-sm-offset-2">
        <div class="col-sm-6">
            @for (var i = 0; i < Model.AccessConditions.Count(); i++)
            {
                var accessCondition = Model.AccessConditions.ElementAt(i);

                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(x => x.AccessCondition, accessCondition.Id)
                        @Html.Raw(accessCondition.Description)
                    </label>
                </div>

                if (i == Math.Ceiling((decimal)Model.AccessConditions.Count() / 2) - 1)
                {
                    @Html.Raw("</div>\n<div class=\"col-sm-6\">")
                }
            }
        </div>
        @Html.ValidationMessageFor(x => x.AccessCondition)
    </div>
</div>

<div class="form-group">
    <div class="col-sm-10 col-sm-offset-1">
        <h4>
            @Html.DisplayNameFor(x => x.CollectionType)
            <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-collection-collectiontype"></span>
        </h4>
    </div>
    <div class="col-sm-10 col-sm-offset-2">
        <div class="col-sm-6">
            @for (var i = 0; i < Model.CollectionTypes.Count(); i++)
            {
                var collectionType = Model.CollectionTypes.ElementAt(i);

                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(x => x.CollectionType, collectionType.Id)
                        @Html.Raw(collectionType.Description)
                    </label>
                </div>

                if (i == Math.Ceiling((decimal)Model.CollectionTypes.Count() / 2) - 1)
                {
                    @Html.Raw("</div>\n<div class=\"col-sm-6\">")
                }
            }
        </div>
        <div class="col-sm-12">
            @Html.ValidationMessageFor(x => x.CollectionType)
        </div>
    </div>
</div>

<div class="form-group">
    <div class="col-sm-10 col-sm-offset-1">
        <h4 class="required">
            @Html.DisplayNameFor(x => x.CollectionStatus)
            <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-collection-collectionstatus"></span>
        </h4>
    </div>
    <div class="col-sm-10 col-sm-offset-2">
        @foreach (var collectionStatus in Model.CollectionStatuses)
        {
            <div class="col-sm-12 radio">
                <label>
                    @Html.RadioButtonFor(x => x.CollectionStatus, collectionStatus.Id)
                    @Html.Raw(collectionStatus.Description)
                </label>
            </div>
        }
        @Html.ValidationMessageFor(x => x.CollectionStatus)
    </div>
</div>

<div class="form-group">
    <div class="col-sm-10 col-sm-offset-1">
        <h4 class="required">
            @Html.DisplayNameFor(x => x.ConsentRestrictions)

            <span class="fa fa-info-circle help-icon-button help-icon-for-label help-label-collection-contentrestrictions"></span>
        </h4>
    </div>
    <div class="col-sm-10 col-sm-offset-2">
        @Html.EditorFor(x => x.ConsentRestrictions)
    </div>
</div>

@await Html.PartialAsync("_AssociatedData", Model)
